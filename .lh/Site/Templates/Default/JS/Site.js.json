{
    "sourceFile": "Site/Templates/Default/JS/Site.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 45,
            "patches": [
                {
                    "date": 1742938217264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742938377030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,32 @@\n+\r\n+/* ############## LOADING ############## */\r\n+\r\n+document.addEventListener(\"DOMContentLoaded\", function () {\r\n+    setTimeout(() => {\r\n+        let loader = document.getElementById(\"LoadingPage\");\r\n+        if (loader) {\r\n+            loader.style.transition = \"opacity 0.5s\";\r\n+            loader.style.opacity = \"0\";\r\n+\r\n+            setTimeout(() => {\r\n+                loader.style.display = \"none\";\r\n+                let site = document.getElementById(\"Site\");\r\n+                if (site) {\r\n+                    site.style.display = \"block\";\r\n+                } else {\r\n+                    console.error(\"Elemento com ID 'Site' não encontrado.\");\r\n+                }\r\n+            }, 500);\r\n+        } else {\r\n+            console.error(\"Elemento com ID 'LoadingPage' não encontrado.\");\r\n+        }\r\n+    }, 2000);\r\n+});\r\n+\r\n+\r\n+/* ############## BUSCA RECEITA ############## */\r\n+\r\n // Função auxiliar para remover formatação do CNPJ\r\n function limparCNPJ(cnpj) {\r\n     return cnpj.replace(/\\D/g, ''); // Remove todos os caracteres não numéricos\r\n }\r\n@@ -194,8 +222,10 @@\n         }\r\n     }\r\n ];\r\n \r\n+/* ############## BUSCA CEP ############## */\r\n+\r\n function consultarCNPJ(cnpj, index = 0) {\r\n     if (index >= apiEndpoints.length) {\r\n         alert('Nenhuma FORNECEDOR retornou dados válidos.');\r\n         return;\r\n@@ -245,13 +275,13 @@\n     document.getElementById('atividadePrincipal').value = data.atividadePrincipal || '';\r\n     document.getElementById('atividadesSecundarias').value = data.atividadesSecundarias || '';\r\n     document.getElementById('socios').value = data.socios || '';\r\n }\r\n-</script >\r\n \r\n \r\n-    <script>\r\n \r\n+\r\n+\r\n         function limpa_formulário_cep() {\r\n             //Limpa valores do formulário de cep.\r\n             document.getElementById('rua').value = (\"\");\r\n         document.getElementById('bairro').value = (\"\");\r\n@@ -275,9 +305,9 @@\n         alert(\"CEP não encontrado.\");\r\n     }\r\n }\r\n \r\n-        function pesquisacep(valor) {\r\n+   function pesquisacep(valor) {\r\n \r\n     //Nova variável \"cep\" somente com dígitos.\r\n     var cep = valor.replace(/\\D/g, '');\r\n \r\n"
                },
                {
                    "date": 1742938408235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,25 @@\n     }, 2000);\r\n });\r\n \r\n \r\n+/* ############## SLIDER ############## */\r\n+\r\n+$(document).ready(function () {\r\n+    $('.SliderHome').slick({\r\n+        autoplay: true,\r\n+        fade: true,\r\n+        autoplaySpeed: 2000,\r\n+        infinite: true,\r\n+        dots: true,\r\n+        speed: 600,\r\n+        slidesToShow: 1,\r\n+        slidesToScroll: 1\r\n+\r\n+    });\r\n+});\r\n+\r\n+\r\n /* ############## BUSCA RECEITA ############## */\r\n \r\n // Função auxiliar para remover formatação do CNPJ\r\n function limparCNPJ(cnpj) {\r\n"
                },
                {
                    "date": 1742994166283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,207 +40,241 @@\n     });\r\n });\r\n \r\n \r\n-/* ############## BUSCA RECEITA ############## */\r\n+/* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n-// Função auxiliar para remover formatação do CNPJ\r\n-function limparCNPJ(cnpj) {\r\n-    return cnpj.replace(/\\D/g, ''); // Remove todos os caracteres não numéricos\r\n-}\r\n+/* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n-// Função auxiliar para construir a URL, considerando o token se houver\r\n-function buildApiUrl(api, cnpj) {\r\n-    let url = api.url + cnpj;\r\n-    if (api.token) {\r\n-        url += '?token=' + encodeURIComponent(api.token);\r\n-    }\r\n-    return url;\r\n-}\r\n+// Função debounce para otimização de requisições [[7]]\r\n+const debounce = (func, delay = 500) => {\r\n+    let timer;\r\n+    return (...args) => {\r\n+        clearTimeout(timer);\r\n+        timer = setTimeout(() => func.apply(this, args), delay);\r\n+    };\r\n+};\r\n \r\n-// Verifica o tamanho do CNPJ e dispara a consulta\r\n-document.getElementById('CNPJ_Busca').addEventListener('input', function () {\r\n-    let cnpj = this.value;\r\n+// Validação completa de CNPJ com dígitos verificadores [[6]]\r\n+const validarCNPJ = (cnpj) => {\r\n+    const cleanCnpj = cnpj.replace(/\\D/g, '');\r\n+    const regex = /^\\d{14}$/;\r\n+    \r\n+    if (!regex.test(cleanCnpj)) return false;\r\n+    \r\n+    const digits = cleanCnpj.split('').map(Number);\r\n+    const calc = (pos) => {\r\n+        let sum = 0;\r\n+        let index = 0;\r\n+        for (let i = pos - 7; i <= pos; i++) {\r\n+            sum += digits[i] * ((pos + 1) - index++);\r\n+        }\r\n+        const rest = sum % 11;\r\n+        return rest < 2 ? 0 : 11 - rest;\r\n+    };\r\n+    \r\n+    return calc(12) === digits[12] && calc(13) === digits[13];\r\n+};\r\n \r\n-    if (cnpj.length === 18) {\r\n-        cnpj = limparCNPJ(cnpj); // Remove formatação e mantém apenas números\r\n-    }\r\n+// Formatação visual do CNPJ [[5]]\r\n+const formatarCNPJ = (cnpj) => {\r\n+    return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})$/, \"$1.$2.$3/$4-$5\");\r\n+};\r\n \r\n-    if (cnpj.length < 14) {\r\n-        alert('O CNPJ inserido tem menos de 14 caracteres numéricos.');\r\n-        return;\r\n-    }\r\n-\r\n-    if (cnpj.length > 14) {\r\n-        alert('O CNPJ inserido tem mais de 14 caracteres numéricos. Verifique se está correto.');\r\n-        return;\r\n-    }\r\n-\r\n-    // Se chegou até aqui, o CNPJ está com 14 números e pode ser consultado\r\n-    consultarCNPJ(cnpj);\r\n-});\r\n-\r\n-// Lista de APIs para consulta do CNPJ\r\n+// Configuração de APIs com correções de estrutura\r\n const apiEndpoints = [\r\n     {\r\n         name: 'Receitaws',\r\n         url: 'https://receitaws.com.br/v1/cnpj/',\r\n-        mapping: function (data) {\r\n-            return {\r\n-                razaoSocial: data.nome,\r\n-                nomeFantasia: data.fantasia,\r\n-                dataInicio: data.abertura,\r\n-                telefone1: data.telefone,\r\n-                email: data.email,\r\n-                capitalSocial: data.capital_social,\r\n-                situacao: data.situacao,\r\n-                logradouro: data.logradouro,\r\n-                numero: data.numero,\r\n-                complemento: data.complemento,\r\n-                bairro: data.bairro,\r\n-                municipio: data.municipio,\r\n-                uf: data.uf,\r\n-                cep: data.cep,\r\n-                simples: data.simples && data.simples.optante ? 'Sim' : 'Não',\r\n-                mei: data.simei && data.simei.optante ? 'Sim' : 'Não',\r\n-                atividadePrincipal: data.atividade_principal?.[0]?.code + ' - ' + data.atividade_principal?.[0]?.text || '',\r\n-                atividadesSecundarias: data.atividades_secundarias?.map(item => item.code + ' - ' + item.text).join(', ') || '',\r\n-                socios: data.qsa?.map(item => item.nome + ' (' + item.cnpj_cpf_do_socio + ')').join(', ') || 'Não informado'\r\n-            };\r\n-        },\r\n-        validate: function (data) {\r\n-            return data.status === \"OK\";\r\n-        }\r\n+        validate: data => data.status === \"OK\",\r\n+        mapping: data => ({\r\n+            razaoSocial: data.nome,\r\n+            nomeFantasia: data.fantasia,\r\n+            dataInicio: data.abertura,\r\n+            telefone1: data.telefone,\r\n+            email: data.email,\r\n+            capitalSocial: data.capital_social,\r\n+            situacao: data.situacao,\r\n+            logradouro: data.logradouro,\r\n+            numero: data.numero,\r\n+            complemento: data.complemento,\r\n+            bairro: data.bairro,\r\n+            municipio: data.municipio,\r\n+            uf: data.uf,\r\n+            cep: data.cep,\r\n+            simples: data.simples?.optante ? 'Sim' : 'Não',\r\n+            mei: data.simei?.optante ? 'Sim' : 'Não',\r\n+            atividadePrincipal: data.atividade_principal?.[0]?.code + ' - ' + data.atividade_principal?.[0]?.text || '',\r\n+            atividadesSecundarias: data.atividades_secundarias?.map(item => item.code + ' - ' + item.text).join(', ') || '',\r\n+            socios: data.qsa?.map(item => item.nome + ' (' + item.cnpj_cpf_do_socio + ')').join(', ') || 'Não informado'\r\n+        })\r\n     },\r\n     {\r\n         name: 'MinhaReceita',\r\n         url: 'https://minhareceita.org/',\r\n-        mapping: function (data) {\r\n-            return {\r\n-                razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia,\r\n-                dataInicio: data.data_situacao_cadastral || '',\r\n-                telefone1: data.ddd_telefone_1 || '',\r\n-                email: data.email || '',\r\n-                capitalSocial: data.capital_social,\r\n-                situacao: data.situacao_cadastral ? data.descricao_situacao_cadastral : '',\r\n-                logradouro: data.logradouro,\r\n-                numero: data.numero,\r\n-                complemento: data.complemento,\r\n-                bairro: data.bairro,\r\n-                municipio: data.municipio,\r\n-                uf: data.uf,\r\n-                cep: data.cep,\r\n-                simples: data.opcao_pelo_simples ? 'Sim' : 'Não',\r\n-                mei: data.opcao_pelo_mei ? 'Sim' : 'Não',\r\n-                atividadePrincipal: data.cnae_fiscal ? data.cnae_fiscal.toString() : '',\r\n-                atividadesSecundarias: (data.cnaes_secundarios && data.cnaes_secundarios.length)\r\n-                    ? data.cnaes_secundarios.map(item => item.codigo + ' - ' + item.descricao).join(', ')\r\n-                    : '',\r\n-                socios: (data.qsa && data.qsa.length)\r\n-                    ? data.qsa.map(item => item.nome_socio + ' (' + item.cnpj_cpf_do_socio + ')').join(', ')\r\n-                    : 'Não informado'\r\n-            };\r\n-        },\r\n-        validate: function (data) {\r\n-            return data.razao_social !== undefined;\r\n-        }\r\n+        validate: data => !!data.razao_social,\r\n+        mapping: data => ({\r\n+            razaoSocial: data.razao_social,\r\n+            nomeFantasia: data.nome_fantasia,\r\n+            dataInicio: data.data_situacao_cadastral || '',\r\n+            telefone1: data.ddd_telefone_1 || '',\r\n+            email: data.email || '',\r\n+            capitalSocial: data.capital_social,\r\n+            situacao: data.descricao_situacao_cadastral || '',\r\n+            logradouro: data.logradouro,\r\n+            numero: data.numero,\r\n+            complemento: data.complemento,\r\n+            bairro: data.bairro,\r\n+            municipio: data.municipio,\r\n+            uf: data.uf,\r\n+            cep: data.cep,\r\n+            simples: data.opcao_pelo_simples ? 'Sim' : 'Não',\r\n+            mei: data.opcao_pelo_mei ? 'Sim' : 'Não',\r\n+            atividadePrincipal: data.cnae_fiscal?.toString() || '',\r\n+            atividadesSecundarias: data.cnaes_secundarios?.map(item => item.codigo + ' - ' + item.descricao).join(', ') || '',\r\n+            socios: data.qsa?.map(item => item.nome_socio + ' (' + item.cnpj_cpf_do_socio + ')').join(', ') || 'Não informado'\r\n+        })\r\n     },\r\n     {\r\n         name: 'BrasilAPI',\r\n         url: 'https://brasilapi.com.br/api/cnpj/v1/',\r\n-        mapping: function (data) {\r\n-            return {\r\n-                razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia,\r\n-                dataInicio: data.data_inicio_atividade,\r\n-                telefone1: data.ddd_telefone_1,\r\n-                email: data.email,\r\n-                capitalSocial: data.capital_social,\r\n-                situacao: data.descricao_situacao_cadastral,\r\n-                logradouro: data.logradouro,\r\n-                numero: data.numero,\r\n-                complemento: data.complemento,\r\n-                bairro: data.bairro,\r\n-                municipio: data.municipio,\r\n-                uf: data.uf,\r\n-                cep: data.cep,\r\n-                simples: data.opcao_pelo_simples ? 'Sim' : 'Não',\r\n-                mei: data.opcao_pelo_mei ? 'Sim' : 'Não',\r\n-                atividadePrincipal: data.cnae_fiscal ? data.cnae_fiscal + ' - ' + data.cnae_fiscal_descricao : '',\r\n-                atividadesSecundarias: data.cnaes_secundarios?.map(item => item.codigo + ' - ' + item.descricao).join(', ') || '',\r\n-                socios: data.qsa?.map(item => item.nome_socio + ' (' + item.cnpj_cpf_do_socio + ')').join(', ') || 'Não informado'\r\n-            };\r\n-        },\r\n-        validate: function (data) {\r\n-            return data.razao_social !== undefined;\r\n-        }\r\n+        validate: data => !!data.razao_social,\r\n+        mapping: data => ({\r\n+            razaoSocial: data.razao_social,\r\n+            nomeFantasia: data.nome_fantasia,\r\n+            dataInicio: data.data_inicio_atividade,\r\n+            telefone1: data.ddd_telefone_1,\r\n+            email: data.email,\r\n+            capitalSocial: data.capital_social,\r\n+            situacao: data.descricao_situacao_cadastral,\r\n+            logradouro: data.logradouro,\r\n+            numero: data.numero,\r\n+            complemento: data.complemento,\r\n+            bairro: data.bairro,\r\n+            municipio: data.municipio,\r\n+            uf: data.uf,\r\n+            cep: data.cep,\r\n+            simples: data.opcao_pelo_simples ? 'Sim' : 'Não',\r\n+            mei: data.opcao_pelo_mei ? 'Sim' : 'Não',\r\n+            atividadePrincipal: data.cnae_fiscal ? `${data.cnae_fiscal} - ${data.cnae_fiscal_descricao}` : '',\r\n+            atividadesSecundarias: data.cnaes_secundarios?.map(item => `${item.codigo} - ${item.descricao}`).join(', ') || '',\r\n+            socios: data.qsa?.map(item => `${item.nome_socio} (${item.cnpj_cpf_do_socio})`).join(', ') || 'Não informado'\r\n+        })\r\n     },\r\n     {\r\n         name: 'Invertexto',\r\n         url: 'https://api.invertexto.com/v1/cnpj/',\r\n         token: '16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w',\r\n-        mapping: function (data) {\r\n-            return {\r\n-                razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia,\r\n-                dataInicio: data.data_inicio,\r\n-                telefone1: data.telefone1,\r\n-                email: data.email,\r\n-                capitalSocial: data.capital_social,\r\n-                situacao: data.situacao?.nome || '',\r\n-                logradouro: data.endereco?.logradouro || '',\r\n-                numero: data.endereco?.numero || '',\r\n-                complemento: data.endereco?.complemento || '',\r\n-                bairro: data.endereco?.bairro || '',\r\n-                municipio: data.endereco?.municipio || '',\r\n-                uf: data.endereco?.uf || '',\r\n-                cep: data.endereco?.cep || '',\r\n-                simples: data.simples?.optante_simples === \"S\" ? 'Sim' : 'Não',\r\n-                mei: data.mei?.optante_mei === \"S\" ? 'Sim' : 'Não',\r\n-                atividadePrincipal: data.atividade_principal?.codigo + ' - ' + data.atividade_principal?.descricao || '',\r\n-                atividadesSecundarias: data.atividades_secundarias?.map(item => item.codigo + ' - ' + item.descricao).join(', ') || '',\r\n-                socios: data.socios?.map(item => item.nome + ' (' + item.cpf_cnpj + ')').join(', ') || 'Não informado'\r\n-            };\r\n-        },\r\n+        validate: data => !!data.razao_social,\r\n+        mapping: data => ({\r\n+            razaoSocial: data.razao_social,\r\n+            nomeFantasia: data.nome_fantasia,\r\n+            dataInicio: data.data_inicio,\r\n+            telefone1: data.telefone1,\r\n+            email: data.email,\r\n+            capitalSocial: data.capital_social,\r\n+            situacao: data.situacao?.nome || '',\r\n+            logradouro: data.endereco?.logradouro || '',\r\n+            numero: data.endereco?.numero || '',\r\n+            complemento: data.endereco?.complemento || '',\r\n+            bairro: data.endereco?.bairro || '',\r\n+            municipio: data.endereco?.municipio || '',\r\n+            uf: data.endereco?.uf || '',\r\n+            cep: data.endereco?.cep || '',\r\n+            simples: data.simples?.optante_simples === \"S\" ? 'Sim' : 'Não',\r\n+            mei: data.mei?.optante_mei === \"S\" ? 'Sim' : 'Não',\r\n+            atividadePrincipal: data.atividade_principal ? `${data.atividade_principal.codigo} - ${data.atividade_principal.descricao}` : '',\r\n+            atividadesSecundarias: data.atividades_secundarias?.map(item => `${item.codigo} - ${item.descricao}`).join(', ') || '',\r\n+            socios: data.socios?.map(item => `${item.nome} (${item.cpf_cnpj})`).join(', ') || 'Não informado'\r\n+        })\r\n+    },\r\n+    {\r\n         name: 'CNPJA',\r\n         url: 'https://cnpja.com/api/open/',\r\n-        mapping: function (data) {\r\n+        validate: data => !!data.company?.name,\r\n+        mapping: data => {\r\n             const company = data.company || {};\r\n             return {\r\n                 razaoSocial: company.name || '',\r\n-                nomeFantasia: company.name || '',\r\n+                nomeFantasia: company.trade_name || '',\r\n                 dataInicio: data.founded || '',\r\n-                telefone1: (data.phones && data.phones.length) ? data.phones[0].area + ' ' + data.phones[0].number : '',\r\n-                email: (data.emails && data.emails.length) ? data.emails[0].address : '',\r\n+                telefone1: data.phones?.[0]?.area + data.phones?.[0]?.number || '',\r\n+                email: data.emails?.[0]?.address || '',\r\n                 capitalSocial: company.equity || '',\r\n-                situacao: data.status && data.status.text ? data.status.text : '',\r\n+                situacao: data.status?.text || '',\r\n                 logradouro: '',\r\n                 numero: '',\r\n                 complemento: '',\r\n                 bairro: '',\r\n                 municipio: '',\r\n                 uf: '',\r\n                 cep: '',\r\n-                simples: (company.simples && company.simples.optant) ? 'Sim' : 'Não',\r\n-                mei: (company.simei && company.simei.optant) ? 'Sim' : 'Não',\r\n-                atividadePrincipal: data.mainActivity\r\n-                    ? data.mainActivity.id + ' - ' + data.mainActivity.text\r\n-                    : '',\r\n-                atividadesSecundarias: (data.sideActivities && data.sideActivities.length)\r\n-                    ? data.sideActivities.map(item => item.id + ' - ' + item.text).join(', ')\r\n-                    : '',\r\n-                socios: (company.members && company.members.length)\r\n-                    ? company.members.map(item => item.person.name + ' (' + item.person.taxId + ')').join(', ')\r\n-                    : 'Não informado'\r\n+                simples: company.simples?.optant ? 'Sim' : 'Não',\r\n+                mei: company.simei?.optant ? 'Sim' : 'Não',\r\n+                atividadePrincipal: data.mainActivity ? `${data.mainActivity.id} - ${data.mainActivity.text}` : '',\r\n+                atividadesSecundarias: data.sideActivities?.map(item => `${item.id} - ${item.text}`).join(', ') || '',\r\n+                socios: company.members?.map(item => `${item.person.name} (${item.person.taxId})`).join(', ') || 'Não informado'\r\n             };\r\n-        },\r\n-        validate: function (data) {\r\n-            return data.razao_social !== undefined;\r\n         }\r\n     }\r\n ];\r\n \r\n+// Função principal de consulta com fallback automático\r\n+const consultarCNPJ = async (cnpj) => {\r\n+    const loading = document.getElementById('loadingCNPJ');\r\n+    loading.classList.remove('d-none');\r\n+    \r\n+    try {\r\n+        for (const api of apiEndpoints) {\r\n+            try {\r\n+                const url = api.url + cnpj + (api.token ? `?token=${encodeURIComponent(api.token)}` : '');\r\n+                const response = await fetch(url);\r\n+                const data = await response.json();\r\n+                \r\n+                if (api.validate(data)) {\r\n+                    preencherFormulario(api.mapping(data));\r\n+                    return;\r\n+                }\r\n+            } catch (error) {\r\n+                console.warn(`Falha na API ${api.name}:`, error);\r\n+                continue;\r\n+            }\r\n+        }\r\n+        throw new Error('Todas as APIs falharam');\r\n+    } finally {\r\n+        loading.classList.add('d-none');\r\n+    }\r\n+};\r\n+\r\n+//Preenchimento automático do formulário\r\n+\r\n+const preencherFormulario = (data) => {\r\n+    Object.entries(data).forEach(([field, value]) => {\r\n+        const input = document.getElementById(field);\r\n+        if (input) input.value = value || '';\r\n+    });\r\n+};\r\n+\r\n+// Event listener com máscara e validação em tempo real\r\n+document.getElementById('CNPJ_Busca').addEventListener('input', debounce(function() {\r\n+    const input = this;\r\n+    let cnpj = input.value.replace(/\\D/g, '');\r\n+    \r\n+    // Limita a 14 caracteres e aplica máscara\r\n+    if (cnpj.length > 14) cnpj = cnpj.slice(0, 14);\r\n+    input.value = formatarCNPJ(cnpj);\r\n+    \r\n+    // Valida apenas quando completo\r\n+    if (cnpj.length === 14) {\r\n+        if (!validarCNPJ(cnpj)) {\r\n+            input.classList.add('is-invalid');\r\n+            return;\r\n+        }\r\n+        input.classList.remove('is-invalid');\r\n+        consultarCNPJ(cnpj);\r\n+    }\r\n+}));\r\n+\r\n /* ############## BUSCA CEP ############## */\r\n \r\n function consultarCNPJ(cnpj, index = 0) {\r\n     if (index >= apiEndpoints.length) {\r\n"
                },
                {
                    "date": 1742994707812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,17 +45,20 @@\n \r\n /* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n // Função debounce para otimização de requisições [[7]]\r\n+/* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n+\r\n+// Função debounce para otimização de requisições\r\n const debounce = (func, delay = 500) => {\r\n     let timer;\r\n     return (...args) => {\r\n         clearTimeout(timer);\r\n         timer = setTimeout(() => func.apply(this, args), delay);\r\n     };\r\n };\r\n \r\n-// Validação completa de CNPJ com dígitos verificadores [[6]]\r\n+// Validação completa de CNPJ com dígitos verificadores\r\n const validarCNPJ = (cnpj) => {\r\n     const cleanCnpj = cnpj.replace(/\\D/g, '');\r\n     const regex = /^\\d{14}$/;\r\n     \r\n@@ -74,9 +77,9 @@\n     \r\n     return calc(12) === digits[12] && calc(13) === digits[13];\r\n };\r\n \r\n-// Formatação visual do CNPJ [[5]]\r\n+// Formatação visual do CNPJ\r\n const formatarCNPJ = (cnpj) => {\r\n     return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})$/, \"$1.$2.$3/$4-$5\");\r\n };\r\n \r\n@@ -188,9 +191,12 @@\n         })\r\n     },\r\n     {\r\n         name: 'CNPJA',\r\n-        url: 'https://cnpja.com/api/open/',\r\n+        url: 'https://api.cnpja.com.br/',\r\n+        headers: {\r\n+            Authorization: 'a5c5e2a6-0c4e-4c3a-8b0f-5c3d3e4a1b2c' // Substitua pelo seu token válido\r\n+        },\r\n         validate: data => !!data.company?.name,\r\n         mapping: data => {\r\n             const company = data.company || {};\r\n             return {\r\n@@ -225,33 +231,66 @@\n     \r\n     try {\r\n         for (const api of apiEndpoints) {\r\n             try {\r\n-                const url = api.url + cnpj + (api.token ? `?token=${encodeURIComponent(api.token)}` : '');\r\n-                const response = await fetch(url);\r\n+                // Cria configuração da requisição\r\n+                const config = {\r\n+                    method: 'GET',\r\n+                    headers: {\r\n+                        'Content-Type': 'application/json',\r\n+                        ...api.headers\r\n+                    }\r\n+                };\r\n+                \r\n+                // Monta URL com token se necessário\r\n+                let url = api.url + cnpj;\r\n+                if (api.token) {\r\n+                    url += `?token=${encodeURIComponent(api.token)}`;\r\n+                }\r\n+                \r\n+                // Faz requisição com tratamento CORS\r\n+                const response = await fetch(url, {\r\n+                    ...config,\r\n+                    mode: 'cors'\r\n+                });\r\n+                \r\n+                // Verifica resposta válida\r\n+                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\r\n+                \r\n                 const data = await response.json();\r\n                 \r\n+                // Valida dados conforme API\r\n                 if (api.validate(data)) {\r\n                     preencherFormulario(api.mapping(data));\r\n-                    return;\r\n+                    return; // Encerra após sucesso\r\n                 }\r\n+                \r\n+                // Se chegou aqui, dados inválidos\r\n+                throw new Error('Validação falhou');\r\n+                \r\n             } catch (error) {\r\n                 console.warn(`Falha na API ${api.name}:`, error);\r\n-                continue;\r\n+                continue; // Tenta próxima API\r\n             }\r\n         }\r\n+        \r\n+        // Se todas falharem\r\n         throw new Error('Todas as APIs falharam');\r\n+        \r\n     } finally {\r\n         loading.classList.add('d-none');\r\n     }\r\n };\r\n \r\n-//Preenchimento automático do formulário\r\n-\r\n+// Preenchimento automático do formulário\r\n const preencherFormulario = (data) => {\r\n     Object.entries(data).forEach(([field, value]) => {\r\n         const input = document.getElementById(field);\r\n-        if (input) input.value = value || '';\r\n+        if (input) {\r\n+            input.value = value || '';\r\n+        } else {\r\n+            console.warn(`Campo ${field} não encontrado no formulário`);\r\n+        }\r\n     });\r\n };\r\n \r\n // Event listener com máscara e validação em tempo real\r\n"
                },
                {
                    "date": 1742994835963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,12 +191,12 @@\n         })\r\n     },\r\n     {\r\n         name: 'CNPJA',\r\n-        url: 'https://api.cnpja.com.br/',\r\n-        headers: {\r\n+        url: 'https://open.cnpja.com/office/',\r\n+        /*headers: {\r\n             Authorization: 'a5c5e2a6-0c4e-4c3a-8b0f-5c3d3e4a1b2c' // Substitua pelo seu token válido\r\n-        },\r\n+        },*/\r\n         validate: data => !!data.company?.name,\r\n         mapping: data => {\r\n             const company = data.company || {};\r\n             return {\r\n"
                },
                {
                    "date": 1743079219567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,277 +42,68 @@\n \r\n \r\n /* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n-/* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n+document.getElementById('cnpj').addEventListener('blur', function() {\r\n+    const cnpj = this.value.replace(/\\D/g, ''); \r\n+    // Remove caracteres não numéricos [[5]]\r\n+    \r\n+    // Validação básica do CNPJ (14 dígitos)\r\n+    if (!/^\\d{14}$/.test(cnpj)) {\r\n+        alert('CNPJ inválido. Verifique o formato e tente novamente.');\r\n+        return;\r\n+    }\r\n \r\n-// Função debounce para otimização de requisições [[7]]\r\n-/* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n-\r\n-// Função debounce para otimização de requisições\r\n-const debounce = (func, delay = 500) => {\r\n-    let timer;\r\n-    return (...args) => {\r\n-        clearTimeout(timer);\r\n-        timer = setTimeout(() => func.apply(this, args), delay);\r\n-    };\r\n-};\r\n-\r\n-// Validação completa de CNPJ com dígitos verificadores\r\n-const validarCNPJ = (cnpj) => {\r\n-    const cleanCnpj = cnpj.replace(/\\D/g, '');\r\n-    const regex = /^\\d{14}$/;\r\n-    \r\n-    if (!regex.test(cleanCnpj)) return false;\r\n-    \r\n-    const digits = cleanCnpj.split('').map(Number);\r\n-    const calc = (pos) => {\r\n-        let sum = 0;\r\n-        let index = 0;\r\n-        for (let i = pos - 7; i <= pos; i++) {\r\n-            sum += digits[i] * ((pos + 1) - index++);\r\n+    // Escolha aleatória da API [[3]]\r\n+    const apis = [\r\n+        { \r\n+            name: 'BrasilAPI', \r\n+            url: `https://brasilapi.com.br/api/cnpj/v1/${cnpj}`\r\n+        },\r\n+        { \r\n+            name: 'InverTexto', \r\n+            url: `https://api.invertexto.com/v1/cnpj/${cnpj}?token=SEU_TOKEN_AQUI`\r\n         }\r\n-        const rest = sum % 11;\r\n-        return rest < 2 ? 0 : 11 - rest;\r\n-    };\r\n-    \r\n-    return calc(12) === digits[12] && calc(13) === digits[13];\r\n-};\r\n+    ];\r\n+    const selectedAPI = apis[Math.floor(Math.random() * apis.length)];\r\n \r\n-// Formatação visual do CNPJ\r\n-const formatarCNPJ = (cnpj) => {\r\n-    return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})$/, \"$1.$2.$3/$4-$5\");\r\n-};\r\n-\r\n-// Configuração de APIs com correções de estrutura\r\n-const apiEndpoints = [\r\n-    {\r\n-        name: 'Receitaws',\r\n-        url: 'https://receitaws.com.br/v1/cnpj/',\r\n-        validate: data => data.status === \"OK\",\r\n-        mapping: data => ({\r\n-            razaoSocial: data.nome,\r\n-            nomeFantasia: data.fantasia,\r\n-            dataInicio: data.abertura,\r\n-            telefone1: data.telefone,\r\n-            email: data.email,\r\n-            capitalSocial: data.capital_social,\r\n-            situacao: data.situacao,\r\n-            logradouro: data.logradouro,\r\n-            numero: data.numero,\r\n-            complemento: data.complemento,\r\n-            bairro: data.bairro,\r\n-            municipio: data.municipio,\r\n-            uf: data.uf,\r\n-            cep: data.cep,\r\n-            simples: data.simples?.optante ? 'Sim' : 'Não',\r\n-            mei: data.simei?.optante ? 'Sim' : 'Não',\r\n-            atividadePrincipal: data.atividade_principal?.[0]?.code + ' - ' + data.atividade_principal?.[0]?.text || '',\r\n-            atividadesSecundarias: data.atividades_secundarias?.map(item => item.code + ' - ' + item.text).join(', ') || '',\r\n-            socios: data.qsa?.map(item => item.nome + ' (' + item.cnpj_cpf_do_socio + ')').join(', ') || 'Não informado'\r\n+    fetch(selectedAPI.url)\r\n+        .then(response => {\r\n+            if (response.ok) return response.json();\r\n+            return response.json().then(err => { throw err; });\r\n         })\r\n-    },\r\n-    {\r\n-        name: 'MinhaReceita',\r\n-        url: 'https://minhareceita.org/',\r\n-        validate: data => !!data.razao_social,\r\n-        mapping: data => ({\r\n-            razaoSocial: data.razao_social,\r\n-            nomeFantasia: data.nome_fantasia,\r\n-            dataInicio: data.data_situacao_cadastral || '',\r\n-            telefone1: data.ddd_telefone_1 || '',\r\n-            email: data.email || '',\r\n-            capitalSocial: data.capital_social,\r\n-            situacao: data.descricao_situacao_cadastral || '',\r\n-            logradouro: data.logradouro,\r\n-            numero: data.numero,\r\n-            complemento: data.complemento,\r\n-            bairro: data.bairro,\r\n-            municipio: data.municipio,\r\n-            uf: data.uf,\r\n-            cep: data.cep,\r\n-            simples: data.opcao_pelo_simples ? 'Sim' : 'Não',\r\n-            mei: data.opcao_pelo_mei ? 'Sim' : 'Não',\r\n-            atividadePrincipal: data.cnae_fiscal?.toString() || '',\r\n-            atividadesSecundarias: data.cnaes_secundarios?.map(item => item.codigo + ' - ' + item.descricao).join(', ') || '',\r\n-            socios: data.qsa?.map(item => item.nome_socio + ' (' + item.cnpj_cpf_do_socio + ')').join(', ') || 'Não informado'\r\n-        })\r\n-    },\r\n-    {\r\n-        name: 'BrasilAPI',\r\n-        url: 'https://brasilapi.com.br/api/cnpj/v1/',\r\n-        validate: data => !!data.razao_social,\r\n-        mapping: data => ({\r\n-            razaoSocial: data.razao_social,\r\n-            nomeFantasia: data.nome_fantasia,\r\n-            dataInicio: data.data_inicio_atividade,\r\n-            telefone1: data.ddd_telefone_1,\r\n-            email: data.email,\r\n-            capitalSocial: data.capital_social,\r\n-            situacao: data.descricao_situacao_cadastral,\r\n-            logradouro: data.logradouro,\r\n-            numero: data.numero,\r\n-            complemento: data.complemento,\r\n-            bairro: data.bairro,\r\n-            municipio: data.municipio,\r\n-            uf: data.uf,\r\n-            cep: data.cep,\r\n-            simples: data.opcao_pelo_simples ? 'Sim' : 'Não',\r\n-            mei: data.opcao_pelo_mei ? 'Sim' : 'Não',\r\n-            atividadePrincipal: data.cnae_fiscal ? `${data.cnae_fiscal} - ${data.cnae_fiscal_descricao}` : '',\r\n-            atividadesSecundarias: data.cnaes_secundarios?.map(item => `${item.codigo} - ${item.descricao}`).join(', ') || '',\r\n-            socios: data.qsa?.map(item => `${item.nome_socio} (${item.cnpj_cpf_do_socio})`).join(', ') || 'Não informado'\r\n-        })\r\n-    },\r\n-    {\r\n-        name: 'Invertexto',\r\n-        url: 'https://api.invertexto.com/v1/cnpj/',\r\n-        token: '16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w',\r\n-        validate: data => !!data.razao_social,\r\n-        mapping: data => ({\r\n-            razaoSocial: data.razao_social,\r\n-            nomeFantasia: data.nome_fantasia,\r\n-            dataInicio: data.data_inicio,\r\n-            telefone1: data.telefone1,\r\n-            email: data.email,\r\n-            capitalSocial: data.capital_social,\r\n-            situacao: data.situacao?.nome || '',\r\n-            logradouro: data.endereco?.logradouro || '',\r\n-            numero: data.endereco?.numero || '',\r\n-            complemento: data.endereco?.complemento || '',\r\n-            bairro: data.endereco?.bairro || '',\r\n-            municipio: data.endereco?.municipio || '',\r\n-            uf: data.endereco?.uf || '',\r\n-            cep: data.endereco?.cep || '',\r\n-            simples: data.simples?.optante_simples === \"S\" ? 'Sim' : 'Não',\r\n-            mei: data.mei?.optante_mei === \"S\" ? 'Sim' : 'Não',\r\n-            atividadePrincipal: data.atividade_principal ? `${data.atividade_principal.codigo} - ${data.atividade_principal.descricao}` : '',\r\n-            atividadesSecundarias: data.atividades_secundarias?.map(item => `${item.codigo} - ${item.descricao}`).join(', ') || '',\r\n-            socios: data.socios?.map(item => `${item.nome} (${item.cpf_cnpj})`).join(', ') || 'Não informado'\r\n-        })\r\n-    },\r\n-    {\r\n-        name: 'CNPJA',\r\n-        url: 'https://open.cnpja.com/office/',\r\n-        /*headers: {\r\n-            Authorization: 'a5c5e2a6-0c4e-4c3a-8b0f-5c3d3e4a1b2c' // Substitua pelo seu token válido\r\n-        },*/\r\n-        validate: data => !!data.company?.name,\r\n-        mapping: data => {\r\n-            const company = data.company || {};\r\n-            return {\r\n-                razaoSocial: company.name || '',\r\n-                nomeFantasia: company.trade_name || '',\r\n-                dataInicio: data.founded || '',\r\n-                telefone1: data.phones?.[0]?.area + data.phones?.[0]?.number || '',\r\n-                email: data.emails?.[0]?.address || '',\r\n-                capitalSocial: company.equity || '',\r\n-                situacao: data.status?.text || '',\r\n-                logradouro: '',\r\n-                numero: '',\r\n-                complemento: '',\r\n-                bairro: '',\r\n-                municipio: '',\r\n-                uf: '',\r\n-                cep: '',\r\n-                simples: company.simples?.optant ? 'Sim' : 'Não',\r\n-                mei: company.simei?.optant ? 'Sim' : 'Não',\r\n-                atividadePrincipal: data.mainActivity ? `${data.mainActivity.id} - ${data.mainActivity.text}` : '',\r\n-                atividadesSecundarias: data.sideActivities?.map(item => `${item.id} - ${item.text}`).join(', ') || '',\r\n-                socios: company.members?.map(item => `${item.person.name} (${item.person.taxId})`).join(', ') || 'Não informado'\r\n+        .then(data => {\r\n+            // Mapeamento dinâmico dos dados [[6]]\r\n+            const formMapper = {\r\n+                'razaoSocial': data.razao_social,\r\n+                'nomeFantasia': data.nome_fantasia,\r\n+                'logradouro': selectedAPI.name === 'BrasilAPI' ? data.logradouro : data.endereco.logradouro,\r\n+                'numero': selectedAPI.name === 'BrasilAPI' ? data.numero : data.endereco.numero,\r\n+                'bairro': selectedAPI.name === 'BrasilAPI' ? data.bairro : data.endereco.bairro,\r\n+                'cep': selectedAPI.name === 'BrasilAPI' ? data.cep : data.endereco.cep,\r\n+                'uf': selectedAPI.name === 'BrasilAPI' ? data.uf : data.endereco.uf,\r\n+                'municipio': selectedAPI.name === 'BrasilAPI' ? data.municipio : data.endereco.municipio\r\n             };\r\n-        }\r\n-    }\r\n-];\r\n \r\n-// Função principal de consulta com fallback automático\r\n-const consultarCNPJ = async (cnpj) => {\r\n-    const loading = document.getElementById('loadingCNPJ');\r\n-    loading.classList.remove('d-none');\r\n-    \r\n-    try {\r\n-        for (const api of apiEndpoints) {\r\n-            try {\r\n-                // Cria configuração da requisição\r\n-                const config = {\r\n-                    method: 'GET',\r\n-                    headers: {\r\n-                        'Content-Type': 'application/json',\r\n-                        ...api.headers\r\n-                    }\r\n-                };\r\n-                \r\n-                // Monta URL com token se necessário\r\n-                let url = api.url + cnpj;\r\n-                if (api.token) {\r\n-                    url += `?token=${encodeURIComponent(api.token)}`;\r\n-                }\r\n-                \r\n-                // Faz requisição com tratamento CORS\r\n-                const response = await fetch(url, {\r\n-                    ...config,\r\n-                    mode: 'cors'\r\n-                });\r\n-                \r\n-                // Verifica resposta válida\r\n-                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\r\n-                \r\n-                const data = await response.json();\r\n-                \r\n-                // Valida dados conforme API\r\n-                if (api.validate(data)) {\r\n-                    preencherFormulario(api.mapping(data));\r\n-                    return; // Encerra após sucesso\r\n-                }\r\n-                \r\n-                // Se chegou aqui, dados inválidos\r\n-                throw new Error('Validação falhou');\r\n-                \r\n-            } catch (error) {\r\n-                console.warn(`Falha na API ${api.name}:`, error);\r\n-                continue; // Tenta próxima API\r\n+            // Preenchimento dos campos [[1]]\r\n+            Object.keys(formMapper).forEach(field => {\r\n+                const input = document.getElementById(field);\r\n+                if (input) input.value = formMapper[field] || '';\r\n+            });\r\n+        })\r\n+        .catch(error => {\r\n+            let errorMessage = \"Erro na consulta via ${selectedAPI.name}: \";\r\n+            // Tratamento de erros específico [[4]]\r\n+            if (selectedAPI.name === 'BrasilAPI' && error.errors) {\r\n+                errorMessage += error.errors[0].message;\r\n+            } else if (selectedAPI.name === 'InverTexto') {\r\n+                errorMessage += error.message || 'Erro desconhecido';\r\n             }\r\n-        }\r\n-        \r\n-        // Se todas falharem\r\n-        throw new Error('Todas as APIs falharam');\r\n-        \r\n-    } finally {\r\n-        loading.classList.add('d-none');\r\n-    }\r\n-};\r\n \r\n-// Preenchimento automático do formulário\r\n-const preencherFormulario = (data) => {\r\n-    Object.entries(data).forEach(([field, value]) => {\r\n-        const input = document.getElementById(field);\r\n-        if (input) {\r\n-            input.value = value || '';\r\n-        } else {\r\n-            console.warn(`Campo ${field} não encontrado no formulário`);\r\n-        }\r\n-    });\r\n-};\r\n+            alert(errorMessage);\r\n+        });\r\n+});\r\n \r\n-// Event listener com máscara e validação em tempo real\r\n-document.getElementById('CNPJ_Busca').addEventListener('input', debounce(function() {\r\n-    const input = this;\r\n-    let cnpj = input.value.replace(/\\D/g, '');\r\n-    \r\n-    // Limita a 14 caracteres e aplica máscara\r\n-    if (cnpj.length > 14) cnpj = cnpj.slice(0, 14);\r\n-    input.value = formatarCNPJ(cnpj);\r\n-    \r\n-    // Valida apenas quando completo\r\n-    if (cnpj.length === 14) {\r\n-        if (!validarCNPJ(cnpj)) {\r\n-            input.classList.add('is-invalid');\r\n-            return;\r\n-        }\r\n-        input.classList.remove('is-invalid');\r\n-        consultarCNPJ(cnpj);\r\n-    }\r\n-}));\r\n \r\n /* ############## BUSCA CEP ############## */\r\n \r\n function consultarCNPJ(cnpj, index = 0) {\r\n"
                },
                {
                    "date": 1743079280348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n             url: `https://brasilapi.com.br/api/cnpj/v1/${cnpj}`\r\n         },\r\n         { \r\n             name: 'InverTexto', \r\n-            url: `https://api.invertexto.com/v1/cnpj/${cnpj}?token=SEU_TOKEN_AQUI`\r\n+            url: `https://api.invertexto.com/v1/cnpj/${cnpj}?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w`\r\n         }\r\n     ];\r\n     const selectedAPI = apis[Math.floor(Math.random() * apis.length)];\r\n \r\n"
                },
                {
                    "date": 1743079290456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n                 if (input) input.value = formMapper[field] || '';\r\n             });\r\n         })\r\n         .catch(error => {\r\n-            let errorMessage = \"Erro na consulta via ${selectedAPI.name}: \";\r\n+            let errorMessage = 'Erro na consulta via ${selectedAPI.name}: ';\r\n             // Tratamento de erros específico [[4]]\r\n             if (selectedAPI.name === 'BrasilAPI' && error.errors) {\r\n                 errorMessage += error.errors[0].message;\r\n             } else if (selectedAPI.name === 'InverTexto') {\r\n"
                },
                {
                    "date": 1743080441633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,69 +42,60 @@\n \r\n \r\n /* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n-document.getElementById('cnpj').addEventListener('blur', function() {\r\n-    const cnpj = this.value.replace(/\\D/g, ''); \r\n-    // Remove caracteres não numéricos [[5]]\r\n-    \r\n-    // Validação básica do CNPJ (14 dígitos)\r\n-    if (!/^\\d{14}$/.test(cnpj)) {\r\n-        alert('CNPJ inválido. Verifique o formato e tente novamente.');\r\n-        return;\r\n-    }\r\n+const apis = [\r\n+    (cnpj) => fetch(`https://api.invertexto.com/v1/cnpj/${cnpj}?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w`).then(res => res.json()),\r\n+    (cnpj) => fetch(`https://brasilapi.com.br/api/cnpj/v1/${cnpj}`).then(res => res.json())\r\n+];\r\n \r\n-    // Escolha aleatória da API [[3]]\r\n-    const apis = [\r\n-        { \r\n-            name: 'BrasilAPI', \r\n-            url: `https://brasilapi.com.br/api/cnpj/v1/${cnpj}`\r\n-        },\r\n-        { \r\n-            name: 'InverTexto', \r\n-            url: `https://api.invertexto.com/v1/cnpj/${cnpj}?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w`\r\n-        }\r\n-    ];\r\n-    const selectedAPI = apis[Math.floor(Math.random() * apis.length)];\r\n+function formatarCNPJ(input) {\r\n+    let cnpj = input.value.replace(/\\D/g, '');\r\n+    if (cnpj.length > 14) cnpj = cnpj.slice(0, 14);\r\n \r\n-    fetch(selectedAPI.url)\r\n-        .then(response => {\r\n-            if (response.ok) return response.json();\r\n-            return response.json().then(err => { throw err; });\r\n-        })\r\n-        .then(data => {\r\n-            // Mapeamento dinâmico dos dados [[6]]\r\n-            const formMapper = {\r\n-                'razaoSocial': data.razao_social,\r\n-                'nomeFantasia': data.nome_fantasia,\r\n-                'logradouro': selectedAPI.name === 'BrasilAPI' ? data.logradouro : data.endereco.logradouro,\r\n-                'numero': selectedAPI.name === 'BrasilAPI' ? data.numero : data.endereco.numero,\r\n-                'bairro': selectedAPI.name === 'BrasilAPI' ? data.bairro : data.endereco.bairro,\r\n-                'cep': selectedAPI.name === 'BrasilAPI' ? data.cep : data.endereco.cep,\r\n-                'uf': selectedAPI.name === 'BrasilAPI' ? data.uf : data.endereco.uf,\r\n-                'municipio': selectedAPI.name === 'BrasilAPI' ? data.municipio : data.endereco.municipio\r\n-            };\r\n+    input.value = cnpj.replace(/^(\\d{2})(\\d)/, \"$1.$2\")\r\n+                      .replace(/^(\\d{2})\\.(\\d{3})(\\d)/, \"$1.$2.$3\")\r\n+                      .replace(/\\.(\\d{3})(\\d)/, \".$1/$2\")\r\n+                      .replace(/(\\d{4})(\\d)/, \"$1-$2\");\r\n \r\n-            // Preenchimento dos campos [[1]]\r\n-            Object.keys(formMapper).forEach(field => {\r\n-                const input = document.getElementById(field);\r\n-                if (input) input.value = formMapper[field] || '';\r\n-            });\r\n-        })\r\n-        .catch(error => {\r\n-            let errorMessage = 'Erro na consulta via ${selectedAPI.name}: ';\r\n-            // Tratamento de erros específico [[4]]\r\n-            if (selectedAPI.name === 'BrasilAPI' && error.errors) {\r\n-                errorMessage += error.errors[0].message;\r\n-            } else if (selectedAPI.name === 'InverTexto') {\r\n-                errorMessage += error.message || 'Erro desconhecido';\r\n+    if (cnpj.length === 14) consultarCNPJ(cnpj);\r\n+}\r\n+\r\n+async function consultarCNPJ(cnpj) {\r\n+    for (const api of apis.sort(() => Math.random() - 0.5)) {\r\n+        try {\r\n+            const data = await api(cnpj);\r\n+            if (data && (data.razao_social || data.nome_fantasia)) {\r\n+                preencherDados(data);\r\n+                return;\r\n             }\r\n+        } catch (error) {\r\n+            console.warn(\"Erro ao consultar API:\", error);\r\n+        }\r\n+    }\r\n+    alert(\"Nenhuma API retornou dados para esse CNPJ.\");\r\n+}\r\n \r\n-            alert(errorMessage);\r\n-        });\r\n-});\r\n+function preencherDados(data) {\r\n+    document.getElementById(\"razao_social\").innerText = data.razao_social || \"Não informado\";\r\n+    document.getElementById(\"nome_fantasia\").innerText = data.nome_fantasia || \"Não informado\";\r\n+    document.getElementById(\"data_inicio\").innerText = data.data_inicio || data.data_inicio_atividade || \"Não informado\";\r\n+    document.getElementById(\"telefone\").innerText = data.telefone1 || data.ddd_telefone_1 || \"Não informado\";\r\n+    document.getElementById(\"email\").innerText = data.email || \"Não informado\";\r\n+    document.getElementById(\"capital_social\").innerText = data.capital_social || \"Não informado\";\r\n+    document.getElementById(\"situacao\").innerText = data.situacao?.nome || data.descricao_situacao_cadastral || \"Não informado\";\r\n+    document.getElementById(\"simples_nacional\").innerText = (data.simples?.optante_simples === \"S\" || data.opcao_pelo_simples) ? \"Sim\" : \"Não\";\r\n+    document.getElementById(\"mei\").innerText = (data.mei?.optante_mei === \"S\" || data.opcao_pelo_mei) ? \"Sim\" : \"Não\";\r\n+    document.getElementById(\"cnae_principal\").innerText = data.atividade_principal?.descricao || data.cnae_fiscal_descricao || \"Não informado\";\r\n \r\n+    let atividadesSecundarias = data.atividades_secundarias || data.cnaes_secundarios || [];\r\n+    document.getElementById(\"atividades_secundarias\").innerText = atividadesSecundarias.map(a => a.descricao).join(\", \") || \"Nenhuma\";\r\n \r\n+    let socios = data.socios || data.qsa || [];\r\n+    document.getElementById(\"socios\").innerText = socios.map(s => `${s.nome} (${s.cpf_cnpj || s.cnpj_cpf_do_socio})`).join(\", \") || \"Não informado\";\r\n+}\r\n+\r\n+\r\n /* ############## BUSCA CEP ############## */\r\n \r\n function consultarCNPJ(cnpj, index = 0) {\r\n     if (index >= apiEndpoints.length) {\r\n"
                },
                {
                    "date": 1743080631020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,58 +42,64 @@\n \r\n \r\n /* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n-const apis = [\r\n+ // Definindo o array de funções de consulta (não usamos \"apiEndpoints\")\r\n+ const apis = [\r\n     (cnpj) => fetch(`https://api.invertexto.com/v1/cnpj/${cnpj}?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w`).then(res => res.json()),\r\n     (cnpj) => fetch(`https://brasilapi.com.br/api/cnpj/v1/${cnpj}`).then(res => res.json())\r\n-];\r\n+  ];\r\n \r\n-function formatarCNPJ(input) {\r\n+  function formatarCNPJ(input) {\r\n     let cnpj = input.value.replace(/\\D/g, '');\r\n     if (cnpj.length > 14) cnpj = cnpj.slice(0, 14);\r\n \r\n+    // Formata o CNPJ para 00.000.000/0000-00\r\n     input.value = cnpj.replace(/^(\\d{2})(\\d)/, \"$1.$2\")\r\n                       .replace(/^(\\d{2})\\.(\\d{3})(\\d)/, \"$1.$2.$3\")\r\n                       .replace(/\\.(\\d{3})(\\d)/, \".$1/$2\")\r\n                       .replace(/(\\d{4})(\\d)/, \"$1-$2\");\r\n \r\n-    if (cnpj.length === 14) consultarCNPJ(cnpj);\r\n-}\r\n+    if (cnpj.length === 14) {\r\n+      consultarCNPJ(cnpj);\r\n+    }\r\n+  }\r\n \r\n-async function consultarCNPJ(cnpj) {\r\n+  async function consultarCNPJ(cnpj) {\r\n+    // Embaralha as APIs para consulta randômica\r\n     for (const api of apis.sort(() => Math.random() - 0.5)) {\r\n-        try {\r\n-            const data = await api(cnpj);\r\n-            if (data && (data.razao_social || data.nome_fantasia)) {\r\n-                preencherDados(data);\r\n-                return;\r\n-            }\r\n-        } catch (error) {\r\n-            console.warn(\"Erro ao consultar API:\", error);\r\n+      try {\r\n+        const data = await api(cnpj);\r\n+        // Verifica se os dados retornados possuem os campos esperados\r\n+        if (data && (data.razao_social || data.nome_fantasia)) {\r\n+          preencherDados(data);\r\n+          return;\r\n         }\r\n+      } catch (error) {\r\n+        console.warn(\"Erro ao consultar API:\", error);\r\n+      }\r\n     }\r\n     alert(\"Nenhuma API retornou dados para esse CNPJ.\");\r\n-}\r\n+  }\r\n \r\n-function preencherDados(data) {\r\n+  function preencherDados(data) {\r\n     document.getElementById(\"razao_social\").innerText = data.razao_social || \"Não informado\";\r\n     document.getElementById(\"nome_fantasia\").innerText = data.nome_fantasia || \"Não informado\";\r\n     document.getElementById(\"data_inicio\").innerText = data.data_inicio || data.data_inicio_atividade || \"Não informado\";\r\n     document.getElementById(\"telefone\").innerText = data.telefone1 || data.ddd_telefone_1 || \"Não informado\";\r\n     document.getElementById(\"email\").innerText = data.email || \"Não informado\";\r\n     document.getElementById(\"capital_social\").innerText = data.capital_social || \"Não informado\";\r\n-    document.getElementById(\"situacao\").innerText = data.situacao?.nome || data.descricao_situacao_cadastral || \"Não informado\";\r\n-    document.getElementById(\"simples_nacional\").innerText = (data.simples?.optante_simples === \"S\" || data.opcao_pelo_simples) ? \"Sim\" : \"Não\";\r\n-    document.getElementById(\"mei\").innerText = (data.mei?.optante_mei === \"S\" || data.opcao_pelo_mei) ? \"Sim\" : \"Não\";\r\n-    document.getElementById(\"cnae_principal\").innerText = data.atividade_principal?.descricao || data.cnae_fiscal_descricao || \"Não informado\";\r\n+    document.getElementById(\"situacao\").innerText = (data.situacao && data.situacao.nome) || data.descricao_situacao_cadastral || \"Não informado\";\r\n+    document.getElementById(\"simples_nacional\").innerText = (data.simples && data.simples.optante_simples === \"S\") || data.opcao_pelo_simples ? \"Sim\" : \"Não\";\r\n+    document.getElementById(\"mei\").innerText = (data.mei && data.mei.optante_mei === \"S\") || data.opcao_pelo_mei ? \"Sim\" : \"Não\";\r\n+    document.getElementById(\"cnae_principal\").innerText = (data.atividade_principal && data.atividade_principal.descricao) || data.cnae_fiscal_descricao || \"Não informado\";\r\n \r\n     let atividadesSecundarias = data.atividades_secundarias || data.cnaes_secundarios || [];\r\n     document.getElementById(\"atividades_secundarias\").innerText = atividadesSecundarias.map(a => a.descricao).join(\", \") || \"Nenhuma\";\r\n \r\n     let socios = data.socios || data.qsa || [];\r\n-    document.getElementById(\"socios\").innerText = socios.map(s => `${s.nome} (${s.cpf_cnpj || s.cnpj_cpf_do_socio})`).join(\", \") || \"Não informado\";\r\n-}\r\n+    document.getElementById(\"socios\").innerText = socios.map(s => `${s.nome || s.nome_socio} (${s.cpf_cnpj || s.cnpj_cpf_do_socio})`).join(\", \") || \"Não informado\";\r\n+  }\r\n \r\n \r\n /* ############## BUSCA CEP ############## */\r\n \r\n"
                },
                {
                    "date": 1743080777786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,47 +42,47 @@\n \r\n \r\n /* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n- // Definindo o array de funções de consulta (não usamos \"apiEndpoints\")\r\n- const apis = [\r\n+// Definindo o array de funções de consulta (não usamos \"apiEndpoints\")\r\n+const apis = [\r\n     (cnpj) => fetch(`https://api.invertexto.com/v1/cnpj/${cnpj}?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w`).then(res => res.json()),\r\n     (cnpj) => fetch(`https://brasilapi.com.br/api/cnpj/v1/${cnpj}`).then(res => res.json())\r\n-  ];\r\n+];\r\n \r\n-  function formatarCNPJ(input) {\r\n+function formatarCNPJ(input) {\r\n     let cnpj = input.value.replace(/\\D/g, '');\r\n     if (cnpj.length > 14) cnpj = cnpj.slice(0, 14);\r\n \r\n     // Formata o CNPJ para 00.000.000/0000-00\r\n     input.value = cnpj.replace(/^(\\d{2})(\\d)/, \"$1.$2\")\r\n-                      .replace(/^(\\d{2})\\.(\\d{3})(\\d)/, \"$1.$2.$3\")\r\n-                      .replace(/\\.(\\d{3})(\\d)/, \".$1/$2\")\r\n-                      .replace(/(\\d{4})(\\d)/, \"$1-$2\");\r\n+        .replace(/^(\\d{2})\\.(\\d{3})(\\d)/, \"$1.$2.$3\")\r\n+        .replace(/\\.(\\d{3})(\\d)/, \".$1/$2\")\r\n+        .replace(/(\\d{4})(\\d)/, \"$1-$2\");\r\n \r\n     if (cnpj.length === 14) {\r\n-      consultarCNPJ(cnpj);\r\n+        consultarCNPJ(cnpj);\r\n     }\r\n-  }\r\n+}\r\n \r\n-  async function consultarCNPJ(cnpj) {\r\n+async function consultarCNPJ(cnpj) {\r\n     // Embaralha as APIs para consulta randômica\r\n     for (const api of apis.sort(() => Math.random() - 0.5)) {\r\n-      try {\r\n-        const data = await api(cnpj);\r\n-        // Verifica se os dados retornados possuem os campos esperados\r\n-        if (data && (data.razao_social || data.nome_fantasia)) {\r\n-          preencherDados(data);\r\n-          return;\r\n+        try {\r\n+            const data = await api(cnpj);\r\n+            // Verifica se os dados retornados possuem os campos esperados\r\n+            if (data && (data.razao_social || data.nome_fantasia)) {\r\n+                preencherDados(data);\r\n+                return;\r\n+            }\r\n+        } catch (error) {\r\n+            console.warn(\"Erro ao consultar API:\", error);\r\n         }\r\n-      } catch (error) {\r\n-        console.warn(\"Erro ao consultar API:\", error);\r\n-      }\r\n     }\r\n     alert(\"Nenhuma API retornou dados para esse CNPJ.\");\r\n-  }\r\n+}\r\n \r\n-  function preencherDados(data) {\r\n+function preencherDados(data) {\r\n     document.getElementById(\"razao_social\").innerText = data.razao_social || \"Não informado\";\r\n     document.getElementById(\"nome_fantasia\").innerText = data.nome_fantasia || \"Não informado\";\r\n     document.getElementById(\"data_inicio\").innerText = data.data_inicio || data.data_inicio_atividade || \"Não informado\";\r\n     document.getElementById(\"telefone\").innerText = data.telefone1 || data.ddd_telefone_1 || \"Não informado\";\r\n@@ -97,9 +97,9 @@\n     document.getElementById(\"atividades_secundarias\").innerText = atividadesSecundarias.map(a => a.descricao).join(\", \") || \"Nenhuma\";\r\n \r\n     let socios = data.socios || data.qsa || [];\r\n     document.getElementById(\"socios\").innerText = socios.map(s => `${s.nome || s.nome_socio} (${s.cpf_cnpj || s.cnpj_cpf_do_socio})`).join(\", \") || \"Não informado\";\r\n-  }\r\n+}\r\n \r\n \r\n /* ############## BUSCA CEP ############## */\r\n \r\n@@ -158,40 +158,40 @@\n \r\n \r\n \r\n \r\n-        function limpa_formulário_cep() {\r\n-            //Limpa valores do formulário de cep.\r\n-            document.getElementById('rua').value = (\"\");\r\n-        document.getElementById('bairro').value = (\"\");\r\n-        document.getElementById('cidade').value = (\"\");\r\n-        document.getElementById('uf').value = (\"\");\r\n-        document.getElementById('ibge').value = (\"\");\r\n+function limpa_formulário_cep() {\r\n+    //Limpa valores do formulário de cep.\r\n+    document.getElementById('rua').value = (\"\");\r\n+    document.getElementById('bairro').value = (\"\");\r\n+    document.getElementById('cidade').value = (\"\");\r\n+    document.getElementById('uf').value = (\"\");\r\n+    document.getElementById('ibge').value = (\"\");\r\n }\r\n \r\n-        function meu_callback(conteudo) {\r\n+function meu_callback(conteudo) {\r\n     if (!(\"erro\" in conteudo)) {\r\n-            //Atualiza os campos com os valores.\r\n-            document.getElementById('rua').value = (conteudo.logradouro);\r\n+        //Atualiza os campos com os valores.\r\n+        document.getElementById('rua').value = (conteudo.logradouro);\r\n         document.getElementById('bairro').value = (conteudo.bairro);\r\n         document.getElementById('cidade').value = (conteudo.localidade);\r\n         document.getElementById('uf').value = (conteudo.uf);\r\n         document.getElementById('ibge').value = (conteudo.ibge);\r\n     } //end if.\r\n-        else {\r\n-            //CEP não Encontrado.\r\n-            limpa_formulário_cep();\r\n+    else {\r\n+        //CEP não Encontrado.\r\n+        limpa_formulário_cep();\r\n         alert(\"CEP não encontrado.\");\r\n     }\r\n }\r\n \r\n-   function pesquisacep(valor) {\r\n+function pesquisacep(valor) {\r\n \r\n     //Nova variável \"cep\" somente com dígitos.\r\n     var cep = valor.replace(/\\D/g, '');\r\n \r\n-        //Verifica se campo cep possui valor informado.\r\n-        if (cep != \"\") {\r\n+    //Verifica se campo cep possui valor informado.\r\n+    if (cep != \"\") {\r\n \r\n         //Expressão regular para validar o CEP.\r\n         var validacep = /^[0-9]{8}$/;\r\n \r\n@@ -199,30 +199,30 @@\n         if (validacep.test(cep)) {\r\n \r\n             //Preenche os campos com \"...\" enquanto consulta webservice.\r\n             document.getElementById('rua').value = \"...\";\r\n-        document.getElementById('bairro').value = \"...\";\r\n-        document.getElementById('cidade').value = \"...\";\r\n-        document.getElementById('uf').value = \"...\";\r\n-        document.getElementById('ibge').value = \"...\";\r\n+            document.getElementById('bairro').value = \"...\";\r\n+            document.getElementById('cidade').value = \"...\";\r\n+            document.getElementById('uf').value = \"...\";\r\n+            document.getElementById('ibge').value = \"...\";\r\n \r\n-        //Cria um elemento javascript.\r\n-        var script = document.createElement('script');\r\n+            //Cria um elemento javascript.\r\n+            var script = document.createElement('script');\r\n \r\n-        //Sincroniza com o callback.\r\n-        script.src = 'https://viacep.com.br/ws/' + cep + '/json/?callback=meu_callback';\r\n+            //Sincroniza com o callback.\r\n+            script.src = 'https://viacep.com.br/ws/' + cep + '/json/?callback=meu_callback';\r\n \r\n-        //Insere script no documento e carrega o conteúdo.\r\n-        document.body.appendChild(script);\r\n+            //Insere script no documento e carrega o conteúdo.\r\n+            document.body.appendChild(script);\r\n \r\n         } //end if.\r\n         else {\r\n             //cep é inválido.\r\n             limpa_formulário_cep();\r\n-        alert(\"Formato de CEP inválido.\");\r\n+            alert(\"Formato de CEP inválido.\");\r\n         }\r\n     } //end if.\r\n-        else {\r\n-            //cep sem valor, limpa formulário.\r\n-            limpa_formulário_cep();\r\n+    else {\r\n+        //cep sem valor, limpa formulário.\r\n+        limpa_formulário_cep();\r\n     }\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743080925398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,47 +42,46 @@\n \r\n \r\n /* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n-// Definindo o array de funções de consulta (não usamos \"apiEndpoints\")\r\n+// Array de funções de consulta (não usamos \"apiEndpoints\")\r\n const apis = [\r\n     (cnpj) => fetch(`https://api.invertexto.com/v1/cnpj/${cnpj}?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w`).then(res => res.json()),\r\n     (cnpj) => fetch(`https://brasilapi.com.br/api/cnpj/v1/${cnpj}`).then(res => res.json())\r\n-];\r\n+  ];\r\n \r\n-function formatarCNPJ(input) {\r\n+  function formatarCNPJ(input) {\r\n     let cnpj = input.value.replace(/\\D/g, '');\r\n     if (cnpj.length > 14) cnpj = cnpj.slice(0, 14);\r\n \r\n     // Formata o CNPJ para 00.000.000/0000-00\r\n     input.value = cnpj.replace(/^(\\d{2})(\\d)/, \"$1.$2\")\r\n-        .replace(/^(\\d{2})\\.(\\d{3})(\\d)/, \"$1.$2.$3\")\r\n-        .replace(/\\.(\\d{3})(\\d)/, \".$1/$2\")\r\n-        .replace(/(\\d{4})(\\d)/, \"$1-$2\");\r\n+                      .replace(/^(\\d{2})\\.(\\d{3})(\\d)/, \"$1.$2.$3\")\r\n+                      .replace(/\\.(\\d{3})(\\d)/, \".$1/$2\")\r\n+                      .replace(/(\\d{4})(\\d)/, \"$1-$2\");\r\n \r\n     if (cnpj.length === 14) {\r\n-        consultarCNPJ(cnpj);\r\n+      consultarCNPJ(cnpj);\r\n     }\r\n-}\r\n+  }\r\n \r\n-async function consultarCNPJ(cnpj) {\r\n+  async function consultarCNPJ(cnpj) {\r\n     // Embaralha as APIs para consulta randômica\r\n     for (const api of apis.sort(() => Math.random() - 0.5)) {\r\n-        try {\r\n-            const data = await api(cnpj);\r\n-            // Verifica se os dados retornados possuem os campos esperados\r\n-            if (data && (data.razao_social || data.nome_fantasia)) {\r\n-                preencherDados(data);\r\n-                return;\r\n-            }\r\n-        } catch (error) {\r\n-            console.warn(\"Erro ao consultar API:\", error);\r\n+      try {\r\n+        const data = await api(cnpj);\r\n+        if (data && (data.razao_social || data.nome_fantasia)) {\r\n+          preencherDados(data);\r\n+          return;\r\n         }\r\n+      } catch (error) {\r\n+        console.warn(\"Erro ao consultar API:\", error);\r\n+      }\r\n     }\r\n     alert(\"Nenhuma API retornou dados para esse CNPJ.\");\r\n-}\r\n+  }\r\n \r\n-function preencherDados(data) {\r\n+  function preencherDados(data) {\r\n     document.getElementById(\"razao_social\").innerText = data.razao_social || \"Não informado\";\r\n     document.getElementById(\"nome_fantasia\").innerText = data.nome_fantasia || \"Não informado\";\r\n     document.getElementById(\"data_inicio\").innerText = data.data_inicio || data.data_inicio_atividade || \"Não informado\";\r\n     document.getElementById(\"telefone\").innerText = data.telefone1 || data.ddd_telefone_1 || \"Não informado\";\r\n@@ -97,16 +96,16 @@\n     document.getElementById(\"atividades_secundarias\").innerText = atividadesSecundarias.map(a => a.descricao).join(\", \") || \"Nenhuma\";\r\n \r\n     let socios = data.socios || data.qsa || [];\r\n     document.getElementById(\"socios\").innerText = socios.map(s => `${s.nome || s.nome_socio} (${s.cpf_cnpj || s.cnpj_cpf_do_socio})`).join(\", \") || \"Não informado\";\r\n-}\r\n+  }\r\n \r\n \r\n /* ############## BUSCA CEP ############## */\r\n \r\n function consultarCNPJ(cnpj, index = 0) {\r\n     if (index >= apiEndpoints.length) {\r\n-        alert('Nenhuma FORNECEDOR retornou dados válidos.');\r\n+        alert('Nenhuma API DE FORNECEDOR retornou dados válidos.');\r\n         return;\r\n     }\r\n \r\n     const api = apiEndpoints[index];\r\n"
                },
                {
                    "date": 1743081005034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,38 +101,10 @@\n \r\n \r\n /* ############## BUSCA CEP ############## */\r\n \r\n-function consultarCNPJ(cnpj, index = 0) {\r\n-    if (index >= apiEndpoints.length) {\r\n-        alert('Nenhuma API DE FORNECEDOR retornou dados válidos.');\r\n-        return;\r\n-    }\r\n \r\n-    const api = apiEndpoints[index];\r\n-    const url = buildApiUrl(api, cnpj);\r\n \r\n-    fetch(url)\r\n-        .then(response => {\r\n-            if (!response.ok) {\r\n-                throw new Error(`Erro HTTP ${response.status} na API ${api.name}`);\r\n-            }\r\n-            return response.json();\r\n-        })\r\n-        .then(data => {\r\n-            if (!api.validate(data)) {\r\n-                throw new Error(`Dados inválidos no FORNECEDOR ${api.name}`);\r\n-            }\r\n-\r\n-            console.log(`Dados retornados da API ${api.name}`);\r\n-            preencherFormulario(api.mapping(data));\r\n-        })\r\n-        .catch(error => {\r\n-            console.error(`Erro na API ${api.name}: ${error.message}`);\r\n-            consultarCNPJ(cnpj, index + 1); // Tenta a próxima API\r\n-        });\r\n-}\r\n-\r\n function preencherFormulario(data) {\r\n     document.getElementById('razaoSocial').value = data.razaoSocial || '';\r\n     document.getElementById('nomeFantasia').value = data.nomeFantasia || '';\r\n     document.getElementById('dataInicio').value = data.dataInicio || '';\r\n"
                },
                {
                    "date": 1743088215092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,95 +42,72 @@\n \r\n \r\n /* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n-// Array de funções de consulta (não usamos \"apiEndpoints\")\r\n-const apis = [\r\n-    (cnpj) => fetch(`https://api.invertexto.com/v1/cnpj/${cnpj}?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w`).then(res => res.json()),\r\n-    (cnpj) => fetch(`https://brasilapi.com.br/api/cnpj/v1/${cnpj}`).then(res => res.json())\r\n-  ];\r\n-\r\n-  function formatarCNPJ(input) {\r\n-    let cnpj = input.value.replace(/\\D/g, '');\r\n-    if (cnpj.length > 14) cnpj = cnpj.slice(0, 14);\r\n-\r\n-    // Formata o CNPJ para 00.000.000/0000-00\r\n-    input.value = cnpj.replace(/^(\\d{2})(\\d)/, \"$1.$2\")\r\n-                      .replace(/^(\\d{2})\\.(\\d{3})(\\d)/, \"$1.$2.$3\")\r\n-                      .replace(/\\.(\\d{3})(\\d)/, \".$1/$2\")\r\n-                      .replace(/(\\d{4})(\\d)/, \"$1-$2\");\r\n-\r\n-    if (cnpj.length === 14) {\r\n-      consultarCNPJ(cnpj);\r\n+document.getElementById('cnpj').addEventListener('blur', function() {\r\n+    const cnpj = this.value.replace(/\\D/g, ''); // Remove caracteres não numéricos [[5]]\r\n+    \r\n+    // Validação básica do CNPJ (14 dígitos)\r\n+    if (!/^\\d{14}$/.test(cnpj)) {\r\n+        alert('CNPJ inválido. Verifique o formato e tente novamente.');\r\n+        return;\r\n     }\r\n-  }\r\n \r\n-  async function consultarCNPJ(cnpj) {\r\n-    // Embaralha as APIs para consulta randômica\r\n-    for (const api of apis.sort(() => Math.random() - 0.5)) {\r\n-      try {\r\n-        const data = await api(cnpj);\r\n-        if (data && (data.razao_social || data.nome_fantasia)) {\r\n-          preencherDados(data);\r\n-          return;\r\n+    // Escolha aleatória da API [[3]]\r\n+    const apis = [\r\n+        { \r\n+            name: 'BrasilAPI', \r\n+            url: `https://brasilapi.com.br/api/cnpj/v1/${cnpj}`\r\n+        },\r\n+        { \r\n+            name: 'InverTexto', \r\n+            url: `https://api.invertexto.com/v1/cnpj/${cnpj}?token=SEU_TOKEN_AQUI`\r\n         }\r\n-      } catch (error) {\r\n-        console.warn(\"Erro ao consultar API:\", error);\r\n-      }\r\n-    }\r\n-    alert(\"Nenhuma API retornou dados para esse CNPJ.\");\r\n-  }\r\n+    ];\r\n+    const selectedAPI = apis[Math.floor(Math.random() * apis.length)];\r\n \r\n-  function preencherDados(data) {\r\n-    document.getElementById(\"razao_social\").innerText = data.razao_social || \"Não informado\";\r\n-    document.getElementById(\"nome_fantasia\").innerText = data.nome_fantasia || \"Não informado\";\r\n-    document.getElementById(\"data_inicio\").innerText = data.data_inicio || data.data_inicio_atividade || \"Não informado\";\r\n-    document.getElementById(\"telefone\").innerText = data.telefone1 || data.ddd_telefone_1 || \"Não informado\";\r\n-    document.getElementById(\"email\").innerText = data.email || \"Não informado\";\r\n-    document.getElementById(\"capital_social\").innerText = data.capital_social || \"Não informado\";\r\n-    document.getElementById(\"situacao\").innerText = (data.situacao && data.situacao.nome) || data.descricao_situacao_cadastral || \"Não informado\";\r\n-    document.getElementById(\"simples_nacional\").innerText = (data.simples && data.simples.optante_simples === \"S\") || data.opcao_pelo_simples ? \"Sim\" : \"Não\";\r\n-    document.getElementById(\"mei\").innerText = (data.mei && data.mei.optante_mei === \"S\") || data.opcao_pelo_mei ? \"Sim\" : \"Não\";\r\n-    document.getElementById(\"cnae_principal\").innerText = (data.atividade_principal && data.atividade_principal.descricao) || data.cnae_fiscal_descricao || \"Não informado\";\r\n+    fetch(selectedAPI.url)\r\n+        .then(response => {\r\n+            if (response.ok) return response.json();\r\n+            return response.json().then(err => { throw err; });\r\n+        })\r\n+        .then(data => {\r\n+            // Mapeamento dinâmico dos dados [[6]]\r\n+            const formMapper = {\r\n+                'razaoSocial': data.razao_social,\r\n+                'nomeFantasia': data.nome_fantasia,\r\n+                'logradouro': selectedAPI.name === 'BrasilAPI' ? data.logradouro : data.endereco.logradouro,\r\n+                'numero': selectedAPI.name === 'BrasilAPI' ? data.numero : data.endereco.numero,\r\n+                'bairro': selectedAPI.name === 'BrasilAPI' ? data.bairro : data.endereco.bairro,\r\n+                'cep': selectedAPI.name === 'BrasilAPI' ? data.cep : data.endereco.cep,\r\n+                'uf': selectedAPI.name === 'BrasilAPI' ? data.uf : data.endereco.uf,\r\n+                'municipio': selectedAPI.name === 'BrasilAPI' ? data.municipio : data.endereco.municipio\r\n+            };\r\n \r\n-    let atividadesSecundarias = data.atividades_secundarias || data.cnaes_secundarios || [];\r\n-    document.getElementById(\"atividades_secundarias\").innerText = atividadesSecundarias.map(a => a.descricao).join(\", \") || \"Nenhuma\";\r\n+            // Preenchimento dos campos [[1]]\r\n+            Object.keys(formMapper).forEach(field => {\r\n+                const input = document.getElementById(field);\r\n+                if (input) input.value = formMapper[field] || '';\r\n+            });\r\n+        })\r\n+        .catch(error => {\r\n+            let errorMessage = 'Erro na consulta via ${selectedAPI.name}: ';\r\n+            \r\n+            // Tratamento de erros específico [[4]]\r\n+            if (selectedAPI.name === 'BrasilAPI' && error.errors) {\r\n+                errorMessage += error.errors[0].message;\r\n+            } else if (selectedAPI.name === 'InverTexto') {\r\n+                errorMessage += error.message || 'Erro desconhecido';\r\n+            }\r\n \r\n-    let socios = data.socios || data.qsa || [];\r\n-    document.getElementById(\"socios\").innerText = socios.map(s => `${s.nome || s.nome_socio} (${s.cpf_cnpj || s.cnpj_cpf_do_socio})`).join(\", \") || \"Não informado\";\r\n-  }\r\n+            alert(errorMessage);\r\n+        });\r\n+});\r\n \r\n \r\n-/* ############## BUSCA CEP ############## */\r\n \r\n+/* ################## BUSCA CEP ################## */\r\n \r\n-\r\n-function preencherFormulario(data) {\r\n-    document.getElementById('razaoSocial').value = data.razaoSocial || '';\r\n-    document.getElementById('nomeFantasia').value = data.nomeFantasia || '';\r\n-    document.getElementById('dataInicio').value = data.dataInicio || '';\r\n-    document.getElementById('telefone1').value = data.telefone1 || '';\r\n-    document.getElementById('email').value = data.email || '';\r\n-    document.getElementById('capitalSocial').value = data.capitalSocial || '';\r\n-    document.getElementById('situacao').value = data.situacao || '';\r\n-    document.getElementById('logradouro').value = data.logradouro || '';\r\n-    document.getElementById('numero').value = data.numero || '';\r\n-    document.getElementById('complemento').value = data.complemento || '';\r\n-    document.getElementById('bairro').value = data.bairro || '';\r\n-    document.getElementById('municipio').value = data.municipio || '';\r\n-    document.getElementById('uf').value = data.uf || '';\r\n-    document.getElementById('cep').value = data.cep || '';\r\n-    document.getElementById('simples').value = data.simples || '';\r\n-    document.getElementById('mei').value = data.mei || '';\r\n-    document.getElementById('atividadePrincipal').value = data.atividadePrincipal || '';\r\n-    document.getElementById('atividadesSecundarias').value = data.atividadesSecundarias || '';\r\n-    document.getElementById('socios').value = data.socios || '';\r\n-}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n function limpa_formulário_cep() {\r\n     //Limpa valores do formulário de cep.\r\n     document.getElementById('rua').value = (\"\");\r\n     document.getElementById('bairro').value = (\"\");\r\n"
                },
                {
                    "date": 1743088245286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n             url: `https://brasilapi.com.br/api/cnpj/v1/${cnpj}`\r\n         },\r\n         { \r\n             name: 'InverTexto', \r\n-            url: `https://api.invertexto.com/v1/cnpj/${cnpj}?token=SEU_TOKEN_AQUI`\r\n+            url: `https://api.invertexto.com/v1/cnpj/${cnpj}?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w`\r\n         }\r\n     ];\r\n     const selectedAPI = apis[Math.floor(Math.random() * apis.length)];\r\n \r\n"
                },
                {
                    "date": 1743089619778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,65 +43,83 @@\n \r\n /* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n document.getElementById('cnpj').addEventListener('blur', function() {\r\n-    const cnpj = this.value.replace(/\\D/g, ''); // Remove caracteres não numéricos [[5]]\r\n+    var cnpj = this.value.replace(/\\D/g, ''); // Remove caracteres não numéricos\r\n     \r\n     // Validação básica do CNPJ (14 dígitos)\r\n     if (!/^\\d{14}$/.test(cnpj)) {\r\n         alert('CNPJ inválido. Verifique o formato e tente novamente.');\r\n         return;\r\n     }\r\n \r\n-    // Escolha aleatória da API [[3]]\r\n-    const apis = [\r\n+    var apis = [\r\n         { \r\n             name: 'BrasilAPI', \r\n-            url: `https://brasilapi.com.br/api/cnpj/v1/${cnpj}`\r\n+            url: 'https://brasilapi.com.br/api/cnpj/v1/' + cnpj\r\n         },\r\n         { \r\n             name: 'InverTexto', \r\n-            url: `https://api.invertexto.com/v1/cnpj/${cnpj}?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w`\r\n+            url: 'https://api.invertexto.com/v1/cnpj/' + cnpj + '?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w'\r\n         }\r\n     ];\r\n-    const selectedAPI = apis[Math.floor(Math.random() * apis.length)];\r\n+    var selectedAPI = apis[Math.floor(Math.random() * apis.length)];\r\n \r\n-    fetch(selectedAPI.url)\r\n-        .then(response => {\r\n-            if (response.ok) return response.json();\r\n-            return response.json().then(err => { throw err; });\r\n-        })\r\n-        .then(data => {\r\n-            // Mapeamento dinâmico dos dados [[6]]\r\n-            const formMapper = {\r\n-                'razaoSocial': data.razao_social,\r\n-                'nomeFantasia': data.nome_fantasia,\r\n-                'logradouro': selectedAPI.name === 'BrasilAPI' ? data.logradouro : data.endereco.logradouro,\r\n-                'numero': selectedAPI.name === 'BrasilAPI' ? data.numero : data.endereco.numero,\r\n-                'bairro': selectedAPI.name === 'BrasilAPI' ? data.bairro : data.endereco.bairro,\r\n-                'cep': selectedAPI.name === 'BrasilAPI' ? data.cep : data.endereco.cep,\r\n-                'uf': selectedAPI.name === 'BrasilAPI' ? data.uf : data.endereco.uf,\r\n-                'municipio': selectedAPI.name === 'BrasilAPI' ? data.municipio : data.endereco.municipio\r\n-            };\r\n+    var xhr = new XMLHttpRequest();\r\n+    xhr.open('GET', selectedAPI.url, true);\r\n+    \r\n+    xhr.onreadystatechange = function() {\r\n+        if (xhr.readyState === 4) {\r\n+            if (xhr.status >= 200 && xhr.status < 300) {\r\n+                try {\r\n+                    var data = JSON.parse(xhr.responseText);\r\n+                    \r\n+                    var formMapper = {\r\n+                        'razaoSocial': data.razao_social,\r\n+                        'nomeFantasia': data.nome_fantasia,\r\n+                        'logradouro': selectedAPI.name === 'BrasilAPI' ? data.logradouro : (data.endereco && data.endereco.logradouro),\r\n+                        'numero': selectedAPI.name === 'BrasilAPI' ? data.numero : (data.endereco && data.endereco.numero),\r\n+                        'bairro': selectedAPI.name === 'BrasilAPI' ? data.bairro : (data.endereco && data.endereco.bairro),\r\n+                        'cep': selectedAPI.name === 'BrasilAPI' ? data.cep : (data.endereco && data.endereco.cep),\r\n+                        'uf': selectedAPI.name === 'BrasilAPI' ? data.uf : (data.endereco && data.endereco.uf),\r\n+                        'municipio': selectedAPI.name === 'BrasilAPI' ? data.municipio : (data.endereco && data.endereco.municipio)\r\n+                    };\r\n \r\n-            // Preenchimento dos campos [[1]]\r\n-            Object.keys(formMapper).forEach(field => {\r\n-                const input = document.getElementById(field);\r\n-                if (input) input.value = formMapper[field] || '';\r\n-            });\r\n-        })\r\n-        .catch(error => {\r\n-            let errorMessage = 'Erro na consulta via ${selectedAPI.name}: ';\r\n-            \r\n-            // Tratamento de erros específico [[4]]\r\n-            if (selectedAPI.name === 'BrasilAPI' && error.errors) {\r\n-                errorMessage += error.errors[0].message;\r\n-            } else if (selectedAPI.name === 'InverTexto') {\r\n-                errorMessage += error.message || 'Erro desconhecido';\r\n+                    for (var field in formMapper) {\r\n+                        if (formMapper.hasOwnProperty(field)) {\r\n+                            var input = document.getElementById(field);\r\n+                            if (input) input.value = formMapper[field] || '';\r\n+                        }\r\n+                    }\r\n+                } catch (e) {\r\n+                    alert('Erro ao processar resposta da API: ' + e.message);\r\n+                }\r\n+            } else {\r\n+                try {\r\n+                    var error = JSON.parse(xhr.responseText);\r\n+                    error.apiName = selectedAPI.name;\r\n+                    \r\n+                    var errorMessage = 'Erro na consulta via ' + error.apiName + ': ';\r\n+                    \r\n+                    if (error.apiName === 'BrasilAPI' && error.errors) {\r\n+                        errorMessage += error.errors[0].message;\r\n+                    } else if (error.apiName === 'InverTexto') {\r\n+                        errorMessage += error.message || 'Erro desconhecido';\r\n+                    }\r\n+                    \r\n+                    alert(errorMessage);\r\n+                } catch (e) {\r\n+                    alert('Falha na comunicação com a API');\r\n+                }\r\n             }\r\n-\r\n-            alert(errorMessage);\r\n-        });\r\n+        }\r\n+    };\r\n+    \r\n+    xhr.onerror = function() {\r\n+        alert('Erro de rede ao consultar ' + selectedAPI.name);\r\n+    };\r\n+    \r\n+    xhr.send();\r\n });\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1743089850550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,14 +42,21 @@\n \r\n \r\n /* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n+// Cache para armazenar CNPJ's que falharam\r\n+var cnpjErrorCache = {};\r\n+\r\n document.getElementById('cnpj').addEventListener('blur', function() {\r\n-    var cnpj = this.value.replace(/\\D/g, ''); // Remove caracteres não numéricos\r\n+    var cnpj = this.value.replace(/\\D/g, '');\r\n     \r\n-    // Validação básica do CNPJ (14 dígitos)\r\n+    // Verifica se o CNPJ já está no cache de erros\r\n+    if (cnpjErrorCache[cnpj]) {\r\n+        return; // Interrompe se já houve falha anterior\r\n+    }\r\n+\r\n     if (!/^\\d{14}$/.test(cnpj)) {\r\n-        alert('CNPJ inválido. Verifique o formato e tente novamente.');\r\n+        alert('CNPJ inválido. Verifique o formato.');\r\n         return;\r\n     }\r\n \r\n     var apis = [\r\n@@ -72,8 +79,11 @@\n             if (xhr.status >= 200 && xhr.status < 300) {\r\n                 try {\r\n                     var data = JSON.parse(xhr.responseText);\r\n                     \r\n+                    // Limpa cache de erro se houver sucesso\r\n+                    delete cnpjErrorCache[cnpj];\r\n+                    \r\n                     var formMapper = {\r\n                         'razaoSocial': data.razao_social,\r\n                         'nomeFantasia': data.nome_fantasia,\r\n                         'logradouro': selectedAPI.name === 'BrasilAPI' ? data.logradouro : (data.endereco && data.endereco.logradouro),\r\n@@ -97,8 +107,11 @@\n                 try {\r\n                     var error = JSON.parse(xhr.responseText);\r\n                     error.apiName = selectedAPI.name;\r\n                     \r\n+                    // Adiciona CNPJ ao cache de erros\r\n+                    cnpjErrorCache[cnpj] = true;\r\n+                    \r\n                     var errorMessage = 'Erro na consulta via ' + error.apiName + ': ';\r\n                     \r\n                     if (error.apiName === 'BrasilAPI' && error.errors) {\r\n                         errorMessage += error.errors[0].message;\r\n@@ -114,8 +127,10 @@\n         }\r\n     };\r\n     \r\n     xhr.onerror = function() {\r\n+        // Adiciona CNPJ ao cache de erros\r\n+        cnpjErrorCache[cnpj] = true;\r\n         alert('Erro de rede ao consultar ' + selectedAPI.name);\r\n     };\r\n     \r\n     xhr.send();\r\n"
                },
                {
                    "date": 1743090073821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,98 +42,124 @@\n \r\n \r\n /* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n-// Cache para armazenar CNPJ's que falharam\r\n-var cnpjErrorCache = {};\r\n+var cnpjErrorCache = {}; // Cache para CNPJ's com falha [[3]][[6]]\r\n+var debugLogs = []; // Armazenamento de logs de depuração [[8]]\r\n \r\n-document.getElementById('cnpj').addEventListener('blur', function() {\r\n-    var cnpj = this.value.replace(/\\D/g, '');\r\n+// Função para registrar logs de depuração\r\n+function logDebug(message) {\r\n+    debugLogs.push(message);\r\n+    console.log(\"[DEBUG] \" + message); // Log no console [[6]]\r\n+}\r\n+\r\n+document.getElementById(\"cnpj\").addEventListener(\"blur\", function() {\r\n+    logDebug(\"Iniciando processo de consulta...\");\r\n     \r\n-    // Verifica se o CNPJ já está no cache de erros\r\n+    var cnpj = this.value.replace(/\\D/g, \"\"); // Remove caracteres não numéricos [[5]]\r\n+    \r\n+    // Verifica cache de erros\r\n     if (cnpjErrorCache[cnpj]) {\r\n-        return; // Interrompe se já houve falha anterior\r\n+        logDebug(\"CNPJ \" + cnpj + \" já consta no cache de erros. Consulta abortada.\");\r\n+        return;\r\n     }\r\n \r\n-    if (!/^\\d{14}$/.test(cnpj)) {\r\n-        alert('CNPJ inválido. Verifique o formato.');\r\n+    // Validação básica do CNPJ\r\n+    if (!/^\\d{14}$/.test(cnpj)) { // Regex para 14 dígitos [[7]]\r\n+        logDebug(\"CNPJ inválido detectado: \" + cnpj);\r\n+        alert(\"CNPJ inválido. Verifique o formato e tente novamente.\");\r\n         return;\r\n     }\r\n \r\n+    // Lista de APIs com fallback\r\n     var apis = [\r\n-        { \r\n-            name: 'BrasilAPI', \r\n-            url: 'https://brasilapi.com.br/api/cnpj/v1/' + cnpj\r\n+        {\r\n+            name: \"BrasilAPI\",\r\n+            url: \"https://brasilapi.com.br/api/cnpj/v1/\" + cnpj\r\n         },\r\n-        { \r\n-            name: 'InverTexto', \r\n-            url: 'https://api.invertexto.com/v1/cnpj/' + cnpj + '?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w'\r\n+        {\r\n+            name: \"InverTexto\",\r\n+            url: \"https://api.invertexto.com/v1/cnpj/\" + cnpj + \"?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w\"\r\n         }\r\n     ];\r\n+    \r\n+    // Seleção aleatória de API\r\n     var selectedAPI = apis[Math.floor(Math.random() * apis.length)];\r\n+    logDebug(\"API selecionada: \" + selectedAPI.name);\r\n \r\n+    // Configuração da requisição XMLHttpRequest [[11]]\r\n     var xhr = new XMLHttpRequest();\r\n-    xhr.open('GET', selectedAPI.url, true);\r\n+    xhr.open(\"GET\", selectedAPI.url, true);\r\n     \r\n     xhr.onreadystatechange = function() {\r\n-        if (xhr.readyState === 4) {\r\n+        if (xhr.readyState === 4) { // Requisição concluída [[9]]\r\n+            logDebug(\"Status da requisição: \" + xhr.status);\r\n+            \r\n             if (xhr.status >= 200 && xhr.status < 300) {\r\n                 try {\r\n                     var data = JSON.parse(xhr.responseText);\r\n+                    logDebug(\"Resposta da API recebida com sucesso\");\r\n                     \r\n-                    // Limpa cache de erro se houver sucesso\r\n+                    // Limpa cache de erro\r\n                     delete cnpjErrorCache[cnpj];\r\n                     \r\n+                    // Mapeamento condicional dos dados\r\n                     var formMapper = {\r\n-                        'razaoSocial': data.razao_social,\r\n-                        'nomeFantasia': data.nome_fantasia,\r\n-                        'logradouro': selectedAPI.name === 'BrasilAPI' ? data.logradouro : (data.endereco && data.endereco.logradouro),\r\n-                        'numero': selectedAPI.name === 'BrasilAPI' ? data.numero : (data.endereco && data.endereco.numero),\r\n-                        'bairro': selectedAPI.name === 'BrasilAPI' ? data.bairro : (data.endereco && data.endereco.bairro),\r\n-                        'cep': selectedAPI.name === 'BrasilAPI' ? data.cep : (data.endereco && data.endereco.cep),\r\n-                        'uf': selectedAPI.name === 'BrasilAPI' ? data.uf : (data.endereco && data.endereco.uf),\r\n-                        'municipio': selectedAPI.name === 'BrasilAPI' ? data.municipio : (data.endereco && data.endereco.municipio)\r\n+                        razaoSocial: data.razao_social,\r\n+                        nomeFantasia: data.nome_fantasia,\r\n+                        logradouro: selectedAPI.name === \"BrasilAPI\" ? data.logradouro : (data.endereco && data.endereco.logradouro),\r\n+                        numero: selectedAPI.name === \"BrasilAPI\" ? data.numero : (data.endereco && data.endereco.numero),\r\n+                        bairro: selectedAPI.name === \"BrasilAPI\" ? data.bairro : (data.endereco && data.endereco.bairro),\r\n+                        cep: selectedAPI.name === \"BrasilAPI\" ? data.cep : (data.endereco && data.endereco.cep),\r\n+                        uf: selectedAPI.name === \"BrasilAPI\" ? data.uf : (data.endereco && data.endereco.uf),\r\n+                        municipio: selectedAPI.name === \"BrasilAPI\" ? data.municipio : (data.endereco && data.endereco.municipio)\r\n                     };\r\n \r\n+                    // Preenchimento dos campos\r\n                     for (var field in formMapper) {\r\n                         if (formMapper.hasOwnProperty(field)) {\r\n                             var input = document.getElementById(field);\r\n-                            if (input) input.value = formMapper[field] || '';\r\n+                            if (input) input.value = formMapper[field] || \"\";\r\n                         }\r\n                     }\r\n                 } catch (e) {\r\n-                    alert('Erro ao processar resposta da API: ' + e.message);\r\n+                    logDebug(\"Erro ao processar resposta: \" + e.message);\r\n+                    alert(\"Erro ao processar dados da API\");\r\n                 }\r\n             } else {\r\n                 try {\r\n                     var error = JSON.parse(xhr.responseText);\r\n                     error.apiName = selectedAPI.name;\r\n                     \r\n-                    // Adiciona CNPJ ao cache de erros\r\n+                    // Registra CNPJ no cache de erros\r\n                     cnpjErrorCache[cnpj] = true;\r\n                     \r\n-                    var errorMessage = 'Erro na consulta via ' + error.apiName + ': ';\r\n+                    var errorMessage = \"Erro na consulta via \" + error.apiName + \": \";\r\n                     \r\n-                    if (error.apiName === 'BrasilAPI' && error.errors) {\r\n+                    if (error.apiName === \"BrasilAPI\" && error.errors) {\r\n                         errorMessage += error.errors[0].message;\r\n-                    } else if (error.apiName === 'InverTexto') {\r\n-                        errorMessage += error.message || 'Erro desconhecido';\r\n+                        logDebug(\"Erro BrasilAPI: \" + error.errors[0].message);\r\n+                    } else if (error.apiName === \"InverTexto\") {\r\n+                        errorMessage += error.message || \"Erro desconhecido\";\r\n+                        logDebug(\"Erro InverTexto: \" + error.message);\r\n                     }\r\n                     \r\n                     alert(errorMessage);\r\n                 } catch (e) {\r\n-                    alert('Falha na comunicação com a API');\r\n+                    logDebug(\"Falha na comunicação com a API\");\r\n+                    alert(\"Falha na comunicação com a API\");\r\n                 }\r\n             }\r\n         }\r\n     };\r\n-    \r\n+\r\n+    // Tratamento de erros de rede [[12]]\r\n     xhr.onerror = function() {\r\n-        // Adiciona CNPJ ao cache de erros\r\n+        logDebug(\"Erro de rede ao consultar \" + selectedAPI.name);\r\n         cnpjErrorCache[cnpj] = true;\r\n-        alert('Erro de rede ao consultar ' + selectedAPI.name);\r\n+        alert(\"Erro de rede ao consultar \" + selectedAPI.name);\r\n     };\r\n-    \r\n+\r\n     xhr.send();\r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1743098069165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,80 +42,88 @@\n \r\n \r\n /* ################## BUSCA CNPJ COM VALIDAÇÃO E FALBACK ################## */\r\n \r\n-var cnpjErrorCache = {}; // Cache para CNPJ's com falha [[3]][[6]]\r\n-var debugLogs = []; // Armazenamento de logs de depuração [[8]]\r\n+var cnpjErrorCache = {};\r\n+var debugLogs = [];\r\n \r\n-// Função para registrar logs de depuração\r\n function logDebug(message) {\r\n     debugLogs.push(message);\r\n-    console.log(\"[DEBUG] \" + message); // Log no console [[6]]\r\n+    console.log(\"[DEBUG] \" + message);\r\n }\r\n \r\n+function formatarCNPJ(cnpj) {\r\n+    return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n+}\r\n+\r\n document.getElementById(\"cnpj\").addEventListener(\"blur\", function() {\r\n     logDebug(\"Iniciando processo de consulta...\");\r\n     \r\n-    var cnpj = this.value.replace(/\\D/g, \"\"); // Remove caracteres não numéricos [[5]]\r\n+    var cnpj = this.value.replace(/\\D/g, \"\");\r\n     \r\n-    // Verifica cache de erros\r\n     if (cnpjErrorCache[cnpj]) {\r\n         logDebug(\"CNPJ \" + cnpj + \" já consta no cache de erros. Consulta abortada.\");\r\n         return;\r\n     }\r\n \r\n-    // Validação básica do CNPJ\r\n-    if (!/^\\d{14}$/.test(cnpj)) { // Regex para 14 dígitos [[7]]\r\n+    if (!/^\\d{14}$/.test(cnpj)) {\r\n         logDebug(\"CNPJ inválido detectado: \" + cnpj);\r\n-        alert(\"CNPJ inválido. Verifique o formato e tente novamente.\");\r\n+        alert(\"CNPJ inválido. Verifique o formato.\");\r\n         return;\r\n     }\r\n \r\n-    // Lista de APIs com fallback\r\n+    // Adicionando nova API CNPJs.dev [[11]]\r\n     var apis = [\r\n         {\r\n             name: \"BrasilAPI\",\r\n             url: \"https://brasilapi.com.br/api/cnpj/v1/\" + cnpj\r\n         },\r\n         {\r\n             name: \"InverTexto\",\r\n             url: \"https://api.invertexto.com/v1/cnpj/\" + cnpj + \"?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w\"\r\n+        },\r\n+        {\r\n+            name: \"CNPJs.dev\",\r\n+            url: \"https://api.cnpjs.dev/v1/\" + cnpj\r\n         }\r\n     ];\r\n     \r\n-    // Seleção aleatória de API\r\n     var selectedAPI = apis[Math.floor(Math.random() * apis.length)];\r\n     logDebug(\"API selecionada: \" + selectedAPI.name);\r\n \r\n-    // Configuração da requisição XMLHttpRequest [[11]]\r\n     var xhr = new XMLHttpRequest();\r\n     xhr.open(\"GET\", selectedAPI.url, true);\r\n     \r\n     xhr.onreadystatechange = function() {\r\n-        if (xhr.readyState === 4) { // Requisição concluída [[9]]\r\n+        if (xhr.readyState === 4) {\r\n             logDebug(\"Status da requisição: \" + xhr.status);\r\n             \r\n             if (xhr.status >= 200 && xhr.status < 300) {\r\n                 try {\r\n                     var data = JSON.parse(xhr.responseText);\r\n                     logDebug(\"Resposta da API recebida com sucesso\");\r\n                     \r\n-                    // Limpa cache de erro\r\n                     delete cnpjErrorCache[cnpj];\r\n                     \r\n-                    // Mapeamento condicional dos dados\r\n+                    // Mapeamento adaptado para nova API [[11]]\r\n                     var formMapper = {\r\n                         razaoSocial: data.razao_social,\r\n                         nomeFantasia: data.nome_fantasia,\r\n-                        logradouro: selectedAPI.name === \"BrasilAPI\" ? data.logradouro : (data.endereco && data.endereco.logradouro),\r\n-                        numero: selectedAPI.name === \"BrasilAPI\" ? data.numero : (data.endereco && data.endereco.numero),\r\n-                        bairro: selectedAPI.name === \"BrasilAPI\" ? data.bairro : (data.endereco && data.endereco.bairro),\r\n-                        cep: selectedAPI.name === \"BrasilAPI\" ? data.cep : (data.endereco && data.endereco.cep),\r\n-                        uf: selectedAPI.name === \"BrasilAPI\" ? data.uf : (data.endereco && data.endereco.uf),\r\n-                        municipio: selectedAPI.name === \"BrasilAPI\" ? data.municipio : (data.endereco && data.endereco.municipio)\r\n+                        logradouro: selectedAPI.name === \"CNPJs.dev\" ? \r\n+                            (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) : \r\n+                            (selectedAPI.name === \"BrasilAPI\" ? data.logradouro : (data.endereco && data.endereco.logradouro)),\r\n+                        numero: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.numero : \r\n+                            (selectedAPI.name === \"BrasilAPI\" ? data.numero : (data.endereco && data.endereco.numero)),\r\n+                        bairro: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.bairro : \r\n+                            (selectedAPI.name === \"BrasilAPI\" ? data.bairro : (data.endereco && data.endereco.bairro)),\r\n+                        cep: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.cep : \r\n+                            (selectedAPI.name === \"BrasilAPI\" ? data.cep : (data.endereco && data.endereco.cep)),\r\n+                        uf: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.uf : \r\n+                            (selectedAPI.name === \"BrasilAPI\" ? data.uf : (data.endereco && data.endereco.uf)),\r\n+                        municipio: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.municipio : \r\n+                            (selectedAPI.name === \"BrasilAPI\" ? data.municipio : (data.endereco && data.endereco.municipio))\r\n                     };\r\n \r\n-                    // Preenchimento dos campos\r\n                     for (var field in formMapper) {\r\n                         if (formMapper.hasOwnProperty(field)) {\r\n                             var input = document.getElementById(field);\r\n                             if (input) input.value = formMapper[field] || \"\";\r\n@@ -129,19 +137,18 @@\n                 try {\r\n                     var error = JSON.parse(xhr.responseText);\r\n                     error.apiName = selectedAPI.name;\r\n                     \r\n-                    // Registra CNPJ no cache de erros\r\n                     cnpjErrorCache[cnpj] = true;\r\n                     \r\n                     var errorMessage = \"Erro na consulta via \" + error.apiName + \": \";\r\n                     \r\n                     if (error.apiName === \"BrasilAPI\" && error.errors) {\r\n                         errorMessage += error.errors[0].message;\r\n-                        logDebug(\"Erro BrasilAPI: \" + error.errors[0].message);\r\n                     } else if (error.apiName === \"InverTexto\") {\r\n                         errorMessage += error.message || \"Erro desconhecido\";\r\n-                        logDebug(\"Erro InverTexto: \" + error.message);\r\n+                    } else if (error.apiName === \"CNPJs.dev\") {\r\n+                        errorMessage += error.message || \"Erro desconhecido\"; // [[11]]\r\n                     }\r\n                     \r\n                     alert(errorMessage);\r\n                 } catch (e) {\r\n@@ -151,20 +158,18 @@\n             }\r\n         }\r\n     };\r\n \r\n-    // Tratamento de erros de rede [[12]]\r\n     xhr.onerror = function() {\r\n-        logDebug(\"Erro de rede ao consultar \" + selectedAPI.name);\r\n+        logDebug(\"Erro de rede ou bloqueio CORS detectado\");\r\n         cnpjErrorCache[cnpj] = true;\r\n-        alert(\"Erro de rede ao consultar \" + selectedAPI.name);\r\n+        alert(\"Erro de comunicação com a API. Verifique sua conexão.\");\r\n     };\r\n \r\n     xhr.send();\r\n });\r\n \r\n \r\n-\r\n /* ################## BUSCA CEP ################## */\r\n \r\n function limpa_formulário_cep() {\r\n     //Limpa valores do formulário de cep.\r\n"
                },
                {
                    "date": 1743098212621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n         alert(\"CNPJ inválido. Verifique o formato.\");\r\n         return;\r\n     }\r\n \r\n-    // Adicionando nova API CNPJs.dev [[11]]\r\n+    // Lista de APIs com ordem aleatória [[1]][[10]]\r\n     var apis = [\r\n         {\r\n             name: \"BrasilAPI\",\r\n             url: \"https://brasilapi.com.br/api/cnpj/v1/\" + cnpj\r\n@@ -86,87 +86,84 @@\n             url: \"https://api.cnpjs.dev/v1/\" + cnpj\r\n         }\r\n     ];\r\n     \r\n-    var selectedAPI = apis[Math.floor(Math.random() * apis.length)];\r\n-    logDebug(\"API selecionada: \" + selectedAPI.name);\r\n+    // Embaralha a ordem das APIs [[10]]\r\n+    apis.sort(() => Math.random() - 0.5);\r\n+    logDebug(\"Ordem de tentativa: \" + apis.map(api => api.name).join(\" → \"));\r\n \r\n-    var xhr = new XMLHttpRequest();\r\n-    xhr.open(\"GET\", selectedAPI.url, true);\r\n-    \r\n-    xhr.onreadystatechange = function() {\r\n-        if (xhr.readyState === 4) {\r\n-            logDebug(\"Status da requisição: \" + xhr.status);\r\n-            \r\n-            if (xhr.status >= 200 && xhr.status < 300) {\r\n-                try {\r\n-                    var data = JSON.parse(xhr.responseText);\r\n-                    logDebug(\"Resposta da API recebida com sucesso\");\r\n-                    \r\n-                    delete cnpjErrorCache[cnpj];\r\n-                    \r\n-                    // Mapeamento adaptado para nova API [[11]]\r\n-                    var formMapper = {\r\n-                        razaoSocial: data.razao_social,\r\n-                        nomeFantasia: data.nome_fantasia,\r\n-                        logradouro: selectedAPI.name === \"CNPJs.dev\" ? \r\n-                            (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) : \r\n-                            (selectedAPI.name === \"BrasilAPI\" ? data.logradouro : (data.endereco && data.endereco.logradouro)),\r\n-                        numero: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.numero : \r\n-                            (selectedAPI.name === \"BrasilAPI\" ? data.numero : (data.endereco && data.endereco.numero)),\r\n-                        bairro: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.bairro : \r\n-                            (selectedAPI.name === \"BrasilAPI\" ? data.bairro : (data.endereco && data.endereco.bairro)),\r\n-                        cep: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.cep : \r\n-                            (selectedAPI.name === \"BrasilAPI\" ? data.cep : (data.endereco && data.endereco.cep)),\r\n-                        uf: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.uf : \r\n-                            (selectedAPI.name === \"BrasilAPI\" ? data.uf : (data.endereco && data.endereco.uf)),\r\n-                        municipio: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.municipio : \r\n-                            (selectedAPI.name === \"BrasilAPI\" ? data.municipio : (data.endereco && data.endereco.municipio))\r\n-                    };\r\n+    // Função recursiva para tentar APIs sequencialmente [[5]]\r\n+    function tryNextAPI(index) {\r\n+        if (index >= apis.length) {\r\n+            logDebug(\"Todas as APIs falharam\");\r\n+            cnpjErrorCache[cnpj] = true;\r\n+            alert(\"Falha em todas as tentativas. CNPJ bloqueado temporariamente.\");\r\n+            return;\r\n+        }\r\n \r\n-                    for (var field in formMapper) {\r\n-                        if (formMapper.hasOwnProperty(field)) {\r\n-                            var input = document.getElementById(field);\r\n-                            if (input) input.value = formMapper[field] || \"\";\r\n+        var selectedAPI = apis[index];\r\n+        logDebug(\"Tentando API: \" + selectedAPI.name + \" (\" + (index+1) + \"/\" + apis.length + \")\");\r\n+\r\n+        var xhr = new XMLHttpRequest();\r\n+        xhr.open(\"GET\", selectedAPI.url, true);\r\n+        \r\n+        xhr.onreadystatechange = function() {\r\n+            if (xhr.readyState === 4) {\r\n+                logDebug(\"Status da requisição: \" + xhr.status);\r\n+                \r\n+                if (xhr.status >= 200 && xhr.status < 300) {\r\n+                    try {\r\n+                        var data = JSON.parse(xhr.responseText);\r\n+                        logDebug(\"Resposta da API recebida com sucesso\");\r\n+                        \r\n+                        // Limpa cache de erro\r\n+                        delete cnpjErrorCache[cnpj];\r\n+                        \r\n+                        // Mapeamento adaptado para as 3 APIs [[11]]\r\n+                        var formMapper = {\r\n+                            razaoSocial: data.razao_social,\r\n+                            nomeFantasia: data.nome_fantasia,\r\n+                            logradouro: selectedAPI.name === \"CNPJs.dev\" ? \r\n+                                (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) : \r\n+                                (selectedAPI.name === \"BrasilAPI\" ? data.logradouro : (data.endereco && data.endereco.logradouro)),\r\n+                            numero: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.numero : \r\n+                                (selectedAPI.name === \"BrasilAPI\" ? data.numero : (data.endereco && data.endereco.numero)),\r\n+                            bairro: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.bairro : \r\n+                                (selectedAPI.name === \"BrasilAPI\" ? data.bairro : (data.endereco && data.endereco.bairro)),\r\n+                            cep: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.cep : \r\n+                                (selectedAPI.name === \"BrasilAPI\" ? data.cep : (data.endereco && data.endereco.cep)),\r\n+                            uf: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.uf : \r\n+                                (selectedAPI.name === \"BrasilAPI\" ? data.uf : (data.endereco && data.endereco.uf)),\r\n+                            municipio: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.municipio : \r\n+                                (selectedAPI.name === \"BrasilAPI\" ? data.municipio : (data.endereco && data.endereco.municipio))\r\n+                        };\r\n+\r\n+                        for (var field in formMapper) {\r\n+                            if (formMapper.hasOwnProperty(field)) {\r\n+                                var input = document.getElementById(field);\r\n+                                if (input) input.value = formMapper[field] || \"\";\r\n+                            }\r\n                         }\r\n+                    } catch (e) {\r\n+                        logDebug(\"Erro ao processar resposta: \" + e.message);\r\n+                        tryNextAPI(index + 1); // Tenta próxima API [[5]]\r\n                     }\r\n-                } catch (e) {\r\n-                    logDebug(\"Erro ao processar resposta: \" + e.message);\r\n-                    alert(\"Erro ao processar dados da API\");\r\n+                } else {\r\n+                    tryNextAPI(index + 1); // Tenta próxima API em caso de erro HTTP [[4]]\r\n                 }\r\n-            } else {\r\n-                try {\r\n-                    var error = JSON.parse(xhr.responseText);\r\n-                    error.apiName = selectedAPI.name;\r\n-                    \r\n-                    cnpjErrorCache[cnpj] = true;\r\n-                    \r\n-                    var errorMessage = \"Erro na consulta via \" + error.apiName + \": \";\r\n-                    \r\n-                    if (error.apiName === \"BrasilAPI\" && error.errors) {\r\n-                        errorMessage += error.errors[0].message;\r\n-                    } else if (error.apiName === \"InverTexto\") {\r\n-                        errorMessage += error.message || \"Erro desconhecido\";\r\n-                    } else if (error.apiName === \"CNPJs.dev\") {\r\n-                        errorMessage += error.message || \"Erro desconhecido\"; // [[11]]\r\n-                    }\r\n-                    \r\n-                    alert(errorMessage);\r\n-                } catch (e) {\r\n-                    logDebug(\"Falha na comunicação com a API\");\r\n-                    alert(\"Falha na comunicação com a API\");\r\n-                }\r\n             }\r\n-        }\r\n-    };\r\n+        };\r\n \r\n-    xhr.onerror = function() {\r\n-        logDebug(\"Erro de rede ou bloqueio CORS detectado\");\r\n-        cnpjErrorCache[cnpj] = true;\r\n-        alert(\"Erro de comunicação com a API. Verifique sua conexão.\");\r\n-    };\r\n+        xhr.onerror = function() {\r\n+            logDebug(\"Erro de rede ou bloqueio CORS detectado\");\r\n+            tryNextAPI(index + 1); // Tenta próxima API em caso de erro de rede\r\n+        };\r\n \r\n-    xhr.send();\r\n+        xhr.send();\r\n+    }\r\n+\r\n+    // Inicia a cadeia de tentativas\r\n+    tryNextAPI(0);\r\n });\r\n \r\n \r\n /* ################## BUSCA CEP ################## */\r\n"
                },
                {
                    "date": 1743098436921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,16 +51,19 @@\n     console.log(\"[DEBUG] \" + message);\r\n }\r\n \r\n function formatarCNPJ(cnpj) {\r\n+    if (typeof cnpj !== 'string') {\r\n+        cnpj = String(cnpj); // Corrige erro replace [[5]][[6]]\r\n+    }\r\n     return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n }\r\n \r\n-document.getElementById(\"cnpj\").addEventListener(\"blur\", function() {\r\n+document.getElementById(\"cnpj\").addEventListener(\"blur\", function () {\r\n     logDebug(\"Iniciando processo de consulta...\");\r\n-    \r\n+\r\n     var cnpj = this.value.replace(/\\D/g, \"\");\r\n-    \r\n+\r\n     if (cnpjErrorCache[cnpj]) {\r\n         logDebug(\"CNPJ \" + cnpj + \" já consta no cache de erros. Consulta abortada.\");\r\n         return;\r\n     }\r\n@@ -70,9 +73,8 @@\n         alert(\"CNPJ inválido. Verifique o formato.\");\r\n         return;\r\n     }\r\n \r\n-    // Lista de APIs com ordem aleatória [[1]][[10]]\r\n     var apis = [\r\n         {\r\n             name: \"BrasilAPI\",\r\n             url: \"https://brasilapi.com.br/api/cnpj/v1/\" + cnpj\r\n@@ -85,88 +87,85 @@\n             name: \"CNPJs.dev\",\r\n             url: \"https://api.cnpjs.dev/v1/\" + cnpj\r\n         }\r\n     ];\r\n-    \r\n-    // Embaralha a ordem das APIs [[10]]\r\n+\r\n     apis.sort(() => Math.random() - 0.5);\r\n     logDebug(\"Ordem de tentativa: \" + apis.map(api => api.name).join(\" → \"));\r\n \r\n-    // Função recursiva para tentar APIs sequencialmente [[5]]\r\n     function tryNextAPI(index) {\r\n         if (index >= apis.length) {\r\n             logDebug(\"Todas as APIs falharam\");\r\n             cnpjErrorCache[cnpj] = true;\r\n             alert(\"Falha em todas as tentativas. CNPJ bloqueado temporariamente.\");\r\n             return;\r\n         }\r\n \r\n-        var selectedAPI = apis[index];\r\n-        logDebug(\"Tentando API: \" + selectedAPI.name + \" (\" + (index+1) + \"/\" + apis.length + \")\");\r\n+        setTimeout(() => { // Delay entre tentativas [[4]]\r\n+            var selectedAPI = apis[index];\r\n+            logDebug(\"Tentando API: \" + selectedAPI.name + \" (\" + (index + 1) + \"/\" + apis.length + \")\");\r\n \r\n-        var xhr = new XMLHttpRequest();\r\n-        xhr.open(\"GET\", selectedAPI.url, true);\r\n-        \r\n-        xhr.onreadystatechange = function() {\r\n-            if (xhr.readyState === 4) {\r\n-                logDebug(\"Status da requisição: \" + xhr.status);\r\n-                \r\n-                if (xhr.status >= 200 && xhr.status < 300) {\r\n-                    try {\r\n-                        var data = JSON.parse(xhr.responseText);\r\n-                        logDebug(\"Resposta da API recebida com sucesso\");\r\n-                        \r\n-                        // Limpa cache de erro\r\n-                        delete cnpjErrorCache[cnpj];\r\n-                        \r\n-                        // Mapeamento adaptado para as 3 APIs [[11]]\r\n-                        var formMapper = {\r\n-                            razaoSocial: data.razao_social,\r\n-                            nomeFantasia: data.nome_fantasia,\r\n-                            logradouro: selectedAPI.name === \"CNPJs.dev\" ? \r\n-                                (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) : \r\n-                                (selectedAPI.name === \"BrasilAPI\" ? data.logradouro : (data.endereco && data.endereco.logradouro)),\r\n-                            numero: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.numero : \r\n-                                (selectedAPI.name === \"BrasilAPI\" ? data.numero : (data.endereco && data.endereco.numero)),\r\n-                            bairro: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.bairro : \r\n-                                (selectedAPI.name === \"BrasilAPI\" ? data.bairro : (data.endereco && data.endereco.bairro)),\r\n-                            cep: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.cep : \r\n-                                (selectedAPI.name === \"BrasilAPI\" ? data.cep : (data.endereco && data.endereco.cep)),\r\n-                            uf: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.uf : \r\n-                                (selectedAPI.name === \"BrasilAPI\" ? data.uf : (data.endereco && data.endereco.uf)),\r\n-                            municipio: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.municipio : \r\n-                                (selectedAPI.name === \"BrasilAPI\" ? data.municipio : (data.endereco && data.endereco.municipio))\r\n-                        };\r\n+            var xhr = new XMLHttpRequest();\r\n+            xhr.open(\"GET\", selectedAPI.url, true);\r\n+            xhr.setRequestHeader('Content-Type', 'application/json'); // Adiciona header [[1]]\r\n \r\n-                        for (var field in formMapper) {\r\n-                            if (formMapper.hasOwnProperty(field)) {\r\n-                                var input = document.getElementById(field);\r\n-                                if (input) input.value = formMapper[field] || \"\";\r\n+            xhr.onreadystatechange = function () {\r\n+                if (xhr.readyState === 4) {\r\n+                    logDebug(\"Status da requisição: \" + xhr.status);\r\n+\r\n+                    if (xhr.status >= 200 && xhr.status < 300) {\r\n+                        try {\r\n+                            var data = JSON.parse(xhr.responseText);\r\n+                            logDebug(\"Resposta da API recebida com sucesso\");\r\n+\r\n+                            delete cnpjErrorCache[cnpj];\r\n+\r\n+                            var formMapper = {\r\n+                                razaoSocial: data.razao_social,\r\n+                                nomeFantasia: data.nome_fantasia,\r\n+                                logradouro: selectedAPI.name === \"CNPJs.dev\" ?\r\n+                                    (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) :\r\n+                                    (selectedAPI.name === \"BrasilAPI\" ? data.logradouro : (data.endereco && data.endereco.logradouro)),\r\n+                                numero: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.numero :\r\n+                                    (selectedAPI.name === \"BrasilAPI\" ? data.numero : (data.endereco && data.endereco.numero)),\r\n+                                bairro: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.bairro :\r\n+                                    (selectedAPI.name === \"BrasilAPI\" ? data.bairro : (data.endereco && data.endereco.bairro)),\r\n+                                cep: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.cep :\r\n+                                    (selectedAPI.name === \"BrasilAPI\" ? data.cep : (data.endereco && data.endereco.cep)),\r\n+                                uf: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.uf :\r\n+                                    (selectedAPI.name === \"BrasilAPI\" ? data.uf : (data.endereco && data.endereco.uf)),\r\n+                                municipio: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.municipio :\r\n+                                    (selectedAPI.name === \"BrasilAPI\" ? data.municipio : (data.endereco && data.endereco.municipio))\r\n+                            };\r\n+\r\n+                            for (var field in formMapper) {\r\n+                                if (formMapper.hasOwnProperty(field)) {\r\n+                                    var input = document.getElementById(field);\r\n+                                    if (input) input.value = formMapper[field] || \"\";\r\n+                                }\r\n                             }\r\n+                        } catch (e) {\r\n+                            logDebug(\"Erro ao processar resposta: \" + e.message);\r\n+                            tryNextAPI(index + 1);\r\n                         }\r\n-                    } catch (e) {\r\n-                        logDebug(\"Erro ao processar resposta: \" + e.message);\r\n-                        tryNextAPI(index + 1); // Tenta próxima API [[5]]\r\n+                    } else {\r\n+                        tryNextAPI(index + 1);\r\n                     }\r\n-                } else {\r\n-                    tryNextAPI(index + 1); // Tenta próxima API em caso de erro HTTP [[4]]\r\n                 }\r\n-            }\r\n-        };\r\n+            };\r\n \r\n-        xhr.onerror = function() {\r\n-            logDebug(\"Erro de rede ou bloqueio CORS detectado\");\r\n-            tryNextAPI(index + 1); // Tenta próxima API em caso de erro de rede\r\n-        };\r\n+            xhr.onerror = function () {\r\n+                logDebug(\"Erro de rede ou bloqueio CORS detectado\");\r\n+                tryNextAPI(index + 1);\r\n+            };\r\n \r\n-        xhr.send();\r\n+            xhr.send();\r\n+        }, index * 2000); // Atraso crescente de 1s, 2s, 3s...\r\n     }\r\n \r\n-    // Inicia a cadeia de tentativas\r\n     tryNextAPI(0);\r\n });\r\n \r\n-\r\n /* ################## BUSCA CEP ################## */\r\n \r\n function limpa_formulário_cep() {\r\n     //Limpa valores do formulário de cep.\r\n"
                },
                {
                    "date": 1743098734736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,18 +52,18 @@\n }\r\n \r\n function formatarCNPJ(cnpj) {\r\n     if (typeof cnpj !== 'string') {\r\n-        cnpj = String(cnpj); // Corrige erro replace [[5]][[6]]\r\n+        cnpj = String(cnpj); // Converte para string [[3]]\r\n     }\r\n     return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n }\r\n \r\n-document.getElementById(\"cnpj\").addEventListener(\"blur\", function () {\r\n+document.getElementById(\"cnpj\").addEventListener(\"blur\", function() {\r\n     logDebug(\"Iniciando processo de consulta...\");\r\n-\r\n+    \r\n     var cnpj = this.value.replace(/\\D/g, \"\");\r\n-\r\n+    \r\n     if (cnpjErrorCache[cnpj]) {\r\n         logDebug(\"CNPJ \" + cnpj + \" já consta no cache de erros. Consulta abortada.\");\r\n         return;\r\n     }\r\n@@ -87,9 +87,9 @@\n             name: \"CNPJs.dev\",\r\n             url: \"https://api.cnpjs.dev/v1/\" + cnpj\r\n         }\r\n     ];\r\n-\r\n+    \r\n     apis.sort(() => Math.random() - 0.5);\r\n     logDebug(\"Ordem de tentativa: \" + apis.map(api => api.name).join(\" → \"));\r\n \r\n     function tryNextAPI(index) {\r\n@@ -101,40 +101,45 @@\n         }\r\n \r\n         setTimeout(() => { // Delay entre tentativas [[4]]\r\n             var selectedAPI = apis[index];\r\n-            logDebug(\"Tentando API: \" + selectedAPI.name + \" (\" + (index + 1) + \"/\" + apis.length + \")\");\r\n+            logDebug(\"Tentando API: \" + selectedAPI.name + \" (\" + (index+1) + \"/\" + apis.length + \")\");\r\n \r\n             var xhr = new XMLHttpRequest();\r\n             xhr.open(\"GET\", selectedAPI.url, true);\r\n-            xhr.setRequestHeader('Content-Type', 'application/json'); // Adiciona header [[1]]\r\n+            \r\n+            // Headers recomendados pela KB [[1]][[2]][[6]]\r\n+            xhr.setRequestHeader('User-Agent', 'Ws4SkyTeam/1.0 (+ ' + window.location.origin + ')');\r\n+            xhr.setRequestHeader('Accept', 'application/json');\r\n+            xhr.setRequestHeader('Content-Type', 'application/json');\r\n+            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n \r\n-            xhr.onreadystatechange = function () {\r\n+            xhr.onreadystatechange = function() {\r\n                 if (xhr.readyState === 4) {\r\n                     logDebug(\"Status da requisição: \" + xhr.status);\r\n-\r\n+                    \r\n                     if (xhr.status >= 200 && xhr.status < 300) {\r\n                         try {\r\n                             var data = JSON.parse(xhr.responseText);\r\n                             logDebug(\"Resposta da API recebida com sucesso\");\r\n-\r\n+                            \r\n                             delete cnpjErrorCache[cnpj];\r\n-\r\n+                            \r\n                             var formMapper = {\r\n                                 razaoSocial: data.razao_social,\r\n                                 nomeFantasia: data.nome_fantasia,\r\n-                                logradouro: selectedAPI.name === \"CNPJs.dev\" ?\r\n-                                    (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) :\r\n+                                logradouro: selectedAPI.name === \"CNPJs.dev\" ? \r\n+                                    (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) : \r\n                                     (selectedAPI.name === \"BrasilAPI\" ? data.logradouro : (data.endereco && data.endereco.logradouro)),\r\n-                                numero: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.numero :\r\n+                                numero: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.numero : \r\n                                     (selectedAPI.name === \"BrasilAPI\" ? data.numero : (data.endereco && data.endereco.numero)),\r\n-                                bairro: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.bairro :\r\n+                                bairro: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.bairro : \r\n                                     (selectedAPI.name === \"BrasilAPI\" ? data.bairro : (data.endereco && data.endereco.bairro)),\r\n-                                cep: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.cep :\r\n+                                cep: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.cep : \r\n                                     (selectedAPI.name === \"BrasilAPI\" ? data.cep : (data.endereco && data.endereco.cep)),\r\n-                                uf: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.uf :\r\n+                                uf: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.uf : \r\n                                     (selectedAPI.name === \"BrasilAPI\" ? data.uf : (data.endereco && data.endereco.uf)),\r\n-                                municipio: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.municipio :\r\n+                                municipio: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.municipio : \r\n                                     (selectedAPI.name === \"BrasilAPI\" ? data.municipio : (data.endereco && data.endereco.municipio))\r\n                             };\r\n \r\n                             for (var field in formMapper) {\r\n@@ -152,15 +157,15 @@\n                     }\r\n                 }\r\n             };\r\n \r\n-            xhr.onerror = function () {\r\n+            xhr.onerror = function() {\r\n                 logDebug(\"Erro de rede ou bloqueio CORS detectado\");\r\n                 tryNextAPI(index + 1);\r\n             };\r\n \r\n             xhr.send();\r\n-        }, index * 2000); // Atraso crescente de 1s, 2s, 3s...\r\n+        }, index * 2500); // Atraso crescente de 1s, 2s, 3s...\r\n     }\r\n \r\n     tryNextAPI(0);\r\n });\r\n"
                },
                {
                    "date": 1743099260131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,18 +52,18 @@\n }\r\n \r\n function formatarCNPJ(cnpj) {\r\n     if (typeof cnpj !== 'string') {\r\n-        cnpj = String(cnpj); // Converte para string [[3]]\r\n+        cnpj = String(cnpj); // Converte para string\r\n     }\r\n     return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n }\r\n \r\n document.getElementById(\"cnpj\").addEventListener(\"blur\", function() {\r\n     logDebug(\"Iniciando processo de consulta...\");\r\n-    \r\n+\r\n     var cnpj = this.value.replace(/\\D/g, \"\");\r\n-    \r\n+\r\n     if (cnpjErrorCache[cnpj]) {\r\n         logDebug(\"CNPJ \" + cnpj + \" já consta no cache de erros. Consulta abortada.\");\r\n         return;\r\n     }\r\n@@ -77,8 +77,9 @@\n     var apis = [\r\n         {\r\n             name: \"BrasilAPI\",\r\n             url: \"https://brasilapi.com.br/api/cnpj/v1/\" + cnpj\r\n+            // Caso seja necessário contornar bloqueios CORS, considere usar um proxy (ex.: window.location.origin + \"/proxy.php?cnpj=\" + cnpj)\r\n         },\r\n         {\r\n             name: \"InverTexto\",\r\n             url: \"https://api.invertexto.com/v1/cnpj/\" + cnpj + \"?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w\"\r\n@@ -87,90 +88,83 @@\n             name: \"CNPJs.dev\",\r\n             url: \"https://api.cnpjs.dev/v1/\" + cnpj\r\n         }\r\n     ];\r\n-    \r\n+\r\n+    // Embaralha a ordem das APIs para tentativas aleatórias\r\n     apis.sort(() => Math.random() - 0.5);\r\n     logDebug(\"Ordem de tentativa: \" + apis.map(api => api.name).join(\" → \"));\r\n \r\n+    function processarResposta(data, selectedAPI) {\r\n+        logDebug(\"Resposta da API \" + selectedAPI.name + \" recebida com sucesso\");\r\n+        delete cnpjErrorCache[cnpj];\r\n+\r\n+        var formMapper = {\r\n+            razaoSocial: data.razao_social,\r\n+            nomeFantasia: data.nome_fantasia,\r\n+            logradouro: selectedAPI.name === \"CNPJs.dev\" ?\r\n+                (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) :\r\n+                (selectedAPI.name === \"BrasilAPI\" ? data.logradouro : (data.endereco && data.endereco.logradouro)),\r\n+            numero: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.numero :\r\n+                (selectedAPI.name === \"BrasilAPI\" ? data.numero : (data.endereco && data.endereco.numero)),\r\n+            bairro: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.bairro :\r\n+                (selectedAPI.name === \"BrasilAPI\" ? data.bairro : (data.endereco && data.endereco.bairro)),\r\n+            cep: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.cep :\r\n+                (selectedAPI.name === \"BrasilAPI\" ? data.cep : (data.endereco && data.endereco.cep)),\r\n+            uf: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.uf :\r\n+                (selectedAPI.name === \"BrasilAPI\" ? data.uf : (data.endereco && data.endereco.uf)),\r\n+            municipio: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.municipio :\r\n+                (selectedAPI.name === \"BrasilAPI\" ? data.municipio : (data.endereco && data.endereco.municipio))\r\n+        };\r\n+\r\n+        for (var field in formMapper) {\r\n+            if (formMapper.hasOwnProperty(field)) {\r\n+                var input = document.getElementById(field);\r\n+                if (input) input.value = formMapper[field] || \"\";\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n     function tryNextAPI(index) {\r\n         if (index >= apis.length) {\r\n             logDebug(\"Todas as APIs falharam\");\r\n             cnpjErrorCache[cnpj] = true;\r\n             alert(\"Falha em todas as tentativas. CNPJ bloqueado temporariamente.\");\r\n             return;\r\n         }\r\n \r\n-        setTimeout(() => { // Delay entre tentativas [[4]]\r\n+        // Delay crescente entre as tentativas (2.5s, 5s, 7.5s, etc.)\r\n+        setTimeout(() => {\r\n             var selectedAPI = apis[index];\r\n-            logDebug(\"Tentando API: \" + selectedAPI.name + \" (\" + (index+1) + \"/\" + apis.length + \")\");\r\n+            logDebug(\"Tentando API: \" + selectedAPI.name + \" (\" + (index + 1) + \"/\" + apis.length + \")\");\r\n \r\n-            var xhr = new XMLHttpRequest();\r\n-            xhr.open(\"GET\", selectedAPI.url, true);\r\n-            \r\n-            // Headers recomendados pela KB [[1]][[2]][[6]]\r\n-            xhr.setRequestHeader('User-Agent', 'Ws4SkyTeam/1.0 (+ ' + window.location.origin + ')');\r\n-            xhr.setRequestHeader('Accept', 'application/json');\r\n-            xhr.setRequestHeader('Content-Type', 'application/json');\r\n-            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n-\r\n-            xhr.onreadystatechange = function() {\r\n-                if (xhr.readyState === 4) {\r\n-                    logDebug(\"Status da requisição: \" + xhr.status);\r\n-                    \r\n-                    if (xhr.status >= 200 && xhr.status < 300) {\r\n-                        try {\r\n-                            var data = JSON.parse(xhr.responseText);\r\n-                            logDebug(\"Resposta da API recebida com sucesso\");\r\n-                            \r\n-                            delete cnpjErrorCache[cnpj];\r\n-                            \r\n-                            var formMapper = {\r\n-                                razaoSocial: data.razao_social,\r\n-                                nomeFantasia: data.nome_fantasia,\r\n-                                logradouro: selectedAPI.name === \"CNPJs.dev\" ? \r\n-                                    (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) : \r\n-                                    (selectedAPI.name === \"BrasilAPI\" ? data.logradouro : (data.endereco && data.endereco.logradouro)),\r\n-                                numero: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.numero : \r\n-                                    (selectedAPI.name === \"BrasilAPI\" ? data.numero : (data.endereco && data.endereco.numero)),\r\n-                                bairro: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.bairro : \r\n-                                    (selectedAPI.name === \"BrasilAPI\" ? data.bairro : (data.endereco && data.endereco.bairro)),\r\n-                                cep: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.cep : \r\n-                                    (selectedAPI.name === \"BrasilAPI\" ? data.cep : (data.endereco && data.endereco.cep)),\r\n-                                uf: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.uf : \r\n-                                    (selectedAPI.name === \"BrasilAPI\" ? data.uf : (data.endereco && data.endereco.uf)),\r\n-                                municipio: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.municipio : \r\n-                                    (selectedAPI.name === \"BrasilAPI\" ? data.municipio : (data.endereco && data.endereco.municipio))\r\n-                            };\r\n-\r\n-                            for (var field in formMapper) {\r\n-                                if (formMapper.hasOwnProperty(field)) {\r\n-                                    var input = document.getElementById(field);\r\n-                                    if (input) input.value = formMapper[field] || \"\";\r\n-                                }\r\n-                            }\r\n-                        } catch (e) {\r\n-                            logDebug(\"Erro ao processar resposta: \" + e.message);\r\n-                            tryNextAPI(index + 1);\r\n-                        }\r\n-                    } else {\r\n-                        tryNextAPI(index + 1);\r\n-                    }\r\n+            fetch(selectedAPI.url, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    \"User-Agent\": \"Ws4SkyTeam/1.0 (+ \" + window.location.origin + \")\",\r\n+                    \"Accept\": \"application/json\",\r\n+                    \"Content-Type\": \"application/json\"\r\n                 }\r\n-            };\r\n-\r\n-            xhr.onerror = function() {\r\n-                logDebug(\"Erro de rede ou bloqueio CORS detectado\");\r\n+            })\r\n+            .then(response => {\r\n+                logDebug(\"Status da resposta: \" + response.status);\r\n+                if (!response.ok) throw new Error(\"Erro na API\");\r\n+                return response.json();\r\n+            })\r\n+            .then(data => {\r\n+                processarResposta(data, selectedAPI);\r\n+            })\r\n+            .catch(error => {\r\n+                logDebug(\"Erro na API \" + selectedAPI.name + \": \" + error.message);\r\n                 tryNextAPI(index + 1);\r\n-            };\r\n-\r\n-            xhr.send();\r\n-        }, index * 2500); // Atraso crescente de 1s, 2s, 3s...\r\n+            });\r\n+        }, index * 2500);\r\n     }\r\n \r\n     tryNextAPI(0);\r\n });\r\n \r\n+\r\n /* ################## BUSCA CEP ################## */\r\n \r\n function limpa_formulário_cep() {\r\n     //Limpa valores do formulário de cep.\r\n"
                },
                {
                    "date": 1743099704058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,125 +46,156 @@\n var cnpjErrorCache = {};\r\n var debugLogs = [];\r\n \r\n function logDebug(message) {\r\n-    debugLogs.push(message);\r\n-    console.log(\"[DEBUG] \" + message);\r\n+  debugLogs.push(message);\r\n+  console.log(\"[DEBUG] \" + message);\r\n }\r\n \r\n function formatarCNPJ(cnpj) {\r\n-    if (typeof cnpj !== 'string') {\r\n-        cnpj = String(cnpj); // Converte para string\r\n-    }\r\n-    return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n+  if (typeof cnpj !== 'string') {\r\n+    cnpj = String(cnpj); // Converte para string\r\n+  }\r\n+  return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n }\r\n \r\n document.getElementById(\"cnpj\").addEventListener(\"blur\", function() {\r\n-    logDebug(\"Iniciando processo de consulta...\");\r\n+  logDebug(\"Iniciando processo de consulta...\");\r\n \r\n-    var cnpj = this.value.replace(/\\D/g, \"\");\r\n+  var cnpj = this.value.replace(/\\D/g, \"\");\r\n \r\n-    if (cnpjErrorCache[cnpj]) {\r\n-        logDebug(\"CNPJ \" + cnpj + \" já consta no cache de erros. Consulta abortada.\");\r\n-        return;\r\n-    }\r\n+  if (cnpjErrorCache[cnpj]) {\r\n+    logDebug(\"CNPJ \" + cnpj + \" já consta no cache de erros. Consulta abortada.\");\r\n+    return;\r\n+  }\r\n \r\n-    if (!/^\\d{14}$/.test(cnpj)) {\r\n-        logDebug(\"CNPJ inválido detectado: \" + cnpj);\r\n-        alert(\"CNPJ inválido. Verifique o formato.\");\r\n-        return;\r\n+  if (!/^\\d{14}$/.test(cnpj)) {\r\n+    logDebug(\"CNPJ inválido detectado: \" + cnpj);\r\n+    alert(\"CNPJ inválido. Verifique o formato.\");\r\n+    return;\r\n+  }\r\n+\r\n+  // Definição das APIs com suas respectivas URLs\r\n+  var apis = [\r\n+    {\r\n+      name: \"BrasilAPI\",\r\n+      url: \"https://brasilapi.com.br/api/cnpj/v1/\" + cnpj\r\n+      // Caso persista problema de CORS, considere utilizar um proxy (ex.: window.location.origin + \"/proxy.php?cnpj=\" + cnpj)\r\n+    },\r\n+    {\r\n+      name: \"InverTexto\",\r\n+      url: \"https://api.invertexto.com/v1/cnpj/\" + cnpj + \"?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w\"\r\n+    },\r\n+    {\r\n+      name: \"CNPJs.dev\",\r\n+      url: \"https://api.cnpjs.dev/v1/\" + cnpj\r\n     }\r\n+  ];\r\n \r\n-    var apis = [\r\n-        {\r\n-            name: \"BrasilAPI\",\r\n-            url: \"https://brasilapi.com.br/api/cnpj/v1/\" + cnpj\r\n-            // Caso seja necessário contornar bloqueios CORS, considere usar um proxy (ex.: window.location.origin + \"/proxy.php?cnpj=\" + cnpj)\r\n-        },\r\n-        {\r\n-            name: \"InverTexto\",\r\n-            url: \"https://api.invertexto.com/v1/cnpj/\" + cnpj + \"?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w\"\r\n-        },\r\n-        {\r\n-            name: \"CNPJs.dev\",\r\n-            url: \"https://api.cnpjs.dev/v1/\" + cnpj\r\n-        }\r\n-    ];\r\n+  // Embaralha a ordem das APIs para tentativas aleatórias\r\n+  apis.sort(() => Math.random() - 0.5);\r\n+  logDebug(\"Ordem de tentativa: \" + apis.map(api => api.name).join(\" → \"));\r\n \r\n-    // Embaralha a ordem das APIs para tentativas aleatórias\r\n-    apis.sort(() => Math.random() - 0.5);\r\n-    logDebug(\"Ordem de tentativa: \" + apis.map(api => api.name).join(\" → \"));\r\n+  // Função que processa a resposta de acordo com a API utilizada\r\n+  function processarResposta(data, selectedAPI) {\r\n+    logDebug(\"Resposta da API \" + selectedAPI.name + \" recebida com sucesso\");\r\n+    delete cnpjErrorCache[cnpj];\r\n \r\n-    function processarResposta(data, selectedAPI) {\r\n-        logDebug(\"Resposta da API \" + selectedAPI.name + \" recebida com sucesso\");\r\n-        delete cnpjErrorCache[cnpj];\r\n+    var formMapper = {};\r\n \r\n-        var formMapper = {\r\n-            razaoSocial: data.razao_social,\r\n-            nomeFantasia: data.nome_fantasia,\r\n-            logradouro: selectedAPI.name === \"CNPJs.dev\" ?\r\n-                (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) :\r\n-                (selectedAPI.name === \"BrasilAPI\" ? data.logradouro : (data.endereco && data.endereco.logradouro)),\r\n-            numero: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.numero :\r\n-                (selectedAPI.name === \"BrasilAPI\" ? data.numero : (data.endereco && data.endereco.numero)),\r\n-            bairro: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.bairro :\r\n-                (selectedAPI.name === \"BrasilAPI\" ? data.bairro : (data.endereco && data.endereco.bairro)),\r\n-            cep: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.cep :\r\n-                (selectedAPI.name === \"BrasilAPI\" ? data.cep : (data.endereco && data.endereco.cep)),\r\n-            uf: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.uf :\r\n-                (selectedAPI.name === \"BrasilAPI\" ? data.uf : (data.endereco && data.endereco.uf)),\r\n-            municipio: selectedAPI.name === \"CNPJs.dev\" ? data.endereco.municipio :\r\n-                (selectedAPI.name === \"BrasilAPI\" ? data.municipio : (data.endereco && data.endereco.municipio))\r\n-        };\r\n+    // Mapeamento para cada API com base na documentação:\r\n+    if (selectedAPI.name === \"BrasilAPI\") {\r\n+      // Exemplo: \r\n+      // \"descricao_tipo_de_logradouro\": \"ALAMEDA\",\r\n+      // \"logradouro\": \"FRANCA\",\r\n+      formMapper = {\r\n+        razaoSocial: data.razao_social,\r\n+        nomeFantasia: data.nome_fantasia,\r\n+        logradouro: (data.descricao_tipo_de_logradouro ? data.descricao_tipo_de_logradouro + \" \" : \"\") + data.logradouro,\r\n+        numero: data.numero,\r\n+        bairro: data.bairro,\r\n+        cep: data.cep,\r\n+        uf: data.uf,\r\n+        municipio: data.municipio\r\n+      };\r\n+    } else if (selectedAPI.name === \"CNPJs.dev\") {\r\n+      // Resposta dentro do objeto \"endereco\"\r\n+      formMapper = {\r\n+        razaoSocial: data.razao_social,\r\n+        nomeFantasia: data.nome_fantasia,\r\n+        logradouro: data.endereco ? (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) : \"\",\r\n+        numero: data.endereco ? data.endereco.numero : \"\",\r\n+        bairro: data.endereco ? data.endereco.bairro : \"\",\r\n+        cep: data.endereco ? data.endereco.cep : \"\",\r\n+        uf: data.endereco ? data.endereco.uf : \"\",\r\n+        municipio: data.endereco ? data.endereco.municipio : \"\"\r\n+      };\r\n+    } else if (selectedAPI.name === \"InverTexto\") {\r\n+      // Exemplo de resposta da InverTexto com objeto \"endereco\"\r\n+      formMapper = {\r\n+        razaoSocial: data.razao_social,\r\n+        nomeFantasia: data.nome_fantasia,\r\n+        logradouro: data.endereco ? (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) : \"\",\r\n+        numero: data.endereco ? data.endereco.numero : \"\",\r\n+        bairro: data.endereco ? data.endereco.bairro : \"\",\r\n+        cep: data.endereco ? data.endereco.cep : \"\",\r\n+        uf: data.endereco ? data.endereco.uf : \"\",\r\n+        municipio: data.endereco ? data.endereco.municipio : \"\"\r\n+      };\r\n+    }\r\n \r\n-        for (var field in formMapper) {\r\n-            if (formMapper.hasOwnProperty(field)) {\r\n-                var input = document.getElementById(field);\r\n-                if (input) input.value = formMapper[field] || \"\";\r\n-            }\r\n-        }\r\n+    // Preenche os inputs correspondentes (ids: razaoSocial, nomeFantasia, logradouro, numero, bairro, cep, uf, municipio)\r\n+    for (var field in formMapper) {\r\n+      if (formMapper.hasOwnProperty(field)) {\r\n+        var input = document.getElementById(field);\r\n+        if (input) input.value = formMapper[field] || \"\";\r\n+      }\r\n     }\r\n+  }\r\n \r\n-    function tryNextAPI(index) {\r\n-        if (index >= apis.length) {\r\n-            logDebug(\"Todas as APIs falharam\");\r\n-            cnpjErrorCache[cnpj] = true;\r\n-            alert(\"Falha em todas as tentativas. CNPJ bloqueado temporariamente.\");\r\n-            return;\r\n-        }\r\n+  // Função que tenta cada API em sequência com delay entre tentativas\r\n+  function tryNextAPI(index) {\r\n+    if (index >= apis.length) {\r\n+      logDebug(\"Todas as APIs falharam\");\r\n+      cnpjErrorCache[cnpj] = true;\r\n+      alert(\"Falha em todas as tentativas. CNPJ bloqueado temporariamente.\");\r\n+      return;\r\n+    }\r\n \r\n-        // Delay crescente entre as tentativas (2.5s, 5s, 7.5s, etc.)\r\n-        setTimeout(() => {\r\n-            var selectedAPI = apis[index];\r\n-            logDebug(\"Tentando API: \" + selectedAPI.name + \" (\" + (index + 1) + \"/\" + apis.length + \")\");\r\n+    // Delay crescente entre as tentativas (2.5s, 5s, 7.5s, etc.)\r\n+    setTimeout(() => {\r\n+      var selectedAPI = apis[index];\r\n+      logDebug(\"Tentando API: \" + selectedAPI.name + \" (\" + (index + 1) + \"/\" + apis.length + \")\");\r\n \r\n-            fetch(selectedAPI.url, {\r\n-                method: \"GET\",\r\n-                headers: {\r\n-                    \"User-Agent\": \"Ws4SkyTeam/1.0 (+ \" + window.location.origin + \")\",\r\n-                    \"Accept\": \"application/json\",\r\n-                    \"Content-Type\": \"application/json\"\r\n-                }\r\n-            })\r\n-            .then(response => {\r\n-                logDebug(\"Status da resposta: \" + response.status);\r\n-                if (!response.ok) throw new Error(\"Erro na API\");\r\n-                return response.json();\r\n-            })\r\n-            .then(data => {\r\n-                processarResposta(data, selectedAPI);\r\n-            })\r\n-            .catch(error => {\r\n-                logDebug(\"Erro na API \" + selectedAPI.name + \": \" + error.message);\r\n-                tryNextAPI(index + 1);\r\n-            });\r\n-        }, index * 2500);\r\n-    }\r\n+      fetch(selectedAPI.url, {\r\n+        method: \"GET\",\r\n+        headers: {\r\n+          // Cabeçalhos necessários, sem o 'X-Requested-With'\r\n+          \"User-Agent\": \"Ws4SkyTeam/1.0 (+ \" + window.location.origin + \")\",\r\n+          \"Accept\": \"application/json\",\r\n+          \"Content-Type\": \"application/json\"\r\n+        }\r\n+      })\r\n+      .then(response => {\r\n+        logDebug(\"Status da resposta: \" + response.status);\r\n+        if (!response.ok) throw new Error(\"Erro na API\");\r\n+        return response.json();\r\n+      })\r\n+      .then(data => {\r\n+        processarResposta(data, selectedAPI);\r\n+      })\r\n+      .catch(error => {\r\n+        logDebug(\"Erro na API \" + selectedAPI.name + \": \" + error.message);\r\n+        tryNextAPI(index + 1);\r\n+      });\r\n+    }, index * 2500);\r\n+  }\r\n \r\n-    tryNextAPI(0);\r\n+  tryNextAPI(0);\r\n });\r\n \r\n \r\n+\r\n /* ################## BUSCA CEP ################## */\r\n \r\n function limpa_formulário_cep() {\r\n     //Limpa valores do formulário de cep.\r\n"
                },
                {
                    "date": 1743100753823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,152 +46,150 @@\n var cnpjErrorCache = {};\r\n var debugLogs = [];\r\n \r\n function logDebug(message) {\r\n-  debugLogs.push(message);\r\n-  console.log(\"[DEBUG] \" + message);\r\n+    debugLogs.push(message);\r\n+    console.log(\"[DEBUG] \" + message);\r\n }\r\n \r\n function formatarCNPJ(cnpj) {\r\n-  if (typeof cnpj !== 'string') {\r\n-    cnpj = String(cnpj); // Converte para string\r\n-  }\r\n-  return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n+    if (typeof cnpj !== 'string') {\r\n+        cnpj = String(cnpj); // Converte para string\r\n+    }\r\n+    return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n }\r\n \r\n-document.getElementById(\"cnpj\").addEventListener(\"blur\", function() {\r\n-  logDebug(\"Iniciando processo de consulta...\");\r\n+document.getElementById(\"cnpj\").addEventListener(\"blur\", function () {\r\n+    logDebug(\"Iniciando processo de consulta...\");\r\n \r\n-  var cnpj = this.value.replace(/\\D/g, \"\");\r\n+    var cnpj = this.value.replace(/\\D/g, \"\");\r\n \r\n-  if (cnpjErrorCache[cnpj]) {\r\n-    logDebug(\"CNPJ \" + cnpj + \" já consta no cache de erros. Consulta abortada.\");\r\n-    return;\r\n-  }\r\n+    if (cnpjErrorCache[cnpj]) {\r\n+        logDebug(\"CNPJ \" + cnpj + \" já consta no cache de erros. Consulta abortada.\");\r\n+        return;\r\n+    }\r\n \r\n-  if (!/^\\d{14}$/.test(cnpj)) {\r\n-    logDebug(\"CNPJ inválido detectado: \" + cnpj);\r\n-    alert(\"CNPJ inválido. Verifique o formato.\");\r\n-    return;\r\n-  }\r\n-\r\n-  // Definição das APIs com suas respectivas URLs\r\n-  var apis = [\r\n-    {\r\n-      name: \"BrasilAPI\",\r\n-      url: \"https://brasilapi.com.br/api/cnpj/v1/\" + cnpj\r\n-      // Caso persista problema de CORS, considere utilizar um proxy (ex.: window.location.origin + \"/proxy.php?cnpj=\" + cnpj)\r\n-    },\r\n-    {\r\n-      name: \"InverTexto\",\r\n-      url: \"https://api.invertexto.com/v1/cnpj/\" + cnpj + \"?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w\"\r\n-    },\r\n-    {\r\n-      name: \"CNPJs.dev\",\r\n-      url: \"https://api.cnpjs.dev/v1/\" + cnpj\r\n+    if (!/^\\d{14}$/.test(cnpj)) {\r\n+        logDebug(\"CNPJ inválido detectado: \" + cnpj);\r\n+        alert(\"CNPJ inválido. Verifique o formato.\");\r\n+        return;\r\n     }\r\n-  ];\r\n \r\n-  // Embaralha a ordem das APIs para tentativas aleatórias\r\n-  apis.sort(() => Math.random() - 0.5);\r\n-  logDebug(\"Ordem de tentativa: \" + apis.map(api => api.name).join(\" → \"));\r\n+    // Definição das APIs com suas respectivas URLs\r\n+    var apis = [\r\n+        {\r\n+            name: \"BrasilAPI\",\r\n+            url: \"https://brasilapi.com.br/api/cnpj/v1/\" + cnpj\r\n+            // Caso persista problema de CORS, considere utilizar um proxy (ex.: window.location.origin + \"/proxy.php?cnpj=\" + cnpj)\r\n+        },\r\n+        {\r\n+            name: \"InverTexto\",\r\n+            url: \"https://api.invertexto.com/v1/cnpj/\" + cnpj + \"?token=16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w\"\r\n+        },\r\n+        {\r\n+            name: \"CNPJs.dev\",\r\n+            url: \"https://api.cnpjs.dev/v1/\" + cnpj\r\n+        }\r\n+    ];\r\n \r\n-  // Função que processa a resposta de acordo com a API utilizada\r\n-  function processarResposta(data, selectedAPI) {\r\n-    logDebug(\"Resposta da API \" + selectedAPI.name + \" recebida com sucesso\");\r\n-    delete cnpjErrorCache[cnpj];\r\n+    // Embaralha a ordem das APIs para tentativas aleatórias\r\n+    apis.sort(() => Math.random() - 0.5);\r\n+    logDebug(\"Ordem de tentativa: \" + apis.map(api => api.name).join(\" → \"));\r\n \r\n-    var formMapper = {};\r\n+    // Função que processa a resposta de acordo com a API utilizada\r\n+    function processarResposta(data, selectedAPI) {\r\n+        logDebug(\"Resposta da API \" + selectedAPI.name + \" recebida com sucesso\");\r\n+        delete cnpjErrorCache[cnpj];\r\n \r\n-    // Mapeamento para cada API com base na documentação:\r\n-    if (selectedAPI.name === \"BrasilAPI\") {\r\n-      // Exemplo: \r\n-      // \"descricao_tipo_de_logradouro\": \"ALAMEDA\",\r\n-      // \"logradouro\": \"FRANCA\",\r\n-      formMapper = {\r\n-        razaoSocial: data.razao_social,\r\n-        nomeFantasia: data.nome_fantasia,\r\n-        logradouro: (data.descricao_tipo_de_logradouro ? data.descricao_tipo_de_logradouro + \" \" : \"\") + data.logradouro,\r\n-        numero: data.numero,\r\n-        bairro: data.bairro,\r\n-        cep: data.cep,\r\n-        uf: data.uf,\r\n-        municipio: data.municipio\r\n-      };\r\n-    } else if (selectedAPI.name === \"CNPJs.dev\") {\r\n-      // Resposta dentro do objeto \"endereco\"\r\n-      formMapper = {\r\n-        razaoSocial: data.razao_social,\r\n-        nomeFantasia: data.nome_fantasia,\r\n-        logradouro: data.endereco ? (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) : \"\",\r\n-        numero: data.endereco ? data.endereco.numero : \"\",\r\n-        bairro: data.endereco ? data.endereco.bairro : \"\",\r\n-        cep: data.endereco ? data.endereco.cep : \"\",\r\n-        uf: data.endereco ? data.endereco.uf : \"\",\r\n-        municipio: data.endereco ? data.endereco.municipio : \"\"\r\n-      };\r\n-    } else if (selectedAPI.name === \"InverTexto\") {\r\n-      // Exemplo de resposta da InverTexto com objeto \"endereco\"\r\n-      formMapper = {\r\n-        razaoSocial: data.razao_social,\r\n-        nomeFantasia: data.nome_fantasia,\r\n-        logradouro: data.endereco ? (data.endereco.tipo_logradouro + \" \" + data.endereco.logradouro) : \"\",\r\n-        numero: data.endereco ? data.endereco.numero : \"\",\r\n-        bairro: data.endereco ? data.endereco.bairro : \"\",\r\n-        cep: data.endereco ? data.endereco.cep : \"\",\r\n-        uf: data.endereco ? data.endereco.uf : \"\",\r\n-        municipio: data.endereco ? data.endereco.municipio : \"\"\r\n-      };\r\n-    }\r\n+        var formMapper = {};\r\n \r\n-    // Preenche os inputs correspondentes (ids: razaoSocial, nomeFantasia, logradouro, numero, bairro, cep, uf, municipio)\r\n-    for (var field in formMapper) {\r\n-      if (formMapper.hasOwnProperty(field)) {\r\n-        var input = document.getElementById(field);\r\n-        if (input) input.value = formMapper[field] || \"\";\r\n-      }\r\n-    }\r\n-  }\r\n+        // Mapeamento para cada API com base na documentação:\r\n+        if (selectedAPI.name === \"BrasilAPI\") {\r\n+            // BrasilAPI: observe que os dados extras vêm de campos como \"qsa\", \"cnaes_secundarios\" e \"cnae_fiscal_descricao\"\r\n+            formMapper = {\r\n+                razaoSocial: data.razao_social,\r\n+                nomeFantasia: data.nome_fantasia,\r\n+                situacao_cadastral: data.descricao_situacao_cadastral,\r\n+                simples_nacional: data.opcao_pelo_simples,\r\n+                mei: data.opcao_pelo_mei,\r\n+                socios: data.qsa || [],\r\n+                atividade_principal: data.cnae_fiscal_descricao || \"\",\r\n+                atividades_secundarias: data.cnaes_secundarios || []\r\n+            };\r\n+        } else if (selectedAPI.name === \"CNPJs.dev\") {\r\n+            // CNPJs.dev: a resposta possui os campos \"socios\", \"cnae_fiscal_principal\" e \"cnae_fiscal_secundaria\"\r\n+            formMapper = {\r\n+                razaoSocial: data.razao_social,\r\n+                nomeFantasia: data.nome_fantasia,\r\n+                situacao_cadastral: data.situacao_cadastral,\r\n+                simples_nacional: false, // A API não retorna esse campo; você pode definir conforme sua lógica\r\n+                mei: false,            // idem\r\n+                socios: data.socios || [],\r\n+                atividade_principal: data.cnae_fiscal_principal ? data.cnae_fiscal_principal.nome : \"\",\r\n+                atividades_secundarias: data.cnae_fiscal_secundaria || []\r\n+            };\r\n+        } else if (selectedAPI.name === \"InverTexto\") {\r\n+            // InverTexto: os dados extras estão dentro de \"socios\", \"atividade_principal\" e \"atividades_secundarias\"\r\n+            formMapper = {\r\n+                razaoSocial: data.razao_social,\r\n+                nomeFantasia: data.nome_fantasia,\r\n+                situacao_cadastral: data.situacao ? data.situacao.nome : \"\",\r\n+                simples_nacional: (data.simples && data.simples.optante_simples === \"S\") ? true : false,\r\n+                mei: (data.mei && data.mei.optante_mei === \"S\") ? true : false,\r\n+                socios: data.socios || [],\r\n+                atividade_principal: data.atividade_principal ? data.atividade_principal.descricao : \"\",\r\n+                atividades_secundarias: data.atividades_secundarias || []\r\n+            };\r\n+        }\r\n \r\n-  // Função que tenta cada API em sequência com delay entre tentativas\r\n-  function tryNextAPI(index) {\r\n-    if (index >= apis.length) {\r\n-      logDebug(\"Todas as APIs falharam\");\r\n-      cnpjErrorCache[cnpj] = true;\r\n-      alert(\"Falha em todas as tentativas. CNPJ bloqueado temporariamente.\");\r\n-      return;\r\n+        // Preenche os inputs correspondentes (ids: razaoSocial, nomeFantasia, logradouro, numero, bairro, cep, uf, municipio)\r\n+        for (var field in formMapper) {\r\n+            if (formMapper.hasOwnProperty(field)) {\r\n+                var input = document.getElementById(field);\r\n+                if (input) input.value = formMapper[field] || \"\";\r\n+            }\r\n+        }\r\n     }\r\n \r\n-    // Delay crescente entre as tentativas (2.5s, 5s, 7.5s, etc.)\r\n-    setTimeout(() => {\r\n-      var selectedAPI = apis[index];\r\n-      logDebug(\"Tentando API: \" + selectedAPI.name + \" (\" + (index + 1) + \"/\" + apis.length + \")\");\r\n-\r\n-      fetch(selectedAPI.url, {\r\n-        method: \"GET\",\r\n-        headers: {\r\n-          // Cabeçalhos necessários, sem o 'X-Requested-With'\r\n-          \"User-Agent\": \"Ws4SkyTeam/1.0 (+ \" + window.location.origin + \")\",\r\n-          \"Accept\": \"application/json\",\r\n-          \"Content-Type\": \"application/json\"\r\n+    // Função que tenta cada API em sequência com delay entre tentativas\r\n+    function tryNextAPI(index) {\r\n+        if (index >= apis.length) {\r\n+            logDebug(\"Todas as APIs falharam\");\r\n+            cnpjErrorCache[cnpj] = true;\r\n+            alert(\"Falha em todas as tentativas. CNPJ bloqueado temporariamente.\");\r\n+            return;\r\n         }\r\n-      })\r\n-      .then(response => {\r\n-        logDebug(\"Status da resposta: \" + response.status);\r\n-        if (!response.ok) throw new Error(\"Erro na API\");\r\n-        return response.json();\r\n-      })\r\n-      .then(data => {\r\n-        processarResposta(data, selectedAPI);\r\n-      })\r\n-      .catch(error => {\r\n-        logDebug(\"Erro na API \" + selectedAPI.name + \": \" + error.message);\r\n-        tryNextAPI(index + 1);\r\n-      });\r\n-    }, index * 2500);\r\n-  }\r\n \r\n-  tryNextAPI(0);\r\n+        // Delay crescente entre as tentativas (2.5s, 5s, 7.5s, etc.)\r\n+        setTimeout(() => {\r\n+            var selectedAPI = apis[index];\r\n+            logDebug(\"Tentando API: \" + selectedAPI.name + \" (\" + (index + 1) + \"/\" + apis.length + \")\");\r\n+\r\n+            fetch(selectedAPI.url, {\r\n+                method: \"GET\",\r\n+                headers: {\r\n+                    // Cabeçalhos necessários, sem o 'X-Requested-With'\r\n+                    \"User-Agent\": \"Ws4SkyTeam/1.0 (+ \" + window.location.origin + \")\",\r\n+                    \"Accept\": \"application/json\",\r\n+                    \"Content-Type\": \"application/json\"\r\n+                }\r\n+            })\r\n+                .then(response => {\r\n+                    logDebug(\"Status da resposta: \" + response.status);\r\n+                    if (!response.ok) throw new Error(\"Erro na API\");\r\n+                    return response.json();\r\n+                })\r\n+                .then(data => {\r\n+                    processarResposta(data, selectedAPI);\r\n+                })\r\n+                .catch(error => {\r\n+                    logDebug(\"Erro na API \" + selectedAPI.name + \": \" + error.message);\r\n+                    tryNextAPI(index + 1);\r\n+                });\r\n+        }, index * 2500);\r\n+    }\r\n+\r\n+    tryNextAPI(0);\r\n });\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1743100948913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,39 +103,42 @@\n         var formMapper = {};\r\n \r\n         // Mapeamento para cada API com base na documentação:\r\n         if (selectedAPI.name === \"BrasilAPI\") {\r\n-            // BrasilAPI: observe que os dados extras vêm de campos como \"qsa\", \"cnaes_secundarios\" e \"cnae_fiscal_descricao\"\r\n+            // BrasilAPI: Exemplo de campos extra (como sócios, atividade principal e secundárias)\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n                 nomeFantasia: data.nome_fantasia,\r\n                 situacao_cadastral: data.descricao_situacao_cadastral,\r\n                 simples_nacional: data.opcao_pelo_simples,\r\n                 mei: data.opcao_pelo_mei,\r\n+                cep: data.cep,\r\n                 socios: data.qsa || [],\r\n                 atividade_principal: data.cnae_fiscal_descricao || \"\",\r\n                 atividades_secundarias: data.cnaes_secundarios || []\r\n             };\r\n         } else if (selectedAPI.name === \"CNPJs.dev\") {\r\n-            // CNPJs.dev: a resposta possui os campos \"socios\", \"cnae_fiscal_principal\" e \"cnae_fiscal_secundaria\"\r\n+            // CNPJs.dev: Dados extra vem do objeto \"endereco\" e de outras propriedades específicas\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n                 nomeFantasia: data.nome_fantasia,\r\n                 situacao_cadastral: data.situacao_cadastral,\r\n-                simples_nacional: false, // A API não retorna esse campo; você pode definir conforme sua lógica\r\n-                mei: false,            // idem\r\n+                simples_nacional: false, // Não informado na API; defina conforme sua lógica\r\n+                mei: false,              // Idem\r\n+                cep: data.endereco ? data.endereco.cep : \"\",\r\n                 socios: data.socios || [],\r\n                 atividade_principal: data.cnae_fiscal_principal ? data.cnae_fiscal_principal.nome : \"\",\r\n                 atividades_secundarias: data.cnae_fiscal_secundaria || []\r\n             };\r\n         } else if (selectedAPI.name === \"InverTexto\") {\r\n-            // InverTexto: os dados extras estão dentro de \"socios\", \"atividade_principal\" e \"atividades_secundarias\"\r\n+            // InverTexto: Campos extras dentro de \"endereco\" e objetos específicos\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n                 nomeFantasia: data.nome_fantasia,\r\n                 situacao_cadastral: data.situacao ? data.situacao.nome : \"\",\r\n                 simples_nacional: (data.simples && data.simples.optante_simples === \"S\") ? true : false,\r\n                 mei: (data.mei && data.mei.optante_mei === \"S\") ? true : false,\r\n+                cep: data.endereco ? data.endereco.cep : \"\",\r\n                 socios: data.socios || [],\r\n                 atividade_principal: data.atividade_principal ? data.atividade_principal.descricao : \"\",\r\n                 atividades_secundarias: data.atividades_secundarias || []\r\n             };\r\n"
                },
                {
                    "date": 1743102927195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,70 +198,60 @@\n \r\n /* ################## BUSCA CEP ################## */\r\n \r\n function limpa_formulário_cep() {\r\n-    //Limpa valores do formulário de cep.\r\n-    document.getElementById('rua').value = (\"\");\r\n-    document.getElementById('bairro').value = (\"\");\r\n-    document.getElementById('cidade').value = (\"\");\r\n-    document.getElementById('uf').value = (\"\");\r\n-    document.getElementById('ibge').value = (\"\");\r\n+    console.log(\"Limpando formulário de CEP.\");\r\n+    document.getElementById('endereco_API').value=(\"\");\r\n+    document.getElementById('bairro_API').value=(\"\");\r\n+    document.getElementById('cidade_API').value=(\"\");\r\n+    document.getElementById('uf_API').value=(\"\");\r\n+    document.getElementById('ibge_API').value=(\"\");\r\n }\r\n \r\n function meu_callback(conteudo) {\r\n+    console.log(\"Recebendo resposta da API.\", conteudo);\r\n     if (!(\"erro\" in conteudo)) {\r\n-        //Atualiza os campos com os valores.\r\n-        document.getElementById('rua').value = (conteudo.logradouro);\r\n-        document.getElementById('bairro').value = (conteudo.bairro);\r\n-        document.getElementById('cidade').value = (conteudo.localidade);\r\n-        document.getElementById('uf').value = (conteudo.uf);\r\n-        document.getElementById('ibge').value = (conteudo.ibge);\r\n-    } //end if.\r\n-    else {\r\n-        //CEP não Encontrado.\r\n+        console.log(\"CEP encontrado. Atualizando campos do formulário.\");\r\n+        document.getElementById('endereco_API').value=(conteudo.logradouro);\r\n+        document.getElementById('bairro_API').value=(conteudo.bairro);\r\n+        document.getElementById('cidade_API').value=(conteudo.localidade);\r\n+        document.getElementById('uf_API').value=(conteudo.uf);\r\n+        document.getElementById('ibge_API').value=(conteudo.ibge);\r\n+    } else {\r\n+        console.error(\"CEP não encontrado.\");\r\n         limpa_formulário_cep();\r\n         alert(\"CEP não encontrado.\");\r\n     }\r\n }\r\n-\r\n+    \r\n function pesquisacep(valor) {\r\n-\r\n-    //Nova variável \"cep\" somente com dígitos.\r\n+    console.log(\"Iniciando pesquisa de CEP: \", valor);\r\n+    \r\n     var cep = valor.replace(/\\D/g, '');\r\n+    console.log(\"CEP formatado (apenas números): \", cep);\r\n \r\n-    //Verifica se campo cep possui valor informado.\r\n     if (cep != \"\") {\r\n-\r\n-        //Expressão regular para validar o CEP.\r\n         var validacep = /^[0-9]{8}$/;\r\n+        \r\n+        if(validacep.test(cep)) {\r\n+            console.log(\"CEP válido. Iniciando consulta na API.\");\r\n+            document.getElementById('endereco_API').value=\"...\";\r\n+            document.getElementById('bairro_API').value=\"...\";\r\n+            document.getElementById('cidade_API').value=\"...\";\r\n+            document.getElementById('uf_API').value=\"...\";\r\n+            document.getElementById('ibge_API').value=\"...\";\r\n \r\n-        //Valida o formato do CEP.\r\n-        if (validacep.test(cep)) {\r\n-\r\n-            //Preenche os campos com \"...\" enquanto consulta webservice.\r\n\\ No newline at end of file\n-            document.getElementById('rua').value = \"...\";\r\n-            document.getElementById('bairro').value = \"...\";\r\n-            document.getElementById('cidade').value = \"...\";\r\n-            document.getElementById('uf').value = \"...\";\r\n-            document.getElementById('ibge').value = \"...\";\r\n-\r\n-            //Cria um elemento javascript.\r\n             var script = document.createElement('script');\r\n-\r\n-            //Sincroniza com o callback.\r\n-            script.src = 'https://viacep.com.br/ws/' + cep + '/json/?callback=meu_callback';\r\n-\r\n-            //Insere script no documento e carrega o conteúdo.\r\n+            script.src = 'https://viacep.com.br/ws/'+ cep + '/json/?callback=meu_callback';\r\n+            console.log(\"Inserindo script no documento: \", script.src);\r\n             document.body.appendChild(script);\r\n \r\n-        } //end if.\r\n-        else {\r\n-            //cep é inválido.\r\n+        } else {\r\n+            console.error(\"Formato de CEP inválido.\");\r\n             limpa_formulário_cep();\r\n             alert(\"Formato de CEP inválido.\");\r\n         }\r\n-    } //end if.\r\n-    else {\r\n-        //cep sem valor, limpa formulário.\r\n+    } else {\r\n+        console.warn(\"Campo CEP vazio. Limpando formulário.\");\r\n         limpa_formulário_cep();\r\n     }\r\n-};\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743103004237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n                 nomeFantasia: data.nome_fantasia,\r\n                 situacao_cadastral: data.situacao ? data.situacao.nome : \"\",\r\n                 simples_nacional: (data.simples && data.simples.optante_simples === \"S\") ? true : false,\r\n                 mei: (data.mei && data.mei.optante_mei === \"S\") ? true : false,\r\n-                cep: data.endereco ? data.endereco.cep : \"\",\r\n+                cep_API: data.endereco ? data.endereco.cep : \"\",\r\n                 socios: data.socios || [],\r\n                 atividade_principal: data.atividade_principal ? data.atividade_principal.descricao : \"\",\r\n                 atividades_secundarias: data.atividades_secundarias || []\r\n             };\r\n"
                },
                {
                    "date": 1743103131634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n         if (selectedAPI.name === \"BrasilAPI\") {\r\n             // BrasilAPI: Exemplo de campos extra (como sócios, atividade principal e secundárias)\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia,\r\n+                nomeFantasia: data.nome_fantasia ? data.situacao.nome : \"\",\r\n                 situacao_cadastral: data.descricao_situacao_cadastral,\r\n                 simples_nacional: data.opcao_pelo_simples,\r\n                 mei: data.opcao_pelo_mei,\r\n                 cep: data.cep,\r\n@@ -119,9 +119,9 @@\n         } else if (selectedAPI.name === \"CNPJs.dev\") {\r\n             // CNPJs.dev: Dados extra vem do objeto \"endereco\" e de outras propriedades específicas\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia,\r\n+                nomeFantasia: data.nome_fantasia ? data.situacao.nome : \"\",\r\n                 situacao_cadastral: data.situacao_cadastral,\r\n                 simples_nacional: false, // Não informado na API; defina conforme sua lógica\r\n                 mei: false,              // Idem\r\n                 cep: data.endereco ? data.endereco.cep : \"\",\r\n@@ -132,10 +132,10 @@\n         } else if (selectedAPI.name === \"InverTexto\") {\r\n             // InverTexto: Campos extras dentro de \"endereco\" e objetos específicos\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia,\r\n-                situacao_cadastral: data.situacao ? data.situacao.nome : \"\",\r\n+                nomeFantasia: data.nome_fantasia ? data.situacao.nome : \"\",\r\n+                situacao_cadastral: data.situacao,\r\n                 simples_nacional: (data.simples && data.simples.optante_simples === \"S\") ? true : false,\r\n                 mei: (data.mei && data.mei.optante_mei === \"S\") ? true : false,\r\n                 cep_API: data.endereco ? data.endereco.cep : \"\",\r\n                 socios: data.socios || [],\r\n@@ -199,50 +199,50 @@\n /* ################## BUSCA CEP ################## */\r\n \r\n function limpa_formulário_cep() {\r\n     console.log(\"Limpando formulário de CEP.\");\r\n-    document.getElementById('endereco_API').value=(\"\");\r\n-    document.getElementById('bairro_API').value=(\"\");\r\n-    document.getElementById('cidade_API').value=(\"\");\r\n-    document.getElementById('uf_API').value=(\"\");\r\n-    document.getElementById('ibge_API').value=(\"\");\r\n+    document.getElementById('endereco_API').value = (\"\");\r\n+    document.getElementById('bairro_API').value = (\"\");\r\n+    document.getElementById('cidade_API').value = (\"\");\r\n+    document.getElementById('uf_API').value = (\"\");\r\n+    document.getElementById('ibge_API').value = (\"\");\r\n }\r\n \r\n function meu_callback(conteudo) {\r\n     console.log(\"Recebendo resposta da API.\", conteudo);\r\n     if (!(\"erro\" in conteudo)) {\r\n         console.log(\"CEP encontrado. Atualizando campos do formulário.\");\r\n-        document.getElementById('endereco_API').value=(conteudo.logradouro);\r\n-        document.getElementById('bairro_API').value=(conteudo.bairro);\r\n-        document.getElementById('cidade_API').value=(conteudo.localidade);\r\n-        document.getElementById('uf_API').value=(conteudo.uf);\r\n-        document.getElementById('ibge_API').value=(conteudo.ibge);\r\n+        document.getElementById('endereco_API').value = (conteudo.logradouro);\r\n+        document.getElementById('bairro_API').value = (conteudo.bairro);\r\n+        document.getElementById('cidade_API').value = (conteudo.localidade);\r\n+        document.getElementById('uf_API').value = (conteudo.uf);\r\n+        document.getElementById('ibge_API').value = (conteudo.ibge);\r\n     } else {\r\n         console.error(\"CEP não encontrado.\");\r\n         limpa_formulário_cep();\r\n         alert(\"CEP não encontrado.\");\r\n     }\r\n }\r\n-    \r\n+\r\n function pesquisacep(valor) {\r\n     console.log(\"Iniciando pesquisa de CEP: \", valor);\r\n-    \r\n+\r\n     var cep = valor.replace(/\\D/g, '');\r\n     console.log(\"CEP formatado (apenas números): \", cep);\r\n \r\n     if (cep != \"\") {\r\n         var validacep = /^[0-9]{8}$/;\r\n-        \r\n-        if(validacep.test(cep)) {\r\n+\r\n+        if (validacep.test(cep)) {\r\n             console.log(\"CEP válido. Iniciando consulta na API.\");\r\n-            document.getElementById('endereco_API').value=\"...\";\r\n-            document.getElementById('bairro_API').value=\"...\";\r\n-            document.getElementById('cidade_API').value=\"...\";\r\n-            document.getElementById('uf_API').value=\"...\";\r\n-            document.getElementById('ibge_API').value=\"...\";\r\n+            document.getElementById('endereco_API').value = \"...\";\r\n+            document.getElementById('bairro_API').value = \"...\";\r\n+            document.getElementById('cidade_API').value = \"...\";\r\n+            document.getElementById('uf_API').value = \"...\";\r\n+            document.getElementById('ibge_API').value = \"...\";\r\n \r\n             var script = document.createElement('script');\r\n-            script.src = 'https://viacep.com.br/ws/'+ cep + '/json/?callback=meu_callback';\r\n+            script.src = 'https://viacep.com.br/ws/' + cep + '/json/?callback=meu_callback';\r\n             console.log(\"Inserindo script no documento: \", script.src);\r\n             document.body.appendChild(script);\r\n \r\n         } else {\r\n"
                },
                {
                    "date": 1743103311897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,8 +115,9 @@\n                 socios: data.qsa || [],\r\n                 atividade_principal: data.cnae_fiscal_descricao || \"\",\r\n                 atividades_secundarias: data.cnaes_secundarios || []\r\n             };\r\n+            logDebug(data);\r\n         } else if (selectedAPI.name === \"CNPJs.dev\") {\r\n             // CNPJs.dev: Dados extra vem do objeto \"endereco\" e de outras propriedades específicas\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n@@ -128,8 +129,9 @@\n                 socios: data.socios || [],\r\n                 atividade_principal: data.cnae_fiscal_principal ? data.cnae_fiscal_principal.nome : \"\",\r\n                 atividades_secundarias: data.cnae_fiscal_secundaria || []\r\n             };\r\n+            logDebug(data);\r\n         } else if (selectedAPI.name === \"InverTexto\") {\r\n             // InverTexto: Campos extras dentro de \"endereco\" e objetos específicos\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n@@ -141,8 +143,9 @@\n                 socios: data.socios || [],\r\n                 atividade_principal: data.atividade_principal ? data.atividade_principal.descricao : \"\",\r\n                 atividades_secundarias: data.atividades_secundarias || []\r\n             };\r\n+            logDebug(data);\r\n         }\r\n \r\n         // Preenche os inputs correspondentes (ids: razaoSocial, nomeFantasia, logradouro, numero, bairro, cep, uf, municipio)\r\n         for (var field in formMapper) {\r\n"
                },
                {
                    "date": 1743103404792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n                 socios: data.qsa || [],\r\n                 atividade_principal: data.cnae_fiscal_descricao || \"\",\r\n                 atividades_secundarias: data.cnaes_secundarios || []\r\n             };\r\n-            logDebug(data);\r\n+            console.table(data);\r\n         } else if (selectedAPI.name === \"CNPJs.dev\") {\r\n             // CNPJs.dev: Dados extra vem do objeto \"endereco\" e de outras propriedades específicas\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n@@ -129,9 +129,9 @@\n                 socios: data.socios || [],\r\n                 atividade_principal: data.cnae_fiscal_principal ? data.cnae_fiscal_principal.nome : \"\",\r\n                 atividades_secundarias: data.cnae_fiscal_secundaria || []\r\n             };\r\n-            logDebug(data);\r\n+            console.table(data);\r\n         } else if (selectedAPI.name === \"InverTexto\") {\r\n             // InverTexto: Campos extras dentro de \"endereco\" e objetos específicos\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n@@ -143,9 +143,9 @@\n                 socios: data.socios || [],\r\n                 atividade_principal: data.atividade_principal ? data.atividade_principal.descricao : \"\",\r\n                 atividades_secundarias: data.atividades_secundarias || []\r\n             };\r\n-            logDebug(data);\r\n+            console.table(data);\r\n         }\r\n \r\n         // Preenche os inputs correspondentes (ids: razaoSocial, nomeFantasia, logradouro, numero, bairro, cep, uf, municipio)\r\n         for (var field in formMapper) {\r\n"
                },
                {
                    "date": 1743104150443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n                 nomeFantasia: data.nome_fantasia ? data.situacao.nome : \"\",\r\n                 situacao_cadastral: data.situacao_cadastral,\r\n                 simples_nacional: false, // Não informado na API; defina conforme sua lógica\r\n                 mei: false,              // Idem\r\n-                cep: data.endereco ? data.endereco.cep : \"\",\r\n+                cep: data.endereco.cep,\r\n                 socios: data.socios || [],\r\n                 atividade_principal: data.cnae_fiscal_principal ? data.cnae_fiscal_principal.nome : \"\",\r\n                 atividades_secundarias: data.cnae_fiscal_secundaria || []\r\n             };\r\n"
                },
                {
                    "date": 1743104206024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n                 nomeFantasia: data.nome_fantasia ? data.situacao.nome : \"\",\r\n                 situacao_cadastral: data.descricao_situacao_cadastral,\r\n                 simples_nacional: data.opcao_pelo_simples,\r\n                 mei: data.opcao_pelo_mei,\r\n-                cep: data.cep,\r\n+                cep_API: data.cep,\r\n                 socios: data.qsa || [],\r\n                 atividade_principal: data.cnae_fiscal_descricao || \"\",\r\n                 atividades_secundarias: data.cnaes_secundarios || []\r\n             };\r\n@@ -124,9 +124,9 @@\n                 nomeFantasia: data.nome_fantasia ? data.situacao.nome : \"\",\r\n                 situacao_cadastral: data.situacao_cadastral,\r\n                 simples_nacional: false, // Não informado na API; defina conforme sua lógica\r\n                 mei: false,              // Idem\r\n-                cep: data.endereco.cep,\r\n+                cep_API: data.endereco.cep,\r\n                 socios: data.socios || [],\r\n                 atividade_principal: data.cnae_fiscal_principal ? data.cnae_fiscal_principal.nome : \"\",\r\n                 atividades_secundarias: data.cnae_fiscal_secundaria || []\r\n             };\r\n"
                },
                {
                    "date": 1743104250368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,11 +111,9 @@\n                 situacao_cadastral: data.descricao_situacao_cadastral,\r\n                 simples_nacional: data.opcao_pelo_simples,\r\n                 mei: data.opcao_pelo_mei,\r\n                 cep_API: data.cep,\r\n-                socios: data.qsa || [],\r\n-                atividade_principal: data.cnae_fiscal_descricao || \"\",\r\n-                atividades_secundarias: data.cnaes_secundarios || []\r\n+                \r\n             };\r\n             console.table(data);\r\n         } else if (selectedAPI.name === \"CNPJs.dev\") {\r\n             // CNPJs.dev: Dados extra vem do objeto \"endereco\" e de outras propriedades específicas\r\n@@ -125,11 +123,9 @@\n                 situacao_cadastral: data.situacao_cadastral,\r\n                 simples_nacional: false, // Não informado na API; defina conforme sua lógica\r\n                 mei: false,              // Idem\r\n                 cep_API: data.endereco.cep,\r\n-                socios: data.socios || [],\r\n-                atividade_principal: data.cnae_fiscal_principal ? data.cnae_fiscal_principal.nome : \"\",\r\n-                atividades_secundarias: data.cnae_fiscal_secundaria || []\r\n+                \r\n             };\r\n             console.table(data);\r\n         } else if (selectedAPI.name === \"InverTexto\") {\r\n             // InverTexto: Campos extras dentro de \"endereco\" e objetos específicos\r\n@@ -139,11 +135,9 @@\n                 situacao_cadastral: data.situacao,\r\n                 simples_nacional: (data.simples && data.simples.optante_simples === \"S\") ? true : false,\r\n                 mei: (data.mei && data.mei.optante_mei === \"S\") ? true : false,\r\n                 cep_API: data.endereco ? data.endereco.cep : \"\",\r\n-                socios: data.socios || [],\r\n-                atividade_principal: data.atividade_principal ? data.atividade_principal.descricao : \"\",\r\n-                atividades_secundarias: data.atividades_secundarias || []\r\n+                \r\n             };\r\n             console.table(data);\r\n         }\r\n \r\n"
                },
                {
                    "date": 1743104272753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n                 situacao_cadastral: data.descricao_situacao_cadastral,\r\n                 simples_nacional: data.opcao_pelo_simples,\r\n                 mei: data.opcao_pelo_mei,\r\n                 cep_API: data.cep,\r\n-                \r\n+\r\n             };\r\n             console.table(data);\r\n         } else if (selectedAPI.name === \"CNPJs.dev\") {\r\n             // CNPJs.dev: Dados extra vem do objeto \"endereco\" e de outras propriedades específicas\r\n@@ -122,10 +122,10 @@\n                 nomeFantasia: data.nome_fantasia ? data.situacao.nome : \"\",\r\n                 situacao_cadastral: data.situacao_cadastral,\r\n                 simples_nacional: false, // Não informado na API; defina conforme sua lógica\r\n                 mei: false,              // Idem\r\n-                cep_API: data.endereco.cep,\r\n-                \r\n+                cep_API: data.endereco.cep ? data.endereco.cep : \"\",\r\n+\r\n             };\r\n             console.table(data);\r\n         } else if (selectedAPI.name === \"InverTexto\") {\r\n             // InverTexto: Campos extras dentro de \"endereco\" e objetos específicos\r\n@@ -135,9 +135,9 @@\n                 situacao_cadastral: data.situacao,\r\n                 simples_nacional: (data.simples && data.simples.optante_simples === \"S\") ? true : false,\r\n                 mei: (data.mei && data.mei.optante_mei === \"S\") ? true : false,\r\n                 cep_API: data.endereco ? data.endereco.cep : \"\",\r\n-                \r\n+\r\n             };\r\n             console.table(data);\r\n         }\r\n \r\n"
                },
                {
                    "date": 1743104370206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,8 +212,9 @@\n         document.getElementById('bairro_API').value = (conteudo.bairro);\r\n         document.getElementById('cidade_API').value = (conteudo.localidade);\r\n         document.getElementById('uf_API').value = (conteudo.uf);\r\n         document.getElementById('ibge_API').value = (conteudo.ibge);\r\n+        document.getElementById('cep_API').value = (conteudo.cep);\r\n     } else {\r\n         console.error(\"CEP não encontrado.\");\r\n         limpa_formulário_cep();\r\n         alert(\"CEP não encontrado.\");\r\n"
                },
                {
                    "date": 1743105033056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,11 @@\n \r\n document.getElementById(\"cnpj\").addEventListener(\"blur\", function () {\r\n     logDebug(\"Iniciando processo de consulta...\");\r\n \r\n+    // Exibe o indicador de carregamento\r\n+  document.getElementById(\"cnpj-loading\").style.display = \"inline-block\";\r\n+\r\n     var cnpj = this.value.replace(/\\D/g, \"\");\r\n \r\n     if (cnpjErrorCache[cnpj]) {\r\n         logDebug(\"CNPJ \" + cnpj + \" já consta no cache de erros. Consulta abortada.\");\r\n@@ -187,8 +190,11 @@\n                 });\r\n         }, index * 2500);\r\n     }\r\n \r\n+    // Oculta o indicador de carregamento\r\n+    document.getElementById(\"cnpj-loading\").style.display = \"none\";\r\n+\r\n     tryNextAPI(0);\r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1743105081914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n document.getElementById(\"cnpj\").addEventListener(\"blur\", function () {\r\n     logDebug(\"Iniciando processo de consulta...\");\r\n \r\n     // Exibe o indicador de carregamento\r\n-  document.getElementById(\"cnpj-loading\").style.display = \"inline-block\";\r\n+    document.getElementById(\"cnpj-loading\").style.display = \"inline-block\";\r\n \r\n     var cnpj = this.value.replace(/\\D/g, \"\");\r\n \r\n     if (cnpjErrorCache[cnpj]) {\r\n@@ -227,8 +227,10 @@\n     }\r\n }\r\n \r\n function pesquisacep(valor) {\r\n+    // Exibe o indicador de carregamento\r\n+    document.getElementById(\"cep-loading\").style.display = \"inline-block\";\r\n     console.log(\"Iniciando pesquisa de CEP: \", valor);\r\n \r\n     var cep = valor.replace(/\\D/g, '');\r\n     console.log(\"CEP formatado (apenas números): \", cep);\r\n@@ -253,8 +255,13 @@\n             console.error(\"Formato de CEP inválido.\");\r\n             limpa_formulário_cep();\r\n             alert(\"Formato de CEP inválido.\");\r\n         }\r\n+\r\n+        // Oculta o indicador de carregamento\r\n+        document.getElementById(\"cep-loading\").style.display = \"none\";\r\n+\r\n+\r\n     } else {\r\n         console.warn(\"Campo CEP vazio. Limpando formulário.\");\r\n         limpa_formulário_cep();\r\n     }\r\n"
                },
                {
                    "date": 1743105233604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n         if (selectedAPI.name === \"BrasilAPI\") {\r\n             // BrasilAPI: Exemplo de campos extra (como sócios, atividade principal e secundárias)\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia ? data.situacao.nome : \"\",\r\n+                nomeFantasia: data.nome_fantasia ? data.situacao.nome_fantasia : \"\",\r\n                 situacao_cadastral: data.descricao_situacao_cadastral,\r\n                 simples_nacional: data.opcao_pelo_simples,\r\n                 mei: data.opcao_pelo_mei,\r\n                 cep_API: data.cep,\r\n@@ -121,9 +121,9 @@\n         } else if (selectedAPI.name === \"CNPJs.dev\") {\r\n             // CNPJs.dev: Dados extra vem do objeto \"endereco\" e de outras propriedades específicas\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia ? data.situacao.nome : \"\",\r\n+                nomeFantasia: data.nome_fantasia ? data.situacao.nome_fantasia : \"\",\r\n                 situacao_cadastral: data.situacao_cadastral,\r\n                 simples_nacional: false, // Não informado na API; defina conforme sua lógica\r\n                 mei: false,              // Idem\r\n                 cep_API: data.endereco.cep ? data.endereco.cep : \"\",\r\n@@ -133,9 +133,9 @@\n         } else if (selectedAPI.name === \"InverTexto\") {\r\n             // InverTexto: Campos extras dentro de \"endereco\" e objetos específicos\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia ? data.situacao.nome : \"\",\r\n+                nomeFantasia: data.nome_fantasia ? data.situacao.nome_fantasia : \"\",\r\n                 situacao_cadastral: data.situacao,\r\n                 simples_nacional: (data.simples && data.simples.optante_simples === \"S\") ? true : false,\r\n                 mei: (data.mei && data.mei.optante_mei === \"S\") ? true : false,\r\n                 cep_API: data.endereco ? data.endereco.cep : \"\",\r\n"
                },
                {
                    "date": 1743105314453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,21 +60,24 @@\n \r\n document.getElementById(\"cnpj\").addEventListener(\"blur\", function () {\r\n     logDebug(\"Iniciando processo de consulta...\");\r\n \r\n+    var cnpj = this.value.replace(/\\D/g, \"\");\r\n+    var loadingIndicator = document.getElementById(\"cnpj-loading\");\r\n+\r\n     // Exibe o indicador de carregamento\r\n-    document.getElementById(\"cnpj-loading\").style.display = \"inline-block\";\r\n+    loadingIndicator.style.display = \"inline-block\";\r\n \r\n-    var cnpj = this.value.replace(/\\D/g, \"\");\r\n-\r\n     if (cnpjErrorCache[cnpj]) {\r\n         logDebug(\"CNPJ \" + cnpj + \" já consta no cache de erros. Consulta abortada.\");\r\n+        loadingIndicator.style.display = \"none\";\r\n         return;\r\n     }\r\n \r\n     if (!/^\\d{14}$/.test(cnpj)) {\r\n         logDebug(\"CNPJ inválido detectado: \" + cnpj);\r\n         alert(\"CNPJ inválido. Verifique o formato.\");\r\n+        loadingIndicator.style.display = \"none\";\r\n         return;\r\n     }\r\n \r\n     // Definição das APIs com suas respectivas URLs\r\n@@ -102,50 +105,47 @@\n     function processarResposta(data, selectedAPI) {\r\n         logDebug(\"Resposta da API \" + selectedAPI.name + \" recebida com sucesso\");\r\n         delete cnpjErrorCache[cnpj];\r\n \r\n+        // Oculta o indicador de carregamento assim que a resposta é processada\r\n+        loadingIndicator.style.display = \"none\";\r\n+\r\n         var formMapper = {};\r\n \r\n         // Mapeamento para cada API com base na documentação:\r\n         if (selectedAPI.name === \"BrasilAPI\") {\r\n-            // BrasilAPI: Exemplo de campos extra (como sócios, atividade principal e secundárias)\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia ? data.situacao.nome_fantasia : \"\",\r\n+                nomeFantasia: data.nome_fantasia || \"\",\r\n                 situacao_cadastral: data.descricao_situacao_cadastral,\r\n                 simples_nacional: data.opcao_pelo_simples,\r\n                 mei: data.opcao_pelo_mei,\r\n-                cep_API: data.cep,\r\n-\r\n+                cep_API: data.cep\r\n             };\r\n             console.table(data);\r\n         } else if (selectedAPI.name === \"CNPJs.dev\") {\r\n-            // CNPJs.dev: Dados extra vem do objeto \"endereco\" e de outras propriedades específicas\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia ? data.situacao.nome_fantasia : \"\",\r\n+                nomeFantasia: data.nome_fantasia || \"\",\r\n                 situacao_cadastral: data.situacao_cadastral,\r\n                 simples_nacional: false, // Não informado na API; defina conforme sua lógica\r\n-                mei: false,              // Idem\r\n-                cep_API: data.endereco.cep ? data.endereco.cep : \"\",\r\n-\r\n+                mei: false,\r\n+                cep_API: data.endereco && data.endereco.cep ? data.endereco.cep : \"\"\r\n             };\r\n             console.table(data);\r\n         } else if (selectedAPI.name === \"InverTexto\") {\r\n-            // InverTexto: Campos extras dentro de \"endereco\" e objetos específicos\r\n             formMapper = {\r\n                 razaoSocial: data.razao_social,\r\n-                nomeFantasia: data.nome_fantasia ? data.situacao.nome_fantasia : \"\",\r\n+                nomeFantasia: data.nome_fantasia || \"\",\r\n                 situacao_cadastral: data.situacao,\r\n                 simples_nacional: (data.simples && data.simples.optante_simples === \"S\") ? true : false,\r\n                 mei: (data.mei && data.mei.optante_mei === \"S\") ? true : false,\r\n-                cep_API: data.endereco ? data.endereco.cep : \"\",\r\n-\r\n+                cep_API: data.endereco ? data.endereco.cep : \"\"\r\n             };\r\n             console.table(data);\r\n         }\r\n \r\n-        // Preenche os inputs correspondentes (ids: razaoSocial, nomeFantasia, logradouro, numero, bairro, cep, uf, municipio)\r\n+        // Preenche os inputs correspondentes (certifique-se de que os elementos com os ids existem no HTML)\r\n         for (var field in formMapper) {\r\n             if (formMapper.hasOwnProperty(field)) {\r\n                 var input = document.getElementById(field);\r\n                 if (input) input.value = formMapper[field] || \"\";\r\n@@ -158,8 +158,9 @@\n         if (index >= apis.length) {\r\n             logDebug(\"Todas as APIs falharam\");\r\n             cnpjErrorCache[cnpj] = true;\r\n             alert(\"Falha em todas as tentativas. CNPJ bloqueado temporariamente.\");\r\n+            loadingIndicator.style.display = \"none\";\r\n             return;\r\n         }\r\n \r\n         // Delay crescente entre as tentativas (2.5s, 5s, 7.5s, etc.)\r\n@@ -190,37 +191,36 @@\n                 });\r\n         }, index * 2500);\r\n     }\r\n \r\n-    // Oculta o indicador de carregamento\r\n-    document.getElementById(\"cnpj-loading\").style.display = \"none\";\r\n-\r\n     tryNextAPI(0);\r\n });\r\n \r\n \r\n-\r\n /* ################## BUSCA CEP ################## */\r\n \r\n function limpa_formulário_cep() {\r\n     console.log(\"Limpando formulário de CEP.\");\r\n-    document.getElementById('endereco_API').value = (\"\");\r\n-    document.getElementById('bairro_API').value = (\"\");\r\n-    document.getElementById('cidade_API').value = (\"\");\r\n-    document.getElementById('uf_API').value = (\"\");\r\n-    document.getElementById('ibge_API').value = (\"\");\r\n+    document.getElementById('endereco_API').value = \"\";\r\n+    document.getElementById('bairro_API').value = \"\";\r\n+    document.getElementById('cidade_API').value = \"\";\r\n+    document.getElementById('uf_API').value = \"\";\r\n+    document.getElementById('ibge_API').value = \"\";\r\n }\r\n \r\n function meu_callback(conteudo) {\r\n     console.log(\"Recebendo resposta da API.\", conteudo);\r\n+    // Oculta o indicador de carregamento ao receber a resposta\r\n+    document.getElementById(\"cep-loading\").style.display = \"none\";\r\n+\r\n     if (!(\"erro\" in conteudo)) {\r\n         console.log(\"CEP encontrado. Atualizando campos do formulário.\");\r\n-        document.getElementById('endereco_API').value = (conteudo.logradouro);\r\n-        document.getElementById('bairro_API').value = (conteudo.bairro);\r\n-        document.getElementById('cidade_API').value = (conteudo.localidade);\r\n-        document.getElementById('uf_API').value = (conteudo.uf);\r\n-        document.getElementById('ibge_API').value = (conteudo.ibge);\r\n-        document.getElementById('cep_API').value = (conteudo.cep);\r\n+        document.getElementById('endereco_API').value = conteudo.logradouro || \"\";\r\n+        document.getElementById('bairro_API').value = conteudo.bairro || \"\";\r\n+        document.getElementById('cidade_API').value = conteudo.localidade || \"\";\r\n+        document.getElementById('uf_API').value = conteudo.uf || \"\";\r\n+        document.getElementById('ibge_API').value = conteudo.ibge || \"\";\r\n+        document.getElementById('cep_API').value = conteudo.cep || \"\";\r\n     } else {\r\n         console.error(\"CEP não encontrado.\");\r\n         limpa_formulário_cep();\r\n         alert(\"CEP não encontrado.\");\r\n@@ -249,20 +249,16 @@\n             var script = document.createElement('script');\r\n             script.src = 'https://viacep.com.br/ws/' + cep + '/json/?callback=meu_callback';\r\n             console.log(\"Inserindo script no documento: \", script.src);\r\n             document.body.appendChild(script);\r\n-\r\n         } else {\r\n             console.error(\"Formato de CEP inválido.\");\r\n             limpa_formulário_cep();\r\n             alert(\"Formato de CEP inválido.\");\r\n+            document.getElementById(\"cep-loading\").style.display = \"none\";\r\n         }\r\n-\r\n-        // Oculta o indicador de carregamento\r\n-        document.getElementById(\"cep-loading\").style.display = \"none\";\r\n-\r\n-\r\n     } else {\r\n         console.warn(\"Campo CEP vazio. Limpando formulário.\");\r\n         limpa_formulário_cep();\r\n+        document.getElementById(\"cep-loading\").style.display = \"none\";\r\n\\ No newline at end of file\n     }\r\n-}\n+}\r\n"
                },
                {
                    "date": 1743105880241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,8 +219,9 @@\n         document.getElementById('cidade_API').value = conteudo.localidade || \"\";\r\n         document.getElementById('uf_API').value = conteudo.uf || \"\";\r\n         document.getElementById('ibge_API').value = conteudo.ibge || \"\";\r\n         document.getElementById('cep_API').value = conteudo.cep || \"\";\r\n+        document.getElementById('complemento_API').value = conteudo.complemento || \"\";\r\n     } else {\r\n         console.error(\"CEP não encontrado.\");\r\n         limpa_formulário_cep();\r\n         alert(\"CEP não encontrado.\");\r\n@@ -260,5 +261,5 @@\n         console.warn(\"Campo CEP vazio. Limpando formulário.\");\r\n         limpa_formulário_cep();\r\n         document.getElementById(\"cep-loading\").style.display = \"none\";\r\n     }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1743106273872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,8 +204,9 @@\n     document.getElementById('bairro_API').value = \"\";\r\n     document.getElementById('cidade_API').value = \"\";\r\n     document.getElementById('uf_API').value = \"\";\r\n     document.getElementById('ibge_API').value = \"\";\r\n+    document.getElementById('complemento_API').value = conteudo.complemento || \"\";\r\n }\r\n \r\n function meu_callback(conteudo) {\r\n     console.log(\"Recebendo resposta da API.\", conteudo);\r\n@@ -245,8 +246,9 @@\n             document.getElementById('bairro_API').value = \"...\";\r\n             document.getElementById('cidade_API').value = \"...\";\r\n             document.getElementById('uf_API').value = \"...\";\r\n             document.getElementById('ibge_API').value = \"...\";\r\n+            document.getElementById('complemento_API').value = \"...\";\r\n \r\n             var script = document.createElement('script');\r\n             script.src = 'https://viacep.com.br/ws/' + cep + '/json/?callback=meu_callback';\r\n             console.log(\"Inserindo script no documento: \", script.src);\r\n"
                },
                {
                    "date": 1743164803301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,4 +264,18 @@\n         limpa_formulário_cep();\r\n         document.getElementById(\"cep-loading\").style.display = \"none\";\r\n     }\r\n }\r\n+\r\n+\r\n+/* ################## input mask ################## */\r\n+\r\n+$(document).ready(function(){\r\n+\r\n+    $('#Nascimento').mask('00/00/0000');\r\n+    $('#cep').mask('00000-000');\r\n+    $('#cep_API').mask('00000-000');\r\n+    $('#cpf').mask('000.000.000-00', {reverse: true});\r\n+    $('#cnpj').mask('00.000.000/0000-00', {reverse: true});\r\n+\r\n+\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743164889602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n /* ################## input mask ################## */\r\n \r\n $(document).ready(function(){\r\n \r\n-    $('#Nascimento').mask('00/00/0000');\r\n+    $('#nascimento').mask('00/00/0000');\r\n     $('#cep').mask('00000-000');\r\n     $('#cep_API').mask('00000-000');\r\n     $('#cpf').mask('000.000.000-00', {reverse: true});\r\n     $('#cnpj').mask('00.000.000/0000-00', {reverse: true});\r\n"
                },
                {
                    "date": 1743165330682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,6 +276,16 @@\n     $('#cep_API').mask('00000-000');\r\n     $('#cpf').mask('000.000.000-00', {reverse: true});\r\n     $('#cnpj').mask('00.000.000/0000-00', {reverse: true});\r\n \r\n+    var maskBehavior = function (val) {\r\n+        return val.replace(/D/g, '').length === 11 ? '(00) 00000-0000' : '(00) 0000-00009';\r\n+      },\r\n+      options = {onKeyPress: function(val, e, field, options) {\r\n+              field.mask(maskBehavior.apply({}, arguments), options);\r\n+          }\r\n+      };\r\n+      \r\n+      $('#celular').mask(maskBehavior, options);\r\n \r\n+\r\n });\n\\ No newline at end of file\n"
                }
            ],
            "date": 1742938217264,
            "name": "Commit-0",
            "content": "// Função auxiliar para remover formatação do CNPJ\r\nfunction limparCNPJ(cnpj) {\r\n    return cnpj.replace(/\\D/g, ''); // Remove todos os caracteres não numéricos\r\n}\r\n\r\n// Função auxiliar para construir a URL, considerando o token se houver\r\nfunction buildApiUrl(api, cnpj) {\r\n    let url = api.url + cnpj;\r\n    if (api.token) {\r\n        url += '?token=' + encodeURIComponent(api.token);\r\n    }\r\n    return url;\r\n}\r\n\r\n// Verifica o tamanho do CNPJ e dispara a consulta\r\ndocument.getElementById('CNPJ_Busca').addEventListener('input', function () {\r\n    let cnpj = this.value;\r\n\r\n    if (cnpj.length === 18) {\r\n        cnpj = limparCNPJ(cnpj); // Remove formatação e mantém apenas números\r\n    }\r\n\r\n    if (cnpj.length < 14) {\r\n        alert('O CNPJ inserido tem menos de 14 caracteres numéricos.');\r\n        return;\r\n    }\r\n\r\n    if (cnpj.length > 14) {\r\n        alert('O CNPJ inserido tem mais de 14 caracteres numéricos. Verifique se está correto.');\r\n        return;\r\n    }\r\n\r\n    // Se chegou até aqui, o CNPJ está com 14 números e pode ser consultado\r\n    consultarCNPJ(cnpj);\r\n});\r\n\r\n// Lista de APIs para consulta do CNPJ\r\nconst apiEndpoints = [\r\n    {\r\n        name: 'Receitaws',\r\n        url: 'https://receitaws.com.br/v1/cnpj/',\r\n        mapping: function (data) {\r\n            return {\r\n                razaoSocial: data.nome,\r\n                nomeFantasia: data.fantasia,\r\n                dataInicio: data.abertura,\r\n                telefone1: data.telefone,\r\n                email: data.email,\r\n                capitalSocial: data.capital_social,\r\n                situacao: data.situacao,\r\n                logradouro: data.logradouro,\r\n                numero: data.numero,\r\n                complemento: data.complemento,\r\n                bairro: data.bairro,\r\n                municipio: data.municipio,\r\n                uf: data.uf,\r\n                cep: data.cep,\r\n                simples: data.simples && data.simples.optante ? 'Sim' : 'Não',\r\n                mei: data.simei && data.simei.optante ? 'Sim' : 'Não',\r\n                atividadePrincipal: data.atividade_principal?.[0]?.code + ' - ' + data.atividade_principal?.[0]?.text || '',\r\n                atividadesSecundarias: data.atividades_secundarias?.map(item => item.code + ' - ' + item.text).join(', ') || '',\r\n                socios: data.qsa?.map(item => item.nome + ' (' + item.cnpj_cpf_do_socio + ')').join(', ') || 'Não informado'\r\n            };\r\n        },\r\n        validate: function (data) {\r\n            return data.status === \"OK\";\r\n        }\r\n    },\r\n    {\r\n        name: 'MinhaReceita',\r\n        url: 'https://minhareceita.org/',\r\n        mapping: function (data) {\r\n            return {\r\n                razaoSocial: data.razao_social,\r\n                nomeFantasia: data.nome_fantasia,\r\n                dataInicio: data.data_situacao_cadastral || '',\r\n                telefone1: data.ddd_telefone_1 || '',\r\n                email: data.email || '',\r\n                capitalSocial: data.capital_social,\r\n                situacao: data.situacao_cadastral ? data.descricao_situacao_cadastral : '',\r\n                logradouro: data.logradouro,\r\n                numero: data.numero,\r\n                complemento: data.complemento,\r\n                bairro: data.bairro,\r\n                municipio: data.municipio,\r\n                uf: data.uf,\r\n                cep: data.cep,\r\n                simples: data.opcao_pelo_simples ? 'Sim' : 'Não',\r\n                mei: data.opcao_pelo_mei ? 'Sim' : 'Não',\r\n                atividadePrincipal: data.cnae_fiscal ? data.cnae_fiscal.toString() : '',\r\n                atividadesSecundarias: (data.cnaes_secundarios && data.cnaes_secundarios.length)\r\n                    ? data.cnaes_secundarios.map(item => item.codigo + ' - ' + item.descricao).join(', ')\r\n                    : '',\r\n                socios: (data.qsa && data.qsa.length)\r\n                    ? data.qsa.map(item => item.nome_socio + ' (' + item.cnpj_cpf_do_socio + ')').join(', ')\r\n                    : 'Não informado'\r\n            };\r\n        },\r\n        validate: function (data) {\r\n            return data.razao_social !== undefined;\r\n        }\r\n    },\r\n    {\r\n        name: 'BrasilAPI',\r\n        url: 'https://brasilapi.com.br/api/cnpj/v1/',\r\n        mapping: function (data) {\r\n            return {\r\n                razaoSocial: data.razao_social,\r\n                nomeFantasia: data.nome_fantasia,\r\n                dataInicio: data.data_inicio_atividade,\r\n                telefone1: data.ddd_telefone_1,\r\n                email: data.email,\r\n                capitalSocial: data.capital_social,\r\n                situacao: data.descricao_situacao_cadastral,\r\n                logradouro: data.logradouro,\r\n                numero: data.numero,\r\n                complemento: data.complemento,\r\n                bairro: data.bairro,\r\n                municipio: data.municipio,\r\n                uf: data.uf,\r\n                cep: data.cep,\r\n                simples: data.opcao_pelo_simples ? 'Sim' : 'Não',\r\n                mei: data.opcao_pelo_mei ? 'Sim' : 'Não',\r\n                atividadePrincipal: data.cnae_fiscal ? data.cnae_fiscal + ' - ' + data.cnae_fiscal_descricao : '',\r\n                atividadesSecundarias: data.cnaes_secundarios?.map(item => item.codigo + ' - ' + item.descricao).join(', ') || '',\r\n                socios: data.qsa?.map(item => item.nome_socio + ' (' + item.cnpj_cpf_do_socio + ')').join(', ') || 'Não informado'\r\n            };\r\n        },\r\n        validate: function (data) {\r\n            return data.razao_social !== undefined;\r\n        }\r\n    },\r\n    {\r\n        name: 'Invertexto',\r\n        url: 'https://api.invertexto.com/v1/cnpj/',\r\n        token: '16473|OtgHBLImQHYqSJIIbFZy3FEeCWRADS4w',\r\n        mapping: function (data) {\r\n            return {\r\n                razaoSocial: data.razao_social,\r\n                nomeFantasia: data.nome_fantasia,\r\n                dataInicio: data.data_inicio,\r\n                telefone1: data.telefone1,\r\n                email: data.email,\r\n                capitalSocial: data.capital_social,\r\n                situacao: data.situacao?.nome || '',\r\n                logradouro: data.endereco?.logradouro || '',\r\n                numero: data.endereco?.numero || '',\r\n                complemento: data.endereco?.complemento || '',\r\n                bairro: data.endereco?.bairro || '',\r\n                municipio: data.endereco?.municipio || '',\r\n                uf: data.endereco?.uf || '',\r\n                cep: data.endereco?.cep || '',\r\n                simples: data.simples?.optante_simples === \"S\" ? 'Sim' : 'Não',\r\n                mei: data.mei?.optante_mei === \"S\" ? 'Sim' : 'Não',\r\n                atividadePrincipal: data.atividade_principal?.codigo + ' - ' + data.atividade_principal?.descricao || '',\r\n                atividadesSecundarias: data.atividades_secundarias?.map(item => item.codigo + ' - ' + item.descricao).join(', ') || '',\r\n                socios: data.socios?.map(item => item.nome + ' (' + item.cpf_cnpj + ')').join(', ') || 'Não informado'\r\n            };\r\n        },\r\n        name: 'CNPJA',\r\n        url: 'https://cnpja.com/api/open/',\r\n        mapping: function (data) {\r\n            const company = data.company || {};\r\n            return {\r\n                razaoSocial: company.name || '',\r\n                nomeFantasia: company.name || '',\r\n                dataInicio: data.founded || '',\r\n                telefone1: (data.phones && data.phones.length) ? data.phones[0].area + ' ' + data.phones[0].number : '',\r\n                email: (data.emails && data.emails.length) ? data.emails[0].address : '',\r\n                capitalSocial: company.equity || '',\r\n                situacao: data.status && data.status.text ? data.status.text : '',\r\n                logradouro: '',\r\n                numero: '',\r\n                complemento: '',\r\n                bairro: '',\r\n                municipio: '',\r\n                uf: '',\r\n                cep: '',\r\n                simples: (company.simples && company.simples.optant) ? 'Sim' : 'Não',\r\n                mei: (company.simei && company.simei.optant) ? 'Sim' : 'Não',\r\n                atividadePrincipal: data.mainActivity\r\n                    ? data.mainActivity.id + ' - ' + data.mainActivity.text\r\n                    : '',\r\n                atividadesSecundarias: (data.sideActivities && data.sideActivities.length)\r\n                    ? data.sideActivities.map(item => item.id + ' - ' + item.text).join(', ')\r\n                    : '',\r\n                socios: (company.members && company.members.length)\r\n                    ? company.members.map(item => item.person.name + ' (' + item.person.taxId + ')').join(', ')\r\n                    : 'Não informado'\r\n            };\r\n        },\r\n        validate: function (data) {\r\n            return data.razao_social !== undefined;\r\n        }\r\n    }\r\n];\r\n\r\nfunction consultarCNPJ(cnpj, index = 0) {\r\n    if (index >= apiEndpoints.length) {\r\n        alert('Nenhuma FORNECEDOR retornou dados válidos.');\r\n        return;\r\n    }\r\n\r\n    const api = apiEndpoints[index];\r\n    const url = buildApiUrl(api, cnpj);\r\n\r\n    fetch(url)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`Erro HTTP ${response.status} na API ${api.name}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (!api.validate(data)) {\r\n                throw new Error(`Dados inválidos no FORNECEDOR ${api.name}`);\r\n            }\r\n\r\n            console.log(`Dados retornados da API ${api.name}`);\r\n            preencherFormulario(api.mapping(data));\r\n        })\r\n        .catch(error => {\r\n            console.error(`Erro na API ${api.name}: ${error.message}`);\r\n            consultarCNPJ(cnpj, index + 1); // Tenta a próxima API\r\n        });\r\n}\r\n\r\nfunction preencherFormulario(data) {\r\n    document.getElementById('razaoSocial').value = data.razaoSocial || '';\r\n    document.getElementById('nomeFantasia').value = data.nomeFantasia || '';\r\n    document.getElementById('dataInicio').value = data.dataInicio || '';\r\n    document.getElementById('telefone1').value = data.telefone1 || '';\r\n    document.getElementById('email').value = data.email || '';\r\n    document.getElementById('capitalSocial').value = data.capitalSocial || '';\r\n    document.getElementById('situacao').value = data.situacao || '';\r\n    document.getElementById('logradouro').value = data.logradouro || '';\r\n    document.getElementById('numero').value = data.numero || '';\r\n    document.getElementById('complemento').value = data.complemento || '';\r\n    document.getElementById('bairro').value = data.bairro || '';\r\n    document.getElementById('municipio').value = data.municipio || '';\r\n    document.getElementById('uf').value = data.uf || '';\r\n    document.getElementById('cep').value = data.cep || '';\r\n    document.getElementById('simples').value = data.simples || '';\r\n    document.getElementById('mei').value = data.mei || '';\r\n    document.getElementById('atividadePrincipal').value = data.atividadePrincipal || '';\r\n    document.getElementById('atividadesSecundarias').value = data.atividadesSecundarias || '';\r\n    document.getElementById('socios').value = data.socios || '';\r\n}\r\n</script >\r\n\r\n\r\n    <script>\r\n\r\n        function limpa_formulário_cep() {\r\n            //Limpa valores do formulário de cep.\r\n            document.getElementById('rua').value = (\"\");\r\n        document.getElementById('bairro').value = (\"\");\r\n        document.getElementById('cidade').value = (\"\");\r\n        document.getElementById('uf').value = (\"\");\r\n        document.getElementById('ibge').value = (\"\");\r\n}\r\n\r\n        function meu_callback(conteudo) {\r\n    if (!(\"erro\" in conteudo)) {\r\n            //Atualiza os campos com os valores.\r\n            document.getElementById('rua').value = (conteudo.logradouro);\r\n        document.getElementById('bairro').value = (conteudo.bairro);\r\n        document.getElementById('cidade').value = (conteudo.localidade);\r\n        document.getElementById('uf').value = (conteudo.uf);\r\n        document.getElementById('ibge').value = (conteudo.ibge);\r\n    } //end if.\r\n        else {\r\n            //CEP não Encontrado.\r\n            limpa_formulário_cep();\r\n        alert(\"CEP não encontrado.\");\r\n    }\r\n}\r\n\r\n        function pesquisacep(valor) {\r\n\r\n    //Nova variável \"cep\" somente com dígitos.\r\n    var cep = valor.replace(/\\D/g, '');\r\n\r\n        //Verifica se campo cep possui valor informado.\r\n        if (cep != \"\") {\r\n\r\n        //Expressão regular para validar o CEP.\r\n        var validacep = /^[0-9]{8}$/;\r\n\r\n        //Valida o formato do CEP.\r\n        if (validacep.test(cep)) {\r\n\r\n            //Preenche os campos com \"...\" enquanto consulta webservice.\r\n            document.getElementById('rua').value = \"...\";\r\n        document.getElementById('bairro').value = \"...\";\r\n        document.getElementById('cidade').value = \"...\";\r\n        document.getElementById('uf').value = \"...\";\r\n        document.getElementById('ibge').value = \"...\";\r\n\r\n        //Cria um elemento javascript.\r\n        var script = document.createElement('script');\r\n\r\n        //Sincroniza com o callback.\r\n        script.src = 'https://viacep.com.br/ws/' + cep + '/json/?callback=meu_callback';\r\n\r\n        //Insere script no documento e carrega o conteúdo.\r\n        document.body.appendChild(script);\r\n\r\n        } //end if.\r\n        else {\r\n            //cep é inválido.\r\n            limpa_formulário_cep();\r\n        alert(\"Formato de CEP inválido.\");\r\n        }\r\n    } //end if.\r\n        else {\r\n            //cep sem valor, limpa formulário.\r\n            limpa_formulário_cep();\r\n    }\r\n};"
        }
    ]
}